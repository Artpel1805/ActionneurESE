
ActionneurESE_IDE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009974  080001e0  080001e0  000101e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000304  08009b54  08009b54  00019b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08009e58  08009e58  00020234  2**0
                  CONTENTS
  4 .ARM          00000008  08009e58  08009e58  00019e58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08009e60  08009e60  00020234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08009e60  08009e60  00019e60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009e64  08009e64  00019e64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000234  20000000  08009e68  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000228  20000234  0800a09c  00020234  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000045c  0800a09c  0002045c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020234  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001af51  00000000  00000000  00020264  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000351a  00000000  00000000  0003b1b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000015f0  00000000  00000000  0003e6d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001478  00000000  00000000  0003fcc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002a340  00000000  00000000  00041138  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001abcb  00000000  00000000  0006b478  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00113f57  00000000  00000000  00086043  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00199f9a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000069e4  00000000  00000000  00199fec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	; (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	; (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	; (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	20000234 	.word	0x20000234
 80001fc:	00000000 	.word	0x00000000
 8000200:	08009b3c 	.word	0x08009b3c

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	; (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	; (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	; (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	20000238 	.word	0x20000238
 800021c:	08009b3c 	.word	0x08009b3c

08000220 <strcmp>:
 8000220:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000224:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000228:	2a01      	cmp	r2, #1
 800022a:	bf28      	it	cs
 800022c:	429a      	cmpcs	r2, r3
 800022e:	d0f7      	beq.n	8000220 <strcmp>
 8000230:	1ad0      	subs	r0, r2, r3
 8000232:	4770      	bx	lr

08000234 <strlen>:
 8000234:	4603      	mov	r3, r0
 8000236:	f813 2b01 	ldrb.w	r2, [r3], #1
 800023a:	2a00      	cmp	r2, #0
 800023c:	d1fb      	bne.n	8000236 <strlen+0x2>
 800023e:	1a18      	subs	r0, r3, r0
 8000240:	3801      	subs	r0, #1
 8000242:	4770      	bx	lr
	...

08000250 <memchr>:
 8000250:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000254:	2a10      	cmp	r2, #16
 8000256:	db2b      	blt.n	80002b0 <memchr+0x60>
 8000258:	f010 0f07 	tst.w	r0, #7
 800025c:	d008      	beq.n	8000270 <memchr+0x20>
 800025e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000262:	3a01      	subs	r2, #1
 8000264:	428b      	cmp	r3, r1
 8000266:	d02d      	beq.n	80002c4 <memchr+0x74>
 8000268:	f010 0f07 	tst.w	r0, #7
 800026c:	b342      	cbz	r2, 80002c0 <memchr+0x70>
 800026e:	d1f6      	bne.n	800025e <memchr+0xe>
 8000270:	b4f0      	push	{r4, r5, r6, r7}
 8000272:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000276:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800027a:	f022 0407 	bic.w	r4, r2, #7
 800027e:	f07f 0700 	mvns.w	r7, #0
 8000282:	2300      	movs	r3, #0
 8000284:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000288:	3c08      	subs	r4, #8
 800028a:	ea85 0501 	eor.w	r5, r5, r1
 800028e:	ea86 0601 	eor.w	r6, r6, r1
 8000292:	fa85 f547 	uadd8	r5, r5, r7
 8000296:	faa3 f587 	sel	r5, r3, r7
 800029a:	fa86 f647 	uadd8	r6, r6, r7
 800029e:	faa5 f687 	sel	r6, r5, r7
 80002a2:	b98e      	cbnz	r6, 80002c8 <memchr+0x78>
 80002a4:	d1ee      	bne.n	8000284 <memchr+0x34>
 80002a6:	bcf0      	pop	{r4, r5, r6, r7}
 80002a8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002ac:	f002 0207 	and.w	r2, r2, #7
 80002b0:	b132      	cbz	r2, 80002c0 <memchr+0x70>
 80002b2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002b6:	3a01      	subs	r2, #1
 80002b8:	ea83 0301 	eor.w	r3, r3, r1
 80002bc:	b113      	cbz	r3, 80002c4 <memchr+0x74>
 80002be:	d1f8      	bne.n	80002b2 <memchr+0x62>
 80002c0:	2000      	movs	r0, #0
 80002c2:	4770      	bx	lr
 80002c4:	3801      	subs	r0, #1
 80002c6:	4770      	bx	lr
 80002c8:	2d00      	cmp	r5, #0
 80002ca:	bf06      	itte	eq
 80002cc:	4635      	moveq	r5, r6
 80002ce:	3803      	subeq	r0, #3
 80002d0:	3807      	subne	r0, #7
 80002d2:	f015 0f01 	tst.w	r5, #1
 80002d6:	d107      	bne.n	80002e8 <memchr+0x98>
 80002d8:	3001      	adds	r0, #1
 80002da:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002de:	bf02      	ittt	eq
 80002e0:	3001      	addeq	r0, #1
 80002e2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002e6:	3001      	addeq	r0, #1
 80002e8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ea:	3801      	subs	r0, #1
 80002ec:	4770      	bx	lr
 80002ee:	bf00      	nop

080002f0 <__aeabi_drsub>:
 80002f0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002f4:	e002      	b.n	80002fc <__adddf3>
 80002f6:	bf00      	nop

080002f8 <__aeabi_dsub>:
 80002f8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002fc <__adddf3>:
 80002fc:	b530      	push	{r4, r5, lr}
 80002fe:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000302:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000306:	ea94 0f05 	teq	r4, r5
 800030a:	bf08      	it	eq
 800030c:	ea90 0f02 	teqeq	r0, r2
 8000310:	bf1f      	itttt	ne
 8000312:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000316:	ea55 0c02 	orrsne.w	ip, r5, r2
 800031a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800031e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000322:	f000 80e2 	beq.w	80004ea <__adddf3+0x1ee>
 8000326:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800032a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800032e:	bfb8      	it	lt
 8000330:	426d      	neglt	r5, r5
 8000332:	dd0c      	ble.n	800034e <__adddf3+0x52>
 8000334:	442c      	add	r4, r5
 8000336:	ea80 0202 	eor.w	r2, r0, r2
 800033a:	ea81 0303 	eor.w	r3, r1, r3
 800033e:	ea82 0000 	eor.w	r0, r2, r0
 8000342:	ea83 0101 	eor.w	r1, r3, r1
 8000346:	ea80 0202 	eor.w	r2, r0, r2
 800034a:	ea81 0303 	eor.w	r3, r1, r3
 800034e:	2d36      	cmp	r5, #54	; 0x36
 8000350:	bf88      	it	hi
 8000352:	bd30      	pophi	{r4, r5, pc}
 8000354:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000358:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800035c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000360:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000364:	d002      	beq.n	800036c <__adddf3+0x70>
 8000366:	4240      	negs	r0, r0
 8000368:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800036c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000370:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000374:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000378:	d002      	beq.n	8000380 <__adddf3+0x84>
 800037a:	4252      	negs	r2, r2
 800037c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000380:	ea94 0f05 	teq	r4, r5
 8000384:	f000 80a7 	beq.w	80004d6 <__adddf3+0x1da>
 8000388:	f1a4 0401 	sub.w	r4, r4, #1
 800038c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000390:	db0d      	blt.n	80003ae <__adddf3+0xb2>
 8000392:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000396:	fa22 f205 	lsr.w	r2, r2, r5
 800039a:	1880      	adds	r0, r0, r2
 800039c:	f141 0100 	adc.w	r1, r1, #0
 80003a0:	fa03 f20e 	lsl.w	r2, r3, lr
 80003a4:	1880      	adds	r0, r0, r2
 80003a6:	fa43 f305 	asr.w	r3, r3, r5
 80003aa:	4159      	adcs	r1, r3
 80003ac:	e00e      	b.n	80003cc <__adddf3+0xd0>
 80003ae:	f1a5 0520 	sub.w	r5, r5, #32
 80003b2:	f10e 0e20 	add.w	lr, lr, #32
 80003b6:	2a01      	cmp	r2, #1
 80003b8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003bc:	bf28      	it	cs
 80003be:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003c2:	fa43 f305 	asr.w	r3, r3, r5
 80003c6:	18c0      	adds	r0, r0, r3
 80003c8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003cc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003d0:	d507      	bpl.n	80003e2 <__adddf3+0xe6>
 80003d2:	f04f 0e00 	mov.w	lr, #0
 80003d6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003da:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003de:	eb6e 0101 	sbc.w	r1, lr, r1
 80003e2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003e6:	d31b      	bcc.n	8000420 <__adddf3+0x124>
 80003e8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003ec:	d30c      	bcc.n	8000408 <__adddf3+0x10c>
 80003ee:	0849      	lsrs	r1, r1, #1
 80003f0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003f4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003f8:	f104 0401 	add.w	r4, r4, #1
 80003fc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000400:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000404:	f080 809a 	bcs.w	800053c <__adddf3+0x240>
 8000408:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800040c:	bf08      	it	eq
 800040e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000412:	f150 0000 	adcs.w	r0, r0, #0
 8000416:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800041a:	ea41 0105 	orr.w	r1, r1, r5
 800041e:	bd30      	pop	{r4, r5, pc}
 8000420:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000424:	4140      	adcs	r0, r0
 8000426:	eb41 0101 	adc.w	r1, r1, r1
 800042a:	3c01      	subs	r4, #1
 800042c:	bf28      	it	cs
 800042e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000432:	d2e9      	bcs.n	8000408 <__adddf3+0x10c>
 8000434:	f091 0f00 	teq	r1, #0
 8000438:	bf04      	itt	eq
 800043a:	4601      	moveq	r1, r0
 800043c:	2000      	moveq	r0, #0
 800043e:	fab1 f381 	clz	r3, r1
 8000442:	bf08      	it	eq
 8000444:	3320      	addeq	r3, #32
 8000446:	f1a3 030b 	sub.w	r3, r3, #11
 800044a:	f1b3 0220 	subs.w	r2, r3, #32
 800044e:	da0c      	bge.n	800046a <__adddf3+0x16e>
 8000450:	320c      	adds	r2, #12
 8000452:	dd08      	ble.n	8000466 <__adddf3+0x16a>
 8000454:	f102 0c14 	add.w	ip, r2, #20
 8000458:	f1c2 020c 	rsb	r2, r2, #12
 800045c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000460:	fa21 f102 	lsr.w	r1, r1, r2
 8000464:	e00c      	b.n	8000480 <__adddf3+0x184>
 8000466:	f102 0214 	add.w	r2, r2, #20
 800046a:	bfd8      	it	le
 800046c:	f1c2 0c20 	rsble	ip, r2, #32
 8000470:	fa01 f102 	lsl.w	r1, r1, r2
 8000474:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000478:	bfdc      	itt	le
 800047a:	ea41 010c 	orrle.w	r1, r1, ip
 800047e:	4090      	lslle	r0, r2
 8000480:	1ae4      	subs	r4, r4, r3
 8000482:	bfa2      	ittt	ge
 8000484:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000488:	4329      	orrge	r1, r5
 800048a:	bd30      	popge	{r4, r5, pc}
 800048c:	ea6f 0404 	mvn.w	r4, r4
 8000490:	3c1f      	subs	r4, #31
 8000492:	da1c      	bge.n	80004ce <__adddf3+0x1d2>
 8000494:	340c      	adds	r4, #12
 8000496:	dc0e      	bgt.n	80004b6 <__adddf3+0x1ba>
 8000498:	f104 0414 	add.w	r4, r4, #20
 800049c:	f1c4 0220 	rsb	r2, r4, #32
 80004a0:	fa20 f004 	lsr.w	r0, r0, r4
 80004a4:	fa01 f302 	lsl.w	r3, r1, r2
 80004a8:	ea40 0003 	orr.w	r0, r0, r3
 80004ac:	fa21 f304 	lsr.w	r3, r1, r4
 80004b0:	ea45 0103 	orr.w	r1, r5, r3
 80004b4:	bd30      	pop	{r4, r5, pc}
 80004b6:	f1c4 040c 	rsb	r4, r4, #12
 80004ba:	f1c4 0220 	rsb	r2, r4, #32
 80004be:	fa20 f002 	lsr.w	r0, r0, r2
 80004c2:	fa01 f304 	lsl.w	r3, r1, r4
 80004c6:	ea40 0003 	orr.w	r0, r0, r3
 80004ca:	4629      	mov	r1, r5
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	fa21 f004 	lsr.w	r0, r1, r4
 80004d2:	4629      	mov	r1, r5
 80004d4:	bd30      	pop	{r4, r5, pc}
 80004d6:	f094 0f00 	teq	r4, #0
 80004da:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004de:	bf06      	itte	eq
 80004e0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004e4:	3401      	addeq	r4, #1
 80004e6:	3d01      	subne	r5, #1
 80004e8:	e74e      	b.n	8000388 <__adddf3+0x8c>
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf18      	it	ne
 80004f0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004f4:	d029      	beq.n	800054a <__adddf3+0x24e>
 80004f6:	ea94 0f05 	teq	r4, r5
 80004fa:	bf08      	it	eq
 80004fc:	ea90 0f02 	teqeq	r0, r2
 8000500:	d005      	beq.n	800050e <__adddf3+0x212>
 8000502:	ea54 0c00 	orrs.w	ip, r4, r0
 8000506:	bf04      	itt	eq
 8000508:	4619      	moveq	r1, r3
 800050a:	4610      	moveq	r0, r2
 800050c:	bd30      	pop	{r4, r5, pc}
 800050e:	ea91 0f03 	teq	r1, r3
 8000512:	bf1e      	ittt	ne
 8000514:	2100      	movne	r1, #0
 8000516:	2000      	movne	r0, #0
 8000518:	bd30      	popne	{r4, r5, pc}
 800051a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800051e:	d105      	bne.n	800052c <__adddf3+0x230>
 8000520:	0040      	lsls	r0, r0, #1
 8000522:	4149      	adcs	r1, r1
 8000524:	bf28      	it	cs
 8000526:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800052a:	bd30      	pop	{r4, r5, pc}
 800052c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000530:	bf3c      	itt	cc
 8000532:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000536:	bd30      	popcc	{r4, r5, pc}
 8000538:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800053c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000540:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000544:	f04f 0000 	mov.w	r0, #0
 8000548:	bd30      	pop	{r4, r5, pc}
 800054a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800054e:	bf1a      	itte	ne
 8000550:	4619      	movne	r1, r3
 8000552:	4610      	movne	r0, r2
 8000554:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000558:	bf1c      	itt	ne
 800055a:	460b      	movne	r3, r1
 800055c:	4602      	movne	r2, r0
 800055e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000562:	bf06      	itte	eq
 8000564:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000568:	ea91 0f03 	teqeq	r1, r3
 800056c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000570:	bd30      	pop	{r4, r5, pc}
 8000572:	bf00      	nop

08000574 <__aeabi_ui2d>:
 8000574:	f090 0f00 	teq	r0, #0
 8000578:	bf04      	itt	eq
 800057a:	2100      	moveq	r1, #0
 800057c:	4770      	bxeq	lr
 800057e:	b530      	push	{r4, r5, lr}
 8000580:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000584:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000588:	f04f 0500 	mov.w	r5, #0
 800058c:	f04f 0100 	mov.w	r1, #0
 8000590:	e750      	b.n	8000434 <__adddf3+0x138>
 8000592:	bf00      	nop

08000594 <__aeabi_i2d>:
 8000594:	f090 0f00 	teq	r0, #0
 8000598:	bf04      	itt	eq
 800059a:	2100      	moveq	r1, #0
 800059c:	4770      	bxeq	lr
 800059e:	b530      	push	{r4, r5, lr}
 80005a0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005a4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005a8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80005ac:	bf48      	it	mi
 80005ae:	4240      	negmi	r0, r0
 80005b0:	f04f 0100 	mov.w	r1, #0
 80005b4:	e73e      	b.n	8000434 <__adddf3+0x138>
 80005b6:	bf00      	nop

080005b8 <__aeabi_f2d>:
 80005b8:	0042      	lsls	r2, r0, #1
 80005ba:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005be:	ea4f 0131 	mov.w	r1, r1, rrx
 80005c2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005c6:	bf1f      	itttt	ne
 80005c8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80005cc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005d0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005d4:	4770      	bxne	lr
 80005d6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005da:	bf08      	it	eq
 80005dc:	4770      	bxeq	lr
 80005de:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005e2:	bf04      	itt	eq
 80005e4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005e8:	4770      	bxeq	lr
 80005ea:	b530      	push	{r4, r5, lr}
 80005ec:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005f4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f8:	e71c      	b.n	8000434 <__adddf3+0x138>
 80005fa:	bf00      	nop

080005fc <__aeabi_ul2d>:
 80005fc:	ea50 0201 	orrs.w	r2, r0, r1
 8000600:	bf08      	it	eq
 8000602:	4770      	bxeq	lr
 8000604:	b530      	push	{r4, r5, lr}
 8000606:	f04f 0500 	mov.w	r5, #0
 800060a:	e00a      	b.n	8000622 <__aeabi_l2d+0x16>

0800060c <__aeabi_l2d>:
 800060c:	ea50 0201 	orrs.w	r2, r0, r1
 8000610:	bf08      	it	eq
 8000612:	4770      	bxeq	lr
 8000614:	b530      	push	{r4, r5, lr}
 8000616:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800061a:	d502      	bpl.n	8000622 <__aeabi_l2d+0x16>
 800061c:	4240      	negs	r0, r0
 800061e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000622:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000626:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800062a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800062e:	f43f aed8 	beq.w	80003e2 <__adddf3+0xe6>
 8000632:	f04f 0203 	mov.w	r2, #3
 8000636:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800063a:	bf18      	it	ne
 800063c:	3203      	addne	r2, #3
 800063e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000642:	bf18      	it	ne
 8000644:	3203      	addne	r2, #3
 8000646:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800064a:	f1c2 0320 	rsb	r3, r2, #32
 800064e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000652:	fa20 f002 	lsr.w	r0, r0, r2
 8000656:	fa01 fe03 	lsl.w	lr, r1, r3
 800065a:	ea40 000e 	orr.w	r0, r0, lr
 800065e:	fa21 f102 	lsr.w	r1, r1, r2
 8000662:	4414      	add	r4, r2
 8000664:	e6bd      	b.n	80003e2 <__adddf3+0xe6>
 8000666:	bf00      	nop

08000668 <__aeabi_dmul>:
 8000668:	b570      	push	{r4, r5, r6, lr}
 800066a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800066e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000672:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000676:	bf1d      	ittte	ne
 8000678:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800067c:	ea94 0f0c 	teqne	r4, ip
 8000680:	ea95 0f0c 	teqne	r5, ip
 8000684:	f000 f8de 	bleq	8000844 <__aeabi_dmul+0x1dc>
 8000688:	442c      	add	r4, r5
 800068a:	ea81 0603 	eor.w	r6, r1, r3
 800068e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000692:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000696:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800069a:	bf18      	it	ne
 800069c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80006a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006a4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80006a8:	d038      	beq.n	800071c <__aeabi_dmul+0xb4>
 80006aa:	fba0 ce02 	umull	ip, lr, r0, r2
 80006ae:	f04f 0500 	mov.w	r5, #0
 80006b2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80006b6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80006ba:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006be:	f04f 0600 	mov.w	r6, #0
 80006c2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006c6:	f09c 0f00 	teq	ip, #0
 80006ca:	bf18      	it	ne
 80006cc:	f04e 0e01 	orrne.w	lr, lr, #1
 80006d0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006d4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006d8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006dc:	d204      	bcs.n	80006e8 <__aeabi_dmul+0x80>
 80006de:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006e2:	416d      	adcs	r5, r5
 80006e4:	eb46 0606 	adc.w	r6, r6, r6
 80006e8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ec:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006f0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006f4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006f8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006fc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000700:	bf88      	it	hi
 8000702:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000706:	d81e      	bhi.n	8000746 <__aeabi_dmul+0xde>
 8000708:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800070c:	bf08      	it	eq
 800070e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000712:	f150 0000 	adcs.w	r0, r0, #0
 8000716:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000720:	ea46 0101 	orr.w	r1, r6, r1
 8000724:	ea40 0002 	orr.w	r0, r0, r2
 8000728:	ea81 0103 	eor.w	r1, r1, r3
 800072c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000730:	bfc2      	ittt	gt
 8000732:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000736:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800073a:	bd70      	popgt	{r4, r5, r6, pc}
 800073c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000740:	f04f 0e00 	mov.w	lr, #0
 8000744:	3c01      	subs	r4, #1
 8000746:	f300 80ab 	bgt.w	80008a0 <__aeabi_dmul+0x238>
 800074a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800074e:	bfde      	ittt	le
 8000750:	2000      	movle	r0, #0
 8000752:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000756:	bd70      	pople	{r4, r5, r6, pc}
 8000758:	f1c4 0400 	rsb	r4, r4, #0
 800075c:	3c20      	subs	r4, #32
 800075e:	da35      	bge.n	80007cc <__aeabi_dmul+0x164>
 8000760:	340c      	adds	r4, #12
 8000762:	dc1b      	bgt.n	800079c <__aeabi_dmul+0x134>
 8000764:	f104 0414 	add.w	r4, r4, #20
 8000768:	f1c4 0520 	rsb	r5, r4, #32
 800076c:	fa00 f305 	lsl.w	r3, r0, r5
 8000770:	fa20 f004 	lsr.w	r0, r0, r4
 8000774:	fa01 f205 	lsl.w	r2, r1, r5
 8000778:	ea40 0002 	orr.w	r0, r0, r2
 800077c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000780:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000784:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000788:	fa21 f604 	lsr.w	r6, r1, r4
 800078c:	eb42 0106 	adc.w	r1, r2, r6
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 040c 	rsb	r4, r4, #12
 80007a0:	f1c4 0520 	rsb	r5, r4, #32
 80007a4:	fa00 f304 	lsl.w	r3, r0, r4
 80007a8:	fa20 f005 	lsr.w	r0, r0, r5
 80007ac:	fa01 f204 	lsl.w	r2, r1, r4
 80007b0:	ea40 0002 	orr.w	r0, r0, r2
 80007b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007bc:	f141 0100 	adc.w	r1, r1, #0
 80007c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007c4:	bf08      	it	eq
 80007c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007ca:	bd70      	pop	{r4, r5, r6, pc}
 80007cc:	f1c4 0520 	rsb	r5, r4, #32
 80007d0:	fa00 f205 	lsl.w	r2, r0, r5
 80007d4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007d8:	fa20 f304 	lsr.w	r3, r0, r4
 80007dc:	fa01 f205 	lsl.w	r2, r1, r5
 80007e0:	ea43 0302 	orr.w	r3, r3, r2
 80007e4:	fa21 f004 	lsr.w	r0, r1, r4
 80007e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ec:	fa21 f204 	lsr.w	r2, r1, r4
 80007f0:	ea20 0002 	bic.w	r0, r0, r2
 80007f4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007fc:	bf08      	it	eq
 80007fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000802:	bd70      	pop	{r4, r5, r6, pc}
 8000804:	f094 0f00 	teq	r4, #0
 8000808:	d10f      	bne.n	800082a <__aeabi_dmul+0x1c2>
 800080a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800080e:	0040      	lsls	r0, r0, #1
 8000810:	eb41 0101 	adc.w	r1, r1, r1
 8000814:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000818:	bf08      	it	eq
 800081a:	3c01      	subeq	r4, #1
 800081c:	d0f7      	beq.n	800080e <__aeabi_dmul+0x1a6>
 800081e:	ea41 0106 	orr.w	r1, r1, r6
 8000822:	f095 0f00 	teq	r5, #0
 8000826:	bf18      	it	ne
 8000828:	4770      	bxne	lr
 800082a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800082e:	0052      	lsls	r2, r2, #1
 8000830:	eb43 0303 	adc.w	r3, r3, r3
 8000834:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000838:	bf08      	it	eq
 800083a:	3d01      	subeq	r5, #1
 800083c:	d0f7      	beq.n	800082e <__aeabi_dmul+0x1c6>
 800083e:	ea43 0306 	orr.w	r3, r3, r6
 8000842:	4770      	bx	lr
 8000844:	ea94 0f0c 	teq	r4, ip
 8000848:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800084c:	bf18      	it	ne
 800084e:	ea95 0f0c 	teqne	r5, ip
 8000852:	d00c      	beq.n	800086e <__aeabi_dmul+0x206>
 8000854:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000858:	bf18      	it	ne
 800085a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800085e:	d1d1      	bne.n	8000804 <__aeabi_dmul+0x19c>
 8000860:	ea81 0103 	eor.w	r1, r1, r3
 8000864:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000868:	f04f 0000 	mov.w	r0, #0
 800086c:	bd70      	pop	{r4, r5, r6, pc}
 800086e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000872:	bf06      	itte	eq
 8000874:	4610      	moveq	r0, r2
 8000876:	4619      	moveq	r1, r3
 8000878:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800087c:	d019      	beq.n	80008b2 <__aeabi_dmul+0x24a>
 800087e:	ea94 0f0c 	teq	r4, ip
 8000882:	d102      	bne.n	800088a <__aeabi_dmul+0x222>
 8000884:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000888:	d113      	bne.n	80008b2 <__aeabi_dmul+0x24a>
 800088a:	ea95 0f0c 	teq	r5, ip
 800088e:	d105      	bne.n	800089c <__aeabi_dmul+0x234>
 8000890:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000894:	bf1c      	itt	ne
 8000896:	4610      	movne	r0, r2
 8000898:	4619      	movne	r1, r3
 800089a:	d10a      	bne.n	80008b2 <__aeabi_dmul+0x24a>
 800089c:	ea81 0103 	eor.w	r1, r1, r3
 80008a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80008a4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80008a8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80008ac:	f04f 0000 	mov.w	r0, #0
 80008b0:	bd70      	pop	{r4, r5, r6, pc}
 80008b2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80008b6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80008ba:	bd70      	pop	{r4, r5, r6, pc}

080008bc <__aeabi_ddiv>:
 80008bc:	b570      	push	{r4, r5, r6, lr}
 80008be:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80008c2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80008c6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008ca:	bf1d      	ittte	ne
 80008cc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008d0:	ea94 0f0c 	teqne	r4, ip
 80008d4:	ea95 0f0c 	teqne	r5, ip
 80008d8:	f000 f8a7 	bleq	8000a2a <__aeabi_ddiv+0x16e>
 80008dc:	eba4 0405 	sub.w	r4, r4, r5
 80008e0:	ea81 0e03 	eor.w	lr, r1, r3
 80008e4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ec:	f000 8088 	beq.w	8000a00 <__aeabi_ddiv+0x144>
 80008f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008f4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008f8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008fc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000900:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000904:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000908:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800090c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000910:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000914:	429d      	cmp	r5, r3
 8000916:	bf08      	it	eq
 8000918:	4296      	cmpeq	r6, r2
 800091a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800091e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000922:	d202      	bcs.n	800092a <__aeabi_ddiv+0x6e>
 8000924:	085b      	lsrs	r3, r3, #1
 8000926:	ea4f 0232 	mov.w	r2, r2, rrx
 800092a:	1ab6      	subs	r6, r6, r2
 800092c:	eb65 0503 	sbc.w	r5, r5, r3
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800093a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000968:	085b      	lsrs	r3, r3, #1
 800096a:	ea4f 0232 	mov.w	r2, r2, rrx
 800096e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000972:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000976:	bf22      	ittt	cs
 8000978:	1ab6      	subcs	r6, r6, r2
 800097a:	4675      	movcs	r5, lr
 800097c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000980:	085b      	lsrs	r3, r3, #1
 8000982:	ea4f 0232 	mov.w	r2, r2, rrx
 8000986:	ebb6 0e02 	subs.w	lr, r6, r2
 800098a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800098e:	bf22      	ittt	cs
 8000990:	1ab6      	subcs	r6, r6, r2
 8000992:	4675      	movcs	r5, lr
 8000994:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000998:	ea55 0e06 	orrs.w	lr, r5, r6
 800099c:	d018      	beq.n	80009d0 <__aeabi_ddiv+0x114>
 800099e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80009a2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80009a6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80009aa:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80009ae:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80009b2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80009b6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80009ba:	d1c0      	bne.n	800093e <__aeabi_ddiv+0x82>
 80009bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009c0:	d10b      	bne.n	80009da <__aeabi_ddiv+0x11e>
 80009c2:	ea41 0100 	orr.w	r1, r1, r0
 80009c6:	f04f 0000 	mov.w	r0, #0
 80009ca:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80009ce:	e7b6      	b.n	800093e <__aeabi_ddiv+0x82>
 80009d0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009d4:	bf04      	itt	eq
 80009d6:	4301      	orreq	r1, r0
 80009d8:	2000      	moveq	r0, #0
 80009da:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009de:	bf88      	it	hi
 80009e0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009e4:	f63f aeaf 	bhi.w	8000746 <__aeabi_dmul+0xde>
 80009e8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ec:	bf04      	itt	eq
 80009ee:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009f6:	f150 0000 	adcs.w	r0, r0, #0
 80009fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009fe:	bd70      	pop	{r4, r5, r6, pc}
 8000a00:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000a04:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a08:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a0c:	bfc2      	ittt	gt
 8000a0e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a12:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a16:	bd70      	popgt	{r4, r5, r6, pc}
 8000a18:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a1c:	f04f 0e00 	mov.w	lr, #0
 8000a20:	3c01      	subs	r4, #1
 8000a22:	e690      	b.n	8000746 <__aeabi_dmul+0xde>
 8000a24:	ea45 0e06 	orr.w	lr, r5, r6
 8000a28:	e68d      	b.n	8000746 <__aeabi_dmul+0xde>
 8000a2a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a2e:	ea94 0f0c 	teq	r4, ip
 8000a32:	bf08      	it	eq
 8000a34:	ea95 0f0c 	teqeq	r5, ip
 8000a38:	f43f af3b 	beq.w	80008b2 <__aeabi_dmul+0x24a>
 8000a3c:	ea94 0f0c 	teq	r4, ip
 8000a40:	d10a      	bne.n	8000a58 <__aeabi_ddiv+0x19c>
 8000a42:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a46:	f47f af34 	bne.w	80008b2 <__aeabi_dmul+0x24a>
 8000a4a:	ea95 0f0c 	teq	r5, ip
 8000a4e:	f47f af25 	bne.w	800089c <__aeabi_dmul+0x234>
 8000a52:	4610      	mov	r0, r2
 8000a54:	4619      	mov	r1, r3
 8000a56:	e72c      	b.n	80008b2 <__aeabi_dmul+0x24a>
 8000a58:	ea95 0f0c 	teq	r5, ip
 8000a5c:	d106      	bne.n	8000a6c <__aeabi_ddiv+0x1b0>
 8000a5e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a62:	f43f aefd 	beq.w	8000860 <__aeabi_dmul+0x1f8>
 8000a66:	4610      	mov	r0, r2
 8000a68:	4619      	mov	r1, r3
 8000a6a:	e722      	b.n	80008b2 <__aeabi_dmul+0x24a>
 8000a6c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a76:	f47f aec5 	bne.w	8000804 <__aeabi_dmul+0x19c>
 8000a7a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a7e:	f47f af0d 	bne.w	800089c <__aeabi_dmul+0x234>
 8000a82:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a86:	f47f aeeb 	bne.w	8000860 <__aeabi_dmul+0x1f8>
 8000a8a:	e712      	b.n	80008b2 <__aeabi_dmul+0x24a>

08000a8c <__aeabi_d2iz>:
 8000a8c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a90:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a94:	d215      	bcs.n	8000ac2 <__aeabi_d2iz+0x36>
 8000a96:	d511      	bpl.n	8000abc <__aeabi_d2iz+0x30>
 8000a98:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a9c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000aa0:	d912      	bls.n	8000ac8 <__aeabi_d2iz+0x3c>
 8000aa2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aaa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aae:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ab2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ab6:	bf18      	it	ne
 8000ab8:	4240      	negne	r0, r0
 8000aba:	4770      	bx	lr
 8000abc:	f04f 0000 	mov.w	r0, #0
 8000ac0:	4770      	bx	lr
 8000ac2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ac6:	d105      	bne.n	8000ad4 <__aeabi_d2iz+0x48>
 8000ac8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000acc:	bf08      	it	eq
 8000ace:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ad2:	4770      	bx	lr
 8000ad4:	f04f 0000 	mov.w	r0, #0
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop

08000adc <__aeabi_uldivmod>:
 8000adc:	b953      	cbnz	r3, 8000af4 <__aeabi_uldivmod+0x18>
 8000ade:	b94a      	cbnz	r2, 8000af4 <__aeabi_uldivmod+0x18>
 8000ae0:	2900      	cmp	r1, #0
 8000ae2:	bf08      	it	eq
 8000ae4:	2800      	cmpeq	r0, #0
 8000ae6:	bf1c      	itt	ne
 8000ae8:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000aec:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000af0:	f000 b974 	b.w	8000ddc <__aeabi_idiv0>
 8000af4:	f1ad 0c08 	sub.w	ip, sp, #8
 8000af8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000afc:	f000 f806 	bl	8000b0c <__udivmoddi4>
 8000b00:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b04:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b08:	b004      	add	sp, #16
 8000b0a:	4770      	bx	lr

08000b0c <__udivmoddi4>:
 8000b0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b10:	9d08      	ldr	r5, [sp, #32]
 8000b12:	4604      	mov	r4, r0
 8000b14:	468e      	mov	lr, r1
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d14d      	bne.n	8000bb6 <__udivmoddi4+0xaa>
 8000b1a:	428a      	cmp	r2, r1
 8000b1c:	4694      	mov	ip, r2
 8000b1e:	d969      	bls.n	8000bf4 <__udivmoddi4+0xe8>
 8000b20:	fab2 f282 	clz	r2, r2
 8000b24:	b152      	cbz	r2, 8000b3c <__udivmoddi4+0x30>
 8000b26:	fa01 f302 	lsl.w	r3, r1, r2
 8000b2a:	f1c2 0120 	rsb	r1, r2, #32
 8000b2e:	fa20 f101 	lsr.w	r1, r0, r1
 8000b32:	fa0c fc02 	lsl.w	ip, ip, r2
 8000b36:	ea41 0e03 	orr.w	lr, r1, r3
 8000b3a:	4094      	lsls	r4, r2
 8000b3c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000b40:	0c21      	lsrs	r1, r4, #16
 8000b42:	fbbe f6f8 	udiv	r6, lr, r8
 8000b46:	fa1f f78c 	uxth.w	r7, ip
 8000b4a:	fb08 e316 	mls	r3, r8, r6, lr
 8000b4e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000b52:	fb06 f107 	mul.w	r1, r6, r7
 8000b56:	4299      	cmp	r1, r3
 8000b58:	d90a      	bls.n	8000b70 <__udivmoddi4+0x64>
 8000b5a:	eb1c 0303 	adds.w	r3, ip, r3
 8000b5e:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000b62:	f080 811f 	bcs.w	8000da4 <__udivmoddi4+0x298>
 8000b66:	4299      	cmp	r1, r3
 8000b68:	f240 811c 	bls.w	8000da4 <__udivmoddi4+0x298>
 8000b6c:	3e02      	subs	r6, #2
 8000b6e:	4463      	add	r3, ip
 8000b70:	1a5b      	subs	r3, r3, r1
 8000b72:	b2a4      	uxth	r4, r4
 8000b74:	fbb3 f0f8 	udiv	r0, r3, r8
 8000b78:	fb08 3310 	mls	r3, r8, r0, r3
 8000b7c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000b80:	fb00 f707 	mul.w	r7, r0, r7
 8000b84:	42a7      	cmp	r7, r4
 8000b86:	d90a      	bls.n	8000b9e <__udivmoddi4+0x92>
 8000b88:	eb1c 0404 	adds.w	r4, ip, r4
 8000b8c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000b90:	f080 810a 	bcs.w	8000da8 <__udivmoddi4+0x29c>
 8000b94:	42a7      	cmp	r7, r4
 8000b96:	f240 8107 	bls.w	8000da8 <__udivmoddi4+0x29c>
 8000b9a:	4464      	add	r4, ip
 8000b9c:	3802      	subs	r0, #2
 8000b9e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000ba2:	1be4      	subs	r4, r4, r7
 8000ba4:	2600      	movs	r6, #0
 8000ba6:	b11d      	cbz	r5, 8000bb0 <__udivmoddi4+0xa4>
 8000ba8:	40d4      	lsrs	r4, r2
 8000baa:	2300      	movs	r3, #0
 8000bac:	e9c5 4300 	strd	r4, r3, [r5]
 8000bb0:	4631      	mov	r1, r6
 8000bb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bb6:	428b      	cmp	r3, r1
 8000bb8:	d909      	bls.n	8000bce <__udivmoddi4+0xc2>
 8000bba:	2d00      	cmp	r5, #0
 8000bbc:	f000 80ef 	beq.w	8000d9e <__udivmoddi4+0x292>
 8000bc0:	2600      	movs	r6, #0
 8000bc2:	e9c5 0100 	strd	r0, r1, [r5]
 8000bc6:	4630      	mov	r0, r6
 8000bc8:	4631      	mov	r1, r6
 8000bca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bce:	fab3 f683 	clz	r6, r3
 8000bd2:	2e00      	cmp	r6, #0
 8000bd4:	d14a      	bne.n	8000c6c <__udivmoddi4+0x160>
 8000bd6:	428b      	cmp	r3, r1
 8000bd8:	d302      	bcc.n	8000be0 <__udivmoddi4+0xd4>
 8000bda:	4282      	cmp	r2, r0
 8000bdc:	f200 80f9 	bhi.w	8000dd2 <__udivmoddi4+0x2c6>
 8000be0:	1a84      	subs	r4, r0, r2
 8000be2:	eb61 0303 	sbc.w	r3, r1, r3
 8000be6:	2001      	movs	r0, #1
 8000be8:	469e      	mov	lr, r3
 8000bea:	2d00      	cmp	r5, #0
 8000bec:	d0e0      	beq.n	8000bb0 <__udivmoddi4+0xa4>
 8000bee:	e9c5 4e00 	strd	r4, lr, [r5]
 8000bf2:	e7dd      	b.n	8000bb0 <__udivmoddi4+0xa4>
 8000bf4:	b902      	cbnz	r2, 8000bf8 <__udivmoddi4+0xec>
 8000bf6:	deff      	udf	#255	; 0xff
 8000bf8:	fab2 f282 	clz	r2, r2
 8000bfc:	2a00      	cmp	r2, #0
 8000bfe:	f040 8092 	bne.w	8000d26 <__udivmoddi4+0x21a>
 8000c02:	eba1 010c 	sub.w	r1, r1, ip
 8000c06:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c0a:	fa1f fe8c 	uxth.w	lr, ip
 8000c0e:	2601      	movs	r6, #1
 8000c10:	0c20      	lsrs	r0, r4, #16
 8000c12:	fbb1 f3f7 	udiv	r3, r1, r7
 8000c16:	fb07 1113 	mls	r1, r7, r3, r1
 8000c1a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000c1e:	fb0e f003 	mul.w	r0, lr, r3
 8000c22:	4288      	cmp	r0, r1
 8000c24:	d908      	bls.n	8000c38 <__udivmoddi4+0x12c>
 8000c26:	eb1c 0101 	adds.w	r1, ip, r1
 8000c2a:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000c2e:	d202      	bcs.n	8000c36 <__udivmoddi4+0x12a>
 8000c30:	4288      	cmp	r0, r1
 8000c32:	f200 80cb 	bhi.w	8000dcc <__udivmoddi4+0x2c0>
 8000c36:	4643      	mov	r3, r8
 8000c38:	1a09      	subs	r1, r1, r0
 8000c3a:	b2a4      	uxth	r4, r4
 8000c3c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c40:	fb07 1110 	mls	r1, r7, r0, r1
 8000c44:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000c48:	fb0e fe00 	mul.w	lr, lr, r0
 8000c4c:	45a6      	cmp	lr, r4
 8000c4e:	d908      	bls.n	8000c62 <__udivmoddi4+0x156>
 8000c50:	eb1c 0404 	adds.w	r4, ip, r4
 8000c54:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000c58:	d202      	bcs.n	8000c60 <__udivmoddi4+0x154>
 8000c5a:	45a6      	cmp	lr, r4
 8000c5c:	f200 80bb 	bhi.w	8000dd6 <__udivmoddi4+0x2ca>
 8000c60:	4608      	mov	r0, r1
 8000c62:	eba4 040e 	sub.w	r4, r4, lr
 8000c66:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000c6a:	e79c      	b.n	8000ba6 <__udivmoddi4+0x9a>
 8000c6c:	f1c6 0720 	rsb	r7, r6, #32
 8000c70:	40b3      	lsls	r3, r6
 8000c72:	fa22 fc07 	lsr.w	ip, r2, r7
 8000c76:	ea4c 0c03 	orr.w	ip, ip, r3
 8000c7a:	fa20 f407 	lsr.w	r4, r0, r7
 8000c7e:	fa01 f306 	lsl.w	r3, r1, r6
 8000c82:	431c      	orrs	r4, r3
 8000c84:	40f9      	lsrs	r1, r7
 8000c86:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000c8a:	fa00 f306 	lsl.w	r3, r0, r6
 8000c8e:	fbb1 f8f9 	udiv	r8, r1, r9
 8000c92:	0c20      	lsrs	r0, r4, #16
 8000c94:	fa1f fe8c 	uxth.w	lr, ip
 8000c98:	fb09 1118 	mls	r1, r9, r8, r1
 8000c9c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ca0:	fb08 f00e 	mul.w	r0, r8, lr
 8000ca4:	4288      	cmp	r0, r1
 8000ca6:	fa02 f206 	lsl.w	r2, r2, r6
 8000caa:	d90b      	bls.n	8000cc4 <__udivmoddi4+0x1b8>
 8000cac:	eb1c 0101 	adds.w	r1, ip, r1
 8000cb0:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000cb4:	f080 8088 	bcs.w	8000dc8 <__udivmoddi4+0x2bc>
 8000cb8:	4288      	cmp	r0, r1
 8000cba:	f240 8085 	bls.w	8000dc8 <__udivmoddi4+0x2bc>
 8000cbe:	f1a8 0802 	sub.w	r8, r8, #2
 8000cc2:	4461      	add	r1, ip
 8000cc4:	1a09      	subs	r1, r1, r0
 8000cc6:	b2a4      	uxth	r4, r4
 8000cc8:	fbb1 f0f9 	udiv	r0, r1, r9
 8000ccc:	fb09 1110 	mls	r1, r9, r0, r1
 8000cd0:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000cd4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000cd8:	458e      	cmp	lr, r1
 8000cda:	d908      	bls.n	8000cee <__udivmoddi4+0x1e2>
 8000cdc:	eb1c 0101 	adds.w	r1, ip, r1
 8000ce0:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 8000ce4:	d26c      	bcs.n	8000dc0 <__udivmoddi4+0x2b4>
 8000ce6:	458e      	cmp	lr, r1
 8000ce8:	d96a      	bls.n	8000dc0 <__udivmoddi4+0x2b4>
 8000cea:	3802      	subs	r0, #2
 8000cec:	4461      	add	r1, ip
 8000cee:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000cf2:	fba0 9402 	umull	r9, r4, r0, r2
 8000cf6:	eba1 010e 	sub.w	r1, r1, lr
 8000cfa:	42a1      	cmp	r1, r4
 8000cfc:	46c8      	mov	r8, r9
 8000cfe:	46a6      	mov	lr, r4
 8000d00:	d356      	bcc.n	8000db0 <__udivmoddi4+0x2a4>
 8000d02:	d053      	beq.n	8000dac <__udivmoddi4+0x2a0>
 8000d04:	b15d      	cbz	r5, 8000d1e <__udivmoddi4+0x212>
 8000d06:	ebb3 0208 	subs.w	r2, r3, r8
 8000d0a:	eb61 010e 	sbc.w	r1, r1, lr
 8000d0e:	fa01 f707 	lsl.w	r7, r1, r7
 8000d12:	fa22 f306 	lsr.w	r3, r2, r6
 8000d16:	40f1      	lsrs	r1, r6
 8000d18:	431f      	orrs	r7, r3
 8000d1a:	e9c5 7100 	strd	r7, r1, [r5]
 8000d1e:	2600      	movs	r6, #0
 8000d20:	4631      	mov	r1, r6
 8000d22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d26:	f1c2 0320 	rsb	r3, r2, #32
 8000d2a:	40d8      	lsrs	r0, r3
 8000d2c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d30:	fa21 f303 	lsr.w	r3, r1, r3
 8000d34:	4091      	lsls	r1, r2
 8000d36:	4301      	orrs	r1, r0
 8000d38:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d3c:	fa1f fe8c 	uxth.w	lr, ip
 8000d40:	fbb3 f0f7 	udiv	r0, r3, r7
 8000d44:	fb07 3610 	mls	r6, r7, r0, r3
 8000d48:	0c0b      	lsrs	r3, r1, #16
 8000d4a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000d4e:	fb00 f60e 	mul.w	r6, r0, lr
 8000d52:	429e      	cmp	r6, r3
 8000d54:	fa04 f402 	lsl.w	r4, r4, r2
 8000d58:	d908      	bls.n	8000d6c <__udivmoddi4+0x260>
 8000d5a:	eb1c 0303 	adds.w	r3, ip, r3
 8000d5e:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000d62:	d22f      	bcs.n	8000dc4 <__udivmoddi4+0x2b8>
 8000d64:	429e      	cmp	r6, r3
 8000d66:	d92d      	bls.n	8000dc4 <__udivmoddi4+0x2b8>
 8000d68:	3802      	subs	r0, #2
 8000d6a:	4463      	add	r3, ip
 8000d6c:	1b9b      	subs	r3, r3, r6
 8000d6e:	b289      	uxth	r1, r1
 8000d70:	fbb3 f6f7 	udiv	r6, r3, r7
 8000d74:	fb07 3316 	mls	r3, r7, r6, r3
 8000d78:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d7c:	fb06 f30e 	mul.w	r3, r6, lr
 8000d80:	428b      	cmp	r3, r1
 8000d82:	d908      	bls.n	8000d96 <__udivmoddi4+0x28a>
 8000d84:	eb1c 0101 	adds.w	r1, ip, r1
 8000d88:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000d8c:	d216      	bcs.n	8000dbc <__udivmoddi4+0x2b0>
 8000d8e:	428b      	cmp	r3, r1
 8000d90:	d914      	bls.n	8000dbc <__udivmoddi4+0x2b0>
 8000d92:	3e02      	subs	r6, #2
 8000d94:	4461      	add	r1, ip
 8000d96:	1ac9      	subs	r1, r1, r3
 8000d98:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000d9c:	e738      	b.n	8000c10 <__udivmoddi4+0x104>
 8000d9e:	462e      	mov	r6, r5
 8000da0:	4628      	mov	r0, r5
 8000da2:	e705      	b.n	8000bb0 <__udivmoddi4+0xa4>
 8000da4:	4606      	mov	r6, r0
 8000da6:	e6e3      	b.n	8000b70 <__udivmoddi4+0x64>
 8000da8:	4618      	mov	r0, r3
 8000daa:	e6f8      	b.n	8000b9e <__udivmoddi4+0x92>
 8000dac:	454b      	cmp	r3, r9
 8000dae:	d2a9      	bcs.n	8000d04 <__udivmoddi4+0x1f8>
 8000db0:	ebb9 0802 	subs.w	r8, r9, r2
 8000db4:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000db8:	3801      	subs	r0, #1
 8000dba:	e7a3      	b.n	8000d04 <__udivmoddi4+0x1f8>
 8000dbc:	4646      	mov	r6, r8
 8000dbe:	e7ea      	b.n	8000d96 <__udivmoddi4+0x28a>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	e794      	b.n	8000cee <__udivmoddi4+0x1e2>
 8000dc4:	4640      	mov	r0, r8
 8000dc6:	e7d1      	b.n	8000d6c <__udivmoddi4+0x260>
 8000dc8:	46d0      	mov	r8, sl
 8000dca:	e77b      	b.n	8000cc4 <__udivmoddi4+0x1b8>
 8000dcc:	3b02      	subs	r3, #2
 8000dce:	4461      	add	r1, ip
 8000dd0:	e732      	b.n	8000c38 <__udivmoddi4+0x12c>
 8000dd2:	4630      	mov	r0, r6
 8000dd4:	e709      	b.n	8000bea <__udivmoddi4+0xde>
 8000dd6:	4464      	add	r4, ip
 8000dd8:	3802      	subs	r0, #2
 8000dda:	e742      	b.n	8000c62 <__udivmoddi4+0x156>

08000ddc <__aeabi_idiv0>:
 8000ddc:	4770      	bx	lr
 8000dde:	bf00      	nop

08000de0 <MX_ADC1_Init>:
ADC_HandleTypeDef hadc1;
DMA_HandleTypeDef hdma_adc1;

/* ADC1 init function */
void MX_ADC1_Init(void)
{
 8000de0:	b580      	push	{r7, lr}
 8000de2:	b08c      	sub	sp, #48	; 0x30
 8000de4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 8000de6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000dea:	2200      	movs	r2, #0
 8000dec:	601a      	str	r2, [r3, #0]
 8000dee:	605a      	str	r2, [r3, #4]
 8000df0:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8000df2:	1d3b      	adds	r3, r7, #4
 8000df4:	2220      	movs	r2, #32
 8000df6:	2100      	movs	r1, #0
 8000df8:	4618      	mov	r0, r3
 8000dfa:	f007 fbc5 	bl	8008588 <memset>

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000dfe:	4b33      	ldr	r3, [pc, #204]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e00:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8000e04:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8000e06:	4b31      	ldr	r3, [pc, #196]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e08:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8000e0c:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000e0e:	4b2f      	ldr	r3, [pc, #188]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e10:	2200      	movs	r2, #0
 8000e12:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000e14:	4b2d      	ldr	r3, [pc, #180]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e16:	2200      	movs	r2, #0
 8000e18:	60da      	str	r2, [r3, #12]
  hadc1.Init.GainCompensation = 0;
 8000e1a:	4b2c      	ldr	r3, [pc, #176]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	611a      	str	r2, [r3, #16]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000e20:	4b2a      	ldr	r3, [pc, #168]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e22:	2200      	movs	r2, #0
 8000e24:	615a      	str	r2, [r3, #20]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000e26:	4b29      	ldr	r3, [pc, #164]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e28:	2204      	movs	r2, #4
 8000e2a:	619a      	str	r2, [r3, #24]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000e2c:	4b27      	ldr	r3, [pc, #156]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e2e:	2200      	movs	r2, #0
 8000e30:	771a      	strb	r2, [r3, #28]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000e32:	4b26      	ldr	r3, [pc, #152]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e34:	2200      	movs	r2, #0
 8000e36:	775a      	strb	r2, [r3, #29]
  hadc1.Init.NbrOfConversion = 1;
 8000e38:	4b24      	ldr	r3, [pc, #144]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e3a:	2201      	movs	r2, #1
 8000e3c:	621a      	str	r2, [r3, #32]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000e3e:	4b23      	ldr	r3, [pc, #140]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e40:	2200      	movs	r2, #0
 8000e42:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
  hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T1_TRGO;
 8000e46:	4b21      	ldr	r3, [pc, #132]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e48:	f44f 62a4 	mov.w	r2, #1312	; 0x520
 8000e4c:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 8000e4e:	4b1f      	ldr	r3, [pc, #124]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e50:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000e54:	631a      	str	r2, [r3, #48]	; 0x30
  hadc1.Init.DMAContinuousRequests = ENABLE;
 8000e56:	4b1d      	ldr	r3, [pc, #116]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e58:	2201      	movs	r2, #1
 8000e5a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000e5e:	4b1b      	ldr	r3, [pc, #108]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e60:	2200      	movs	r2, #0
 8000e62:	63da      	str	r2, [r3, #60]	; 0x3c
  hadc1.Init.OversamplingMode = DISABLE;
 8000e64:	4b19      	ldr	r3, [pc, #100]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e66:	2200      	movs	r2, #0
 8000e68:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000e6c:	4817      	ldr	r0, [pc, #92]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e6e:	f001 f9f1 	bl	8002254 <HAL_ADC_Init>
 8000e72:	4603      	mov	r3, r0
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d001      	beq.n	8000e7c <MX_ADC1_Init+0x9c>
  {
    Error_Handler();
 8000e78:	f000 fbce 	bl	8001618 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000e7c:	2300      	movs	r3, #0
 8000e7e:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000e80:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000e84:	4619      	mov	r1, r3
 8000e86:	4811      	ldr	r0, [pc, #68]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000e88:	f002 f9ea 	bl	8003260 <HAL_ADCEx_MultiModeConfigChannel>
 8000e8c:	4603      	mov	r3, r0
 8000e8e:	2b00      	cmp	r3, #0
 8000e90:	d001      	beq.n	8000e96 <MX_ADC1_Init+0xb6>
  {
    Error_Handler();
 8000e92:	f000 fbc1 	bl	8001618 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8000e96:	4b0e      	ldr	r3, [pc, #56]	; (8000ed0 <MX_ADC1_Init+0xf0>)
 8000e98:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000e9a:	2306      	movs	r3, #6
 8000e9c:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_92CYCLES_5;
 8000e9e:	2305      	movs	r3, #5
 8000ea0:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000ea2:	237f      	movs	r3, #127	; 0x7f
 8000ea4:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000ea6:	2304      	movs	r3, #4
 8000ea8:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8000eaa:	2300      	movs	r3, #0
 8000eac:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000eae:	1d3b      	adds	r3, r7, #4
 8000eb0:	4619      	mov	r1, r3
 8000eb2:	4806      	ldr	r0, [pc, #24]	; (8000ecc <MX_ADC1_Init+0xec>)
 8000eb4:	f001 fc78 	bl	80027a8 <HAL_ADC_ConfigChannel>
 8000eb8:	4603      	mov	r3, r0
 8000eba:	2b00      	cmp	r3, #0
 8000ebc:	d001      	beq.n	8000ec2 <MX_ADC1_Init+0xe2>
  {
    Error_Handler();
 8000ebe:	f000 fbab 	bl	8001618 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000ec2:	bf00      	nop
 8000ec4:	3730      	adds	r7, #48	; 0x30
 8000ec6:	46bd      	mov	sp, r7
 8000ec8:	bd80      	pop	{r7, pc}
 8000eca:	bf00      	nop
 8000ecc:	20000250 	.word	0x20000250
 8000ed0:	04300002 	.word	0x04300002

08000ed4 <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
{
 8000ed4:	b580      	push	{r7, lr}
 8000ed6:	b09e      	sub	sp, #120	; 0x78
 8000ed8:	af00      	add	r7, sp, #0
 8000eda:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000edc:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8000ee0:	2200      	movs	r2, #0
 8000ee2:	601a      	str	r2, [r3, #0]
 8000ee4:	605a      	str	r2, [r3, #4]
 8000ee6:	609a      	str	r2, [r3, #8]
 8000ee8:	60da      	str	r2, [r3, #12]
 8000eea:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000eec:	f107 0310 	add.w	r3, r7, #16
 8000ef0:	2254      	movs	r2, #84	; 0x54
 8000ef2:	2100      	movs	r1, #0
 8000ef4:	4618      	mov	r0, r3
 8000ef6:	f007 fb47 	bl	8008588 <memset>
  if(adcHandle->Instance==ADC1)
 8000efa:	687b      	ldr	r3, [r7, #4]
 8000efc:	681b      	ldr	r3, [r3, #0]
 8000efe:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8000f02:	d15f      	bne.n	8000fc4 <HAL_ADC_MspInit+0xf0>

  /* USER CODE END ADC1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC12;
 8000f04:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8000f08:	613b      	str	r3, [r7, #16]
    PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 8000f0a:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8000f0e:	657b      	str	r3, [r7, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000f10:	f107 0310 	add.w	r3, r7, #16
 8000f14:	4618      	mov	r0, r3
 8000f16:	f003 fe93 	bl	8004c40 <HAL_RCCEx_PeriphCLKConfig>
 8000f1a:	4603      	mov	r3, r0
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d001      	beq.n	8000f24 <HAL_ADC_MspInit+0x50>
    {
      Error_Handler();
 8000f20:	f000 fb7a 	bl	8001618 <Error_Handler>
    }

    /* ADC1 clock enable */
    __HAL_RCC_ADC12_CLK_ENABLE();
 8000f24:	4b29      	ldr	r3, [pc, #164]	; (8000fcc <HAL_ADC_MspInit+0xf8>)
 8000f26:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f28:	4a28      	ldr	r2, [pc, #160]	; (8000fcc <HAL_ADC_MspInit+0xf8>)
 8000f2a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000f2e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000f30:	4b26      	ldr	r3, [pc, #152]	; (8000fcc <HAL_ADC_MspInit+0xf8>)
 8000f32:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f34:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000f38:	60fb      	str	r3, [r7, #12]
 8000f3a:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000f3c:	4b23      	ldr	r3, [pc, #140]	; (8000fcc <HAL_ADC_MspInit+0xf8>)
 8000f3e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f40:	4a22      	ldr	r2, [pc, #136]	; (8000fcc <HAL_ADC_MspInit+0xf8>)
 8000f42:	f043 0301 	orr.w	r3, r3, #1
 8000f46:	64d3      	str	r3, [r2, #76]	; 0x4c
 8000f48:	4b20      	ldr	r3, [pc, #128]	; (8000fcc <HAL_ADC_MspInit+0xf8>)
 8000f4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000f4c:	f003 0301 	and.w	r3, r3, #1
 8000f50:	60bb      	str	r3, [r7, #8]
 8000f52:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PA0     ------> ADC1_IN1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8000f54:	2301      	movs	r3, #1
 8000f56:	667b      	str	r3, [r7, #100]	; 0x64
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8000f58:	2303      	movs	r3, #3
 8000f5a:	66bb      	str	r3, [r7, #104]	; 0x68
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f5c:	2300      	movs	r3, #0
 8000f5e:	66fb      	str	r3, [r7, #108]	; 0x6c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000f60:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8000f64:	4619      	mov	r1, r3
 8000f66:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f6a:	f002 fec3 	bl	8003cf4 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA1_Channel1;
 8000f6e:	4b18      	ldr	r3, [pc, #96]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f70:	4a18      	ldr	r2, [pc, #96]	; (8000fd4 <HAL_ADC_MspInit+0x100>)
 8000f72:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 8000f74:	4b16      	ldr	r3, [pc, #88]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f76:	2205      	movs	r2, #5
 8000f78:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8000f7a:	4b15      	ldr	r3, [pc, #84]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f7c:	2200      	movs	r2, #0
 8000f7e:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8000f80:	4b13      	ldr	r3, [pc, #76]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f82:	2200      	movs	r2, #0
 8000f84:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8000f86:	4b12      	ldr	r3, [pc, #72]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f88:	2280      	movs	r2, #128	; 0x80
 8000f8a:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8000f8c:	4b10      	ldr	r3, [pc, #64]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f8e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000f92:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8000f94:	4b0e      	ldr	r3, [pc, #56]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f96:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000f9a:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8000f9c:	4b0c      	ldr	r3, [pc, #48]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000f9e:	2220      	movs	r2, #32
 8000fa0:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8000fa2:	4b0b      	ldr	r3, [pc, #44]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8000fa8:	4809      	ldr	r0, [pc, #36]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000faa:	f002 fb71 	bl	8003690 <HAL_DMA_Init>
 8000fae:	4603      	mov	r3, r0
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d001      	beq.n	8000fb8 <HAL_ADC_MspInit+0xe4>
    {
      Error_Handler();
 8000fb4:	f000 fb30 	bl	8001618 <Error_Handler>
    }

    __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	4a05      	ldr	r2, [pc, #20]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000fbc:	655a      	str	r2, [r3, #84]	; 0x54
 8000fbe:	4a04      	ldr	r2, [pc, #16]	; (8000fd0 <HAL_ADC_MspInit+0xfc>)
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	6293      	str	r3, [r2, #40]	; 0x28

  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }
}
 8000fc4:	bf00      	nop
 8000fc6:	3778      	adds	r7, #120	; 0x78
 8000fc8:	46bd      	mov	sp, r7
 8000fca:	bd80      	pop	{r7, pc}
 8000fcc:	40021000 	.word	0x40021000
 8000fd0:	200002bc 	.word	0x200002bc
 8000fd4:	40020008 	.word	0x40020008

08000fd8 <get_ccr_value>:
 * @param[in] dutyCycle Le rapport cyclique donné
 *
 * @return La valeur du CCR
 */

int get_ccr_value(int dutyCycle){
 8000fd8:	b480      	push	{r7}
 8000fda:	b085      	sub	sp, #20
 8000fdc:	af00      	add	r7, sp, #0
 8000fde:	6078      	str	r0, [r7, #4]
	if(dutyCycle > 100){
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	2b64      	cmp	r3, #100	; 0x64
 8000fe4:	dd02      	ble.n	8000fec <get_ccr_value+0x14>
		return -1;
 8000fe6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000fea:	e012      	b.n	8001012 <get_ccr_value+0x3a>
	}
	if(dutyCycle<0){
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	da02      	bge.n	8000ff8 <get_ccr_value+0x20>
		return -1;
 8000ff2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000ff6:	e00c      	b.n	8001012 <get_ccr_value+0x3a>
	}
	int arr = TIM1 -> ARR;
 8000ff8:	4b09      	ldr	r3, [pc, #36]	; (8001020 <get_ccr_value+0x48>)
 8000ffa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000ffc:	60fb      	str	r3, [r7, #12]
	return (dutyCycle * arr) / 100;
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	68fa      	ldr	r2, [r7, #12]
 8001002:	fb02 f303 	mul.w	r3, r2, r3
 8001006:	4a07      	ldr	r2, [pc, #28]	; (8001024 <get_ccr_value+0x4c>)
 8001008:	fb82 1203 	smull	r1, r2, r2, r3
 800100c:	1152      	asrs	r2, r2, #5
 800100e:	17db      	asrs	r3, r3, #31
 8001010:	1ad3      	subs	r3, r2, r3
}
 8001012:	4618      	mov	r0, r3
 8001014:	3714      	adds	r7, #20
 8001016:	46bd      	mov	sp, r7
 8001018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800101c:	4770      	bx	lr
 800101e:	bf00      	nop
 8001020:	40012c00 	.word	0x40012c00
 8001024:	51eb851f 	.word	0x51eb851f

08001028 <change_ccr>:
 *
 * @param[in] dutyCycle Le rapport cyclique donné
 *
 * @return
 */
void change_ccr(int dutyCycle){
 8001028:	b580      	push	{r7, lr}
 800102a:	b084      	sub	sp, #16
 800102c:	af00      	add	r7, sp, #0
 800102e:	6078      	str	r0, [r7, #4]
	int goalCCR1 = get_ccr_value(dutyCycle);
 8001030:	6878      	ldr	r0, [r7, #4]
 8001032:	f7ff ffd1 	bl	8000fd8 <get_ccr_value>
 8001036:	60f8      	str	r0, [r7, #12]
	if(goalCCR1 == -1){
 8001038:	68fb      	ldr	r3, [r7, #12]
 800103a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800103e:	d02d      	beq.n	800109c <change_ccr+0x74>
		return;
	}
	if( goalCCR1 > TIM1 -> CCR1){
 8001040:	4b18      	ldr	r3, [pc, #96]	; (80010a4 <change_ccr+0x7c>)
 8001042:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001044:	68fb      	ldr	r3, [r7, #12]
 8001046:	429a      	cmp	r2, r3
 8001048:	d211      	bcs.n	800106e <change_ccr+0x46>
		while(TIM1 -> CCR1 != goalCCR1){
 800104a:	e00a      	b.n	8001062 <change_ccr+0x3a>
			TIM1 -> CCR1 ++;
 800104c:	4b15      	ldr	r3, [pc, #84]	; (80010a4 <change_ccr+0x7c>)
 800104e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001050:	3201      	adds	r2, #1
 8001052:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1 -> CCR2 --;
 8001054:	4b13      	ldr	r3, [pc, #76]	; (80010a4 <change_ccr+0x7c>)
 8001056:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001058:	3a01      	subs	r2, #1
 800105a:	639a      	str	r2, [r3, #56]	; 0x38
			HAL_Delay(50);
 800105c:	2032      	movs	r0, #50	; 0x32
 800105e:	f000 feb5 	bl	8001dcc <HAL_Delay>
		while(TIM1 -> CCR1 != goalCCR1){
 8001062:	4b10      	ldr	r3, [pc, #64]	; (80010a4 <change_ccr+0x7c>)
 8001064:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001066:	68fb      	ldr	r3, [r7, #12]
 8001068:	429a      	cmp	r2, r3
 800106a:	d1ef      	bne.n	800104c <change_ccr+0x24>
		}
		return;
 800106c:	e017      	b.n	800109e <change_ccr+0x76>
	}
	if( goalCCR1 < TIM1 -> CCR1){
 800106e:	4b0d      	ldr	r3, [pc, #52]	; (80010a4 <change_ccr+0x7c>)
 8001070:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001072:	68fb      	ldr	r3, [r7, #12]
 8001074:	429a      	cmp	r2, r3
 8001076:	d912      	bls.n	800109e <change_ccr+0x76>
		while(TIM1 -> CCR1 != goalCCR1){
 8001078:	e00a      	b.n	8001090 <change_ccr+0x68>
			TIM1 -> CCR1 --;
 800107a:	4b0a      	ldr	r3, [pc, #40]	; (80010a4 <change_ccr+0x7c>)
 800107c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800107e:	3a01      	subs	r2, #1
 8001080:	635a      	str	r2, [r3, #52]	; 0x34
			TIM1 -> CCR2 ++;
 8001082:	4b08      	ldr	r3, [pc, #32]	; (80010a4 <change_ccr+0x7c>)
 8001084:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001086:	3201      	adds	r2, #1
 8001088:	639a      	str	r2, [r3, #56]	; 0x38
			HAL_Delay(50);
 800108a:	2032      	movs	r0, #50	; 0x32
 800108c:	f000 fe9e 	bl	8001dcc <HAL_Delay>
		while(TIM1 -> CCR1 != goalCCR1){
 8001090:	4b04      	ldr	r3, [pc, #16]	; (80010a4 <change_ccr+0x7c>)
 8001092:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8001094:	68fb      	ldr	r3, [r7, #12]
 8001096:	429a      	cmp	r2, r3
 8001098:	d1ef      	bne.n	800107a <change_ccr+0x52>
		}
		return;
 800109a:	e000      	b.n	800109e <change_ccr+0x76>
		return;
 800109c:	bf00      	nop
	}
}
 800109e:	3710      	adds	r7, #16
 80010a0:	46bd      	mov	sp, r7
 80010a2:	bd80      	pop	{r7, pc}
 80010a4:	40012c00 	.word	0x40012c00

080010a8 <get_mean_current>:
 * @brief Calcul le courant
 *
 * @return
 */

int get_mean_current(void){
 80010a8:	b580      	push	{r7, lr}
 80010aa:	b082      	sub	sp, #8
 80010ac:	af00      	add	r7, sp, #0
	int current = 1;
 80010ae:	2301      	movs	r3, #1
 80010b0:	607b      	str	r3, [r7, #4]
	int i;
	for(i=0; i<ADC_BUF_SIZE; i++){
 80010b2:	2300      	movs	r3, #0
 80010b4:	603b      	str	r3, [r7, #0]
 80010b6:	e00a      	b.n	80010ce <get_mean_current+0x26>
		current = current + (int)ADC_Buffer[i];
 80010b8:	4a21      	ldr	r2, [pc, #132]	; (8001140 <get_mean_current+0x98>)
 80010ba:	683b      	ldr	r3, [r7, #0]
 80010bc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80010c0:	461a      	mov	r2, r3
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	4413      	add	r3, r2
 80010c6:	607b      	str	r3, [r7, #4]
	for(i=0; i<ADC_BUF_SIZE; i++){
 80010c8:	683b      	ldr	r3, [r7, #0]
 80010ca:	3301      	adds	r3, #1
 80010cc:	603b      	str	r3, [r7, #0]
 80010ce:	683b      	ldr	r3, [r7, #0]
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	ddf1      	ble.n	80010b8 <get_mean_current+0x10>
	}
	current = current / ADC_BUF_SIZE;
	current = ((current * 3.3 / 4096) - 2.5 ) * 12; // Convert ADC to Ampere value
 80010d4:	6878      	ldr	r0, [r7, #4]
 80010d6:	f7ff fa5d 	bl	8000594 <__aeabi_i2d>
 80010da:	a317      	add	r3, pc, #92	; (adr r3, 8001138 <get_mean_current+0x90>)
 80010dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010e0:	f7ff fac2 	bl	8000668 <__aeabi_dmul>
 80010e4:	4602      	mov	r2, r0
 80010e6:	460b      	mov	r3, r1
 80010e8:	4610      	mov	r0, r2
 80010ea:	4619      	mov	r1, r3
 80010ec:	f04f 0200 	mov.w	r2, #0
 80010f0:	4b14      	ldr	r3, [pc, #80]	; (8001144 <get_mean_current+0x9c>)
 80010f2:	f7ff fbe3 	bl	80008bc <__aeabi_ddiv>
 80010f6:	4602      	mov	r2, r0
 80010f8:	460b      	mov	r3, r1
 80010fa:	4610      	mov	r0, r2
 80010fc:	4619      	mov	r1, r3
 80010fe:	f04f 0200 	mov.w	r2, #0
 8001102:	4b11      	ldr	r3, [pc, #68]	; (8001148 <get_mean_current+0xa0>)
 8001104:	f7ff f8f8 	bl	80002f8 <__aeabi_dsub>
 8001108:	4602      	mov	r2, r0
 800110a:	460b      	mov	r3, r1
 800110c:	4610      	mov	r0, r2
 800110e:	4619      	mov	r1, r3
 8001110:	f04f 0200 	mov.w	r2, #0
 8001114:	4b0d      	ldr	r3, [pc, #52]	; (800114c <get_mean_current+0xa4>)
 8001116:	f7ff faa7 	bl	8000668 <__aeabi_dmul>
 800111a:	4602      	mov	r2, r0
 800111c:	460b      	mov	r3, r1
 800111e:	4610      	mov	r0, r2
 8001120:	4619      	mov	r1, r3
 8001122:	f7ff fcb3 	bl	8000a8c <__aeabi_d2iz>
 8001126:	4603      	mov	r3, r0
 8001128:	607b      	str	r3, [r7, #4]
	return current;
 800112a:	687b      	ldr	r3, [r7, #4]
}
 800112c:	4618      	mov	r0, r3
 800112e:	3708      	adds	r7, #8
 8001130:	46bd      	mov	sp, r7
 8001132:	bd80      	pop	{r7, pc}
 8001134:	f3af 8000 	nop.w
 8001138:	66666666 	.word	0x66666666
 800113c:	400a6666 	.word	0x400a6666
 8001140:	20000364 	.word	0x20000364
 8001144:	40b00000 	.word	0x40b00000
 8001148:	40040000 	.word	0x40040000
 800114c:	40280000 	.word	0x40280000

08001150 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001150:	b580      	push	{r7, lr}
 8001152:	b082      	sub	sp, #8
 8001154:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
 8001156:	4b12      	ldr	r3, [pc, #72]	; (80011a0 <MX_DMA_Init+0x50>)
 8001158:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800115a:	4a11      	ldr	r2, [pc, #68]	; (80011a0 <MX_DMA_Init+0x50>)
 800115c:	f043 0304 	orr.w	r3, r3, #4
 8001160:	6493      	str	r3, [r2, #72]	; 0x48
 8001162:	4b0f      	ldr	r3, [pc, #60]	; (80011a0 <MX_DMA_Init+0x50>)
 8001164:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001166:	f003 0304 	and.w	r3, r3, #4
 800116a:	607b      	str	r3, [r7, #4]
 800116c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA1_CLK_ENABLE();
 800116e:	4b0c      	ldr	r3, [pc, #48]	; (80011a0 <MX_DMA_Init+0x50>)
 8001170:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001172:	4a0b      	ldr	r2, [pc, #44]	; (80011a0 <MX_DMA_Init+0x50>)
 8001174:	f043 0301 	orr.w	r3, r3, #1
 8001178:	6493      	str	r3, [r2, #72]	; 0x48
 800117a:	4b09      	ldr	r3, [pc, #36]	; (80011a0 <MX_DMA_Init+0x50>)
 800117c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800117e:	f003 0301 	and.w	r3, r3, #1
 8001182:	603b      	str	r3, [r7, #0]
 8001184:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 8001186:	2200      	movs	r2, #0
 8001188:	2100      	movs	r1, #0
 800118a:	200b      	movs	r0, #11
 800118c:	f002 fa4b 	bl	8003626 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 8001190:	200b      	movs	r0, #11
 8001192:	f002 fa62 	bl	800365a <HAL_NVIC_EnableIRQ>

}
 8001196:	bf00      	nop
 8001198:	3708      	adds	r7, #8
 800119a:	46bd      	mov	sp, r7
 800119c:	bd80      	pop	{r7, pc}
 800119e:	bf00      	nop
 80011a0:	40021000 	.word	0x40021000

080011a4 <MX_GPIO_Init>:
 80011a4:	b580      	push	{r7, lr}
 80011a6:	b088      	sub	sp, #32
 80011a8:	af00      	add	r7, sp, #0
 80011aa:	f107 030c 	add.w	r3, r7, #12
 80011ae:	2200      	movs	r2, #0
 80011b0:	601a      	str	r2, [r3, #0]
 80011b2:	605a      	str	r2, [r3, #4]
 80011b4:	609a      	str	r2, [r3, #8]
 80011b6:	60da      	str	r2, [r3, #12]
 80011b8:	611a      	str	r2, [r3, #16]
 80011ba:	4b33      	ldr	r3, [pc, #204]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011be:	4a32      	ldr	r2, [pc, #200]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011c0:	f043 0304 	orr.w	r3, r3, #4
 80011c4:	64d3      	str	r3, [r2, #76]	; 0x4c
 80011c6:	4b30      	ldr	r3, [pc, #192]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011ca:	f003 0304 	and.w	r3, r3, #4
 80011ce:	60bb      	str	r3, [r7, #8]
 80011d0:	68bb      	ldr	r3, [r7, #8]
 80011d2:	4b2d      	ldr	r3, [pc, #180]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011d6:	4a2c      	ldr	r2, [pc, #176]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011d8:	f043 0320 	orr.w	r3, r3, #32
 80011dc:	64d3      	str	r3, [r2, #76]	; 0x4c
 80011de:	4b2a      	ldr	r3, [pc, #168]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011e2:	f003 0320 	and.w	r3, r3, #32
 80011e6:	607b      	str	r3, [r7, #4]
 80011e8:	687b      	ldr	r3, [r7, #4]
 80011ea:	4b27      	ldr	r3, [pc, #156]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011ee:	4a26      	ldr	r2, [pc, #152]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011f0:	f043 0301 	orr.w	r3, r3, #1
 80011f4:	64d3      	str	r3, [r2, #76]	; 0x4c
 80011f6:	4b24      	ldr	r3, [pc, #144]	; (8001288 <MX_GPIO_Init+0xe4>)
 80011f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011fa:	f003 0301 	and.w	r3, r3, #1
 80011fe:	603b      	str	r3, [r7, #0]
 8001200:	683b      	ldr	r3, [r7, #0]
 8001202:	2200      	movs	r2, #0
 8001204:	2108      	movs	r1, #8
 8001206:	4821      	ldr	r0, [pc, #132]	; (800128c <MX_GPIO_Init+0xe8>)
 8001208:	f002 fef6 	bl	8003ff8 <HAL_GPIO_WritePin>
 800120c:	2200      	movs	r2, #0
 800120e:	2120      	movs	r1, #32
 8001210:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001214:	f002 fef0 	bl	8003ff8 <HAL_GPIO_WritePin>
 8001218:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800121c:	60fb      	str	r3, [r7, #12]
 800121e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001222:	613b      	str	r3, [r7, #16]
 8001224:	2300      	movs	r3, #0
 8001226:	617b      	str	r3, [r7, #20]
 8001228:	f107 030c 	add.w	r3, r7, #12
 800122c:	4619      	mov	r1, r3
 800122e:	4817      	ldr	r0, [pc, #92]	; (800128c <MX_GPIO_Init+0xe8>)
 8001230:	f002 fd60 	bl	8003cf4 <HAL_GPIO_Init>
 8001234:	2308      	movs	r3, #8
 8001236:	60fb      	str	r3, [r7, #12]
 8001238:	2301      	movs	r3, #1
 800123a:	613b      	str	r3, [r7, #16]
 800123c:	2300      	movs	r3, #0
 800123e:	617b      	str	r3, [r7, #20]
 8001240:	2300      	movs	r3, #0
 8001242:	61bb      	str	r3, [r7, #24]
 8001244:	f107 030c 	add.w	r3, r7, #12
 8001248:	4619      	mov	r1, r3
 800124a:	4810      	ldr	r0, [pc, #64]	; (800128c <MX_GPIO_Init+0xe8>)
 800124c:	f002 fd52 	bl	8003cf4 <HAL_GPIO_Init>
 8001250:	2320      	movs	r3, #32
 8001252:	60fb      	str	r3, [r7, #12]
 8001254:	2301      	movs	r3, #1
 8001256:	613b      	str	r3, [r7, #16]
 8001258:	2300      	movs	r3, #0
 800125a:	617b      	str	r3, [r7, #20]
 800125c:	2300      	movs	r3, #0
 800125e:	61bb      	str	r3, [r7, #24]
 8001260:	f107 030c 	add.w	r3, r7, #12
 8001264:	4619      	mov	r1, r3
 8001266:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800126a:	f002 fd43 	bl	8003cf4 <HAL_GPIO_Init>
 800126e:	2200      	movs	r2, #0
 8001270:	2101      	movs	r1, #1
 8001272:	2028      	movs	r0, #40	; 0x28
 8001274:	f002 f9d7 	bl	8003626 <HAL_NVIC_SetPriority>
 8001278:	2028      	movs	r0, #40	; 0x28
 800127a:	f002 f9ee 	bl	800365a <HAL_NVIC_EnableIRQ>
 800127e:	bf00      	nop
 8001280:	3720      	adds	r7, #32
 8001282:	46bd      	mov	sp, r7
 8001284:	bd80      	pop	{r7, pc}
 8001286:	bf00      	nop
 8001288:	40021000 	.word	0x40021000
 800128c:	48000800 	.word	0x48000800

08001290 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001290:	b580      	push	{r7, lr}
 8001292:	b09e      	sub	sp, #120	; 0x78
 8001294:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	char	 	cmdBuffer[CMD_BUFFER_SIZE];
	int 		idx_cmd;
	char* 		argv[MAX_ARGS];
	int		 	argc = 0;
 8001296:	2300      	movs	r3, #0
 8001298:	673b      	str	r3, [r7, #112]	; 0x70
	char*		token;
	int 		newCmdReady = 0;
 800129a:	2300      	movs	r3, #0
 800129c:	66bb      	str	r3, [r7, #104]	; 0x68
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800129e:	f000 fd24 	bl	8001cea <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80012a2:	f000 f94f 	bl	8001544 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80012a6:	f7ff ff7d 	bl	80011a4 <MX_GPIO_Init>
  MX_DMA_Init();
 80012aa:	f7ff ff51 	bl	8001150 <MX_DMA_Init>
  MX_TIM1_Init();
 80012ae:	f000 fb49 	bl	8001944 <MX_TIM1_Init>
  MX_USART2_UART_Init();
 80012b2:	f000 fc45 	bl	8001b40 <MX_USART2_UART_Init>
  MX_ADC1_Init();
 80012b6:	f7ff fd93 	bl	8000de0 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */
	if(HAL_OK != HAL_ADC_Start_DMA(&hadc1, ADC_Buffer, ADC_BUF_SIZE))
 80012ba:	2201      	movs	r2, #1
 80012bc:	498a      	ldr	r1, [pc, #552]	; (80014e8 <main+0x258>)
 80012be:	488b      	ldr	r0, [pc, #556]	; (80014ec <main+0x25c>)
 80012c0:	f001 f98a 	bl	80025d8 <HAL_ADC_Start_DMA>
 80012c4:	4603      	mov	r3, r0
 80012c6:	2b00      	cmp	r3, #0
 80012c8:	d006      	beq.n	80012d8 <main+0x48>
		HAL_UART_Transmit(&huart2, ADCError, sizeof(ADCError), HAL_MAX_DELAY);
 80012ca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80012ce:	220f      	movs	r2, #15
 80012d0:	4987      	ldr	r1, [pc, #540]	; (80014f0 <main+0x260>)
 80012d2:	4888      	ldr	r0, [pc, #544]	; (80014f4 <main+0x264>)
 80012d4:	f005 f904 	bl	80064e0 <HAL_UART_Transmit>

	memset(argv,0,MAX_ARGS*sizeof(char*));
 80012d8:	463b      	mov	r3, r7
 80012da:	2224      	movs	r2, #36	; 0x24
 80012dc:	2100      	movs	r1, #0
 80012de:	4618      	mov	r0, r3
 80012e0:	f007 f952 	bl	8008588 <memset>
	memset(cmdBuffer,0,CMD_BUFFER_SIZE*sizeof(char));
 80012e4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012e8:	2240      	movs	r2, #64	; 0x40
 80012ea:	2100      	movs	r1, #0
 80012ec:	4618      	mov	r0, r3
 80012ee:	f007 f94b 	bl	8008588 <memset>
 80012f2:	4b81      	ldr	r3, [pc, #516]	; (80014f8 <main+0x268>)
 80012f4:	2200      	movs	r2, #0
 80012f6:	701a      	strb	r2, [r3, #0]
	memset(uartRxBuffer,0,UART_RX_BUFFER_SIZE*sizeof(char));
	memset(uartTxBuffer,0,UART_TX_BUFFER_SIZE*sizeof(char));
 80012f8:	2240      	movs	r2, #64	; 0x40
 80012fa:	2100      	movs	r1, #0
 80012fc:	487f      	ldr	r0, [pc, #508]	; (80014fc <main+0x26c>)
 80012fe:	f007 f943 	bl	8008588 <memset>

	HAL_UART_Receive_IT(&huart2, uartRxBuffer, UART_RX_BUFFER_SIZE);
 8001302:	2201      	movs	r2, #1
 8001304:	497c      	ldr	r1, [pc, #496]	; (80014f8 <main+0x268>)
 8001306:	487b      	ldr	r0, [pc, #492]	; (80014f4 <main+0x264>)
 8001308:	f005 f980 	bl	800660c <HAL_UART_Receive_IT>
	HAL_Delay(10);
 800130c:	200a      	movs	r0, #10
 800130e:	f000 fd5d 	bl	8001dcc <HAL_Delay>

	HAL_UART_Transmit(&huart2, started, sizeof(started), HAL_MAX_DELAY);
 8001312:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001316:	2266      	movs	r2, #102	; 0x66
 8001318:	4979      	ldr	r1, [pc, #484]	; (8001500 <main+0x270>)
 800131a:	4876      	ldr	r0, [pc, #472]	; (80014f4 <main+0x264>)
 800131c:	f005 f8e0 	bl	80064e0 <HAL_UART_Transmit>
	HAL_UART_Transmit(&huart2, prompt, sizeof(prompt), HAL_MAX_DELAY);
 8001320:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001324:	2218      	movs	r2, #24
 8001326:	4977      	ldr	r1, [pc, #476]	; (8001504 <main+0x274>)
 8001328:	4872      	ldr	r0, [pc, #456]	; (80014f4 <main+0x264>)
 800132a:	f005 f8d9 	bl	80064e0 <HAL_UART_Transmit>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
	while (1)
	{
		// uartRxReceived is set to 1 when a new character is received on uart 1
		if(uartRxReceived){
 800132e:	4b76      	ldr	r3, [pc, #472]	; (8001508 <main+0x278>)
 8001330:	681b      	ldr	r3, [r3, #0]
 8001332:	2b00      	cmp	r3, #0
 8001334:	d056      	beq.n	80013e4 <main+0x154>
			switch(uartRxBuffer[0]){
 8001336:	4b70      	ldr	r3, [pc, #448]	; (80014f8 <main+0x268>)
 8001338:	781b      	ldrb	r3, [r3, #0]
 800133a:	2b0d      	cmp	r3, #13
 800133c:	d002      	beq.n	8001344 <main+0xb4>
 800133e:	2b7f      	cmp	r3, #127	; 0x7f
 8001340:	d02d      	beq.n	800139e <main+0x10e>
 8001342:	e03c      	b.n	80013be <main+0x12e>
			// Nouvelle ligne, instruction à traiter
			case ASCII_CR:
				HAL_UART_Transmit(&huart2, newline, sizeof(newline), HAL_MAX_DELAY);
 8001344:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001348:	2203      	movs	r2, #3
 800134a:	4970      	ldr	r1, [pc, #448]	; (800150c <main+0x27c>)
 800134c:	4869      	ldr	r0, [pc, #420]	; (80014f4 <main+0x264>)
 800134e:	f005 f8c7 	bl	80064e0 <HAL_UART_Transmit>
				cmdBuffer[idx_cmd] = '\0';
 8001352:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8001356:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001358:	4413      	add	r3, r2
 800135a:	2200      	movs	r2, #0
 800135c:	701a      	strb	r2, [r3, #0]
				argc = 0;
 800135e:	2300      	movs	r3, #0
 8001360:	673b      	str	r3, [r7, #112]	; 0x70
				token = strtok(cmdBuffer, "=");//
 8001362:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001366:	496a      	ldr	r1, [pc, #424]	; (8001510 <main+0x280>)
 8001368:	4618      	mov	r0, r3
 800136a:	f007 f949 	bl	8008600 <strtok>
 800136e:	66f8      	str	r0, [r7, #108]	; 0x6c
				while(token!=NULL){
 8001370:	e00d      	b.n	800138e <main+0xfe>
					argv[argc++] = token;
 8001372:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001374:	1c5a      	adds	r2, r3, #1
 8001376:	673a      	str	r2, [r7, #112]	; 0x70
 8001378:	009b      	lsls	r3, r3, #2
 800137a:	3378      	adds	r3, #120	; 0x78
 800137c:	443b      	add	r3, r7
 800137e:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8001380:	f843 2c78 	str.w	r2, [r3, #-120]
					token = strtok(NULL, " ");
 8001384:	4963      	ldr	r1, [pc, #396]	; (8001514 <main+0x284>)
 8001386:	2000      	movs	r0, #0
 8001388:	f007 f93a 	bl	8008600 <strtok>
 800138c:	66f8      	str	r0, [r7, #108]	; 0x6c
				while(token!=NULL){
 800138e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001390:	2b00      	cmp	r3, #0
 8001392:	d1ee      	bne.n	8001372 <main+0xe2>
				}
				idx_cmd = 0;
 8001394:	2300      	movs	r3, #0
 8001396:	677b      	str	r3, [r7, #116]	; 0x74
				newCmdReady = 1;
 8001398:	2301      	movs	r3, #1
 800139a:	66bb      	str	r3, [r7, #104]	; 0x68
				break;
 800139c:	e01f      	b.n	80013de <main+0x14e>
				// Suppression du dernier caractère
			case ASCII_DEL:
				cmdBuffer[idx_cmd--] = '\0';
 800139e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80013a0:	1e5a      	subs	r2, r3, #1
 80013a2:	677a      	str	r2, [r7, #116]	; 0x74
 80013a4:	3378      	adds	r3, #120	; 0x78
 80013a6:	443b      	add	r3, r7
 80013a8:	2200      	movs	r2, #0
 80013aa:	f803 2c54 	strb.w	r2, [r3, #-84]
				HAL_UART_Transmit(&huart2, uartRxBuffer, UART_RX_BUFFER_SIZE, HAL_MAX_DELAY);
 80013ae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80013b2:	2201      	movs	r2, #1
 80013b4:	4950      	ldr	r1, [pc, #320]	; (80014f8 <main+0x268>)
 80013b6:	484f      	ldr	r0, [pc, #316]	; (80014f4 <main+0x264>)
 80013b8:	f005 f892 	bl	80064e0 <HAL_UART_Transmit>
				break;
 80013bc:	e00f      	b.n	80013de <main+0x14e>
				// Nouveau caractère
			default:
				cmdBuffer[idx_cmd++] = uartRxBuffer[0];
 80013be:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80013c0:	1c5a      	adds	r2, r3, #1
 80013c2:	677a      	str	r2, [r7, #116]	; 0x74
 80013c4:	4a4c      	ldr	r2, [pc, #304]	; (80014f8 <main+0x268>)
 80013c6:	7812      	ldrb	r2, [r2, #0]
 80013c8:	3378      	adds	r3, #120	; 0x78
 80013ca:	443b      	add	r3, r7
 80013cc:	f803 2c54 	strb.w	r2, [r3, #-84]
				HAL_UART_Transmit(&huart2, uartRxBuffer, UART_RX_BUFFER_SIZE, HAL_MAX_DELAY);
 80013d0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80013d4:	2201      	movs	r2, #1
 80013d6:	4948      	ldr	r1, [pc, #288]	; (80014f8 <main+0x268>)
 80013d8:	4846      	ldr	r0, [pc, #280]	; (80014f4 <main+0x264>)
 80013da:	f005 f881 	bl	80064e0 <HAL_UART_Transmit>
			}
			uartRxReceived = 0;
 80013de:	4b4a      	ldr	r3, [pc, #296]	; (8001508 <main+0x278>)
 80013e0:	2200      	movs	r2, #0
 80013e2:	601a      	str	r2, [r3, #0]
		}

		if(newCmdReady){
 80013e4:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80013e6:	2b00      	cmp	r3, #0
 80013e8:	d0a1      	beq.n	800132e <main+0x9e>

			if(strcmp(argv[0],"speed")==0){
 80013ea:	683b      	ldr	r3, [r7, #0]
 80013ec:	494a      	ldr	r1, [pc, #296]	; (8001518 <main+0x288>)
 80013ee:	4618      	mov	r0, r3
 80013f0:	f7fe ff16 	bl	8000220 <strcmp>
 80013f4:	4603      	mov	r3, r0
 80013f6:	2b00      	cmp	r3, #0
 80013f8:	d117      	bne.n	800142a <main+0x19a>
				if(strlen(argv[1])==2)
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	4618      	mov	r0, r3
 80013fe:	f7fe ff19 	bl	8000234 <strlen>
 8001402:	4603      	mov	r3, r0
 8001404:	2b02      	cmp	r3, #2
 8001406:	d108      	bne.n	800141a <main+0x18a>
				{
					change_ccr(atoi(argv[1]));
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	4618      	mov	r0, r3
 800140c:	f007 f88e 	bl	800852c <atoi>
 8001410:	4603      	mov	r3, r0
 8001412:	4618      	mov	r0, r3
 8001414:	f7ff fe08 	bl	8001028 <change_ccr>
 8001418:	e05c      	b.n	80014d4 <main+0x244>
				}
				else {
					HAL_UART_Transmit(&huart2, vitesseNotFound, sizeof(vitesseNotFound), HAL_MAX_DELAY);                      }
 800141a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800141e:	2217      	movs	r2, #23
 8001420:	493e      	ldr	r1, [pc, #248]	; (800151c <main+0x28c>)
 8001422:	4834      	ldr	r0, [pc, #208]	; (80014f4 <main+0x264>)
 8001424:	f005 f85c 	bl	80064e0 <HAL_UART_Transmit>
 8001428:	e054      	b.n	80014d4 <main+0x244>

			}
			else if(strcmp(argv[0],"start")==0)
 800142a:	683b      	ldr	r3, [r7, #0]
 800142c:	493c      	ldr	r1, [pc, #240]	; (8001520 <main+0x290>)
 800142e:	4618      	mov	r0, r3
 8001430:	f7fe fef6 	bl	8000220 <strcmp>
 8001434:	4603      	mov	r3, r0
 8001436:	2b00      	cmp	r3, #0
 8001438:	d109      	bne.n	800144e <main+0x1be>
			{
				start_module();
 800143a:	f000 f8f3 	bl	8001624 <start_module>
				HAL_UART_Transmit(&huart2, powerOn, sizeof(powerOn), HAL_MAX_DELAY);
 800143e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001442:	220d      	movs	r2, #13
 8001444:	4937      	ldr	r1, [pc, #220]	; (8001524 <main+0x294>)
 8001446:	482b      	ldr	r0, [pc, #172]	; (80014f4 <main+0x264>)
 8001448:	f005 f84a 	bl	80064e0 <HAL_UART_Transmit>
 800144c:	e042      	b.n	80014d4 <main+0x244>

			}
			else if(strcmp(argv[0],"stop")==0)
 800144e:	683b      	ldr	r3, [r7, #0]
 8001450:	4935      	ldr	r1, [pc, #212]	; (8001528 <main+0x298>)
 8001452:	4618      	mov	r0, r3
 8001454:	f7fe fee4 	bl	8000220 <strcmp>
 8001458:	4603      	mov	r3, r0
 800145a:	2b00      	cmp	r3, #0
 800145c:	d109      	bne.n	8001472 <main+0x1e2>
			{
				stop_module();
 800145e:	f000 f907 	bl	8001670 <stop_module>
				HAL_UART_Transmit(&huart2, powerOff, sizeof(powerOff), HAL_MAX_DELAY);
 8001462:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001466:	220e      	movs	r2, #14
 8001468:	4930      	ldr	r1, [pc, #192]	; (800152c <main+0x29c>)
 800146a:	4822      	ldr	r0, [pc, #136]	; (80014f4 <main+0x264>)
 800146c:	f005 f838 	bl	80064e0 <HAL_UART_Transmit>
 8001470:	e030      	b.n	80014d4 <main+0x244>
			}
			else if(strcmp(argv[0],"current")==0)
 8001472:	683b      	ldr	r3, [r7, #0]
 8001474:	492e      	ldr	r1, [pc, #184]	; (8001530 <main+0x2a0>)
 8001476:	4618      	mov	r0, r3
 8001478:	f7fe fed2 	bl	8000220 <strcmp>
 800147c:	4603      	mov	r3, r0
 800147e:	2b00      	cmp	r3, #0
 8001480:	d110      	bne.n	80014a4 <main+0x214>
			{
				int current = get_mean_current();
 8001482:	f7ff fe11 	bl	80010a8 <get_mean_current>
 8001486:	6678      	str	r0, [r7, #100]	; 0x64
				snprintf((char*)uartTxBuffer, UART_TX_BUFFER_SIZE, "\r\nCurrent = %d \r\n", current);
 8001488:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800148a:	4a2a      	ldr	r2, [pc, #168]	; (8001534 <main+0x2a4>)
 800148c:	2140      	movs	r1, #64	; 0x40
 800148e:	481b      	ldr	r0, [pc, #108]	; (80014fc <main+0x26c>)
 8001490:	f007 f882 	bl	8008598 <sniprintf>
				HAL_UART_Transmit(&huart2, uartTxBuffer, sizeof(uartTxBuffer), HAL_MAX_DELAY);
 8001494:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001498:	2240      	movs	r2, #64	; 0x40
 800149a:	4918      	ldr	r1, [pc, #96]	; (80014fc <main+0x26c>)
 800149c:	4815      	ldr	r0, [pc, #84]	; (80014f4 <main+0x264>)
 800149e:	f005 f81f 	bl	80064e0 <HAL_UART_Transmit>
 80014a2:	e017      	b.n	80014d4 <main+0x244>
			}
			else if(strcmp(argv[0],"help")==0){
 80014a4:	683b      	ldr	r3, [r7, #0]
 80014a6:	4924      	ldr	r1, [pc, #144]	; (8001538 <main+0x2a8>)
 80014a8:	4618      	mov	r0, r3
 80014aa:	f7fe feb9 	bl	8000220 <strcmp>
 80014ae:	4603      	mov	r3, r0
 80014b0:	2b00      	cmp	r3, #0
 80014b2:	d108      	bne.n	80014c6 <main+0x236>
				HAL_UART_Transmit(&huart2, help, sizeof(help), HAL_MAX_DELAY);
 80014b4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80014b8:	f44f 728d 	mov.w	r2, #282	; 0x11a
 80014bc:	491f      	ldr	r1, [pc, #124]	; (800153c <main+0x2ac>)
 80014be:	480d      	ldr	r0, [pc, #52]	; (80014f4 <main+0x264>)
 80014c0:	f005 f80e 	bl	80064e0 <HAL_UART_Transmit>
 80014c4:	e006      	b.n	80014d4 <main+0x244>
			}
			else{
				HAL_UART_Transmit(&huart2, cmdNotFound, sizeof(cmdNotFound), HAL_MAX_DELAY);
 80014c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80014ca:	2214      	movs	r2, #20
 80014cc:	491c      	ldr	r1, [pc, #112]	; (8001540 <main+0x2b0>)
 80014ce:	4809      	ldr	r0, [pc, #36]	; (80014f4 <main+0x264>)
 80014d0:	f005 f806 	bl	80064e0 <HAL_UART_Transmit>
			}
			HAL_UART_Transmit(&huart2, prompt, sizeof(prompt), HAL_MAX_DELAY);
 80014d4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80014d8:	2218      	movs	r2, #24
 80014da:	490a      	ldr	r1, [pc, #40]	; (8001504 <main+0x274>)
 80014dc:	4805      	ldr	r0, [pc, #20]	; (80014f4 <main+0x264>)
 80014de:	f004 ffff 	bl	80064e0 <HAL_UART_Transmit>
			newCmdReady = 0;
 80014e2:	2300      	movs	r3, #0
 80014e4:	66bb      	str	r3, [r7, #104]	; 0x68
		if(uartRxReceived){
 80014e6:	e722      	b.n	800132e <main+0x9e>
 80014e8:	20000364 	.word	0x20000364
 80014ec:	20000250 	.word	0x20000250
 80014f0:	200001b4 	.word	0x200001b4
 80014f4:	200003b8 	.word	0x200003b8
 80014f8:	20000320 	.word	0x20000320
 80014fc:	20000324 	.word	0x20000324
 8001500:	20000018 	.word	0x20000018
 8001504:	20000000 	.word	0x20000000
 8001508:	2000031c 	.word	0x2000031c
 800150c:	2000019c 	.word	0x2000019c
 8001510:	08009b54 	.word	0x08009b54
 8001514:	08009b58 	.word	0x08009b58
 8001518:	08009b5c 	.word	0x08009b5c
 800151c:	08009bb8 	.word	0x08009bb8
 8001520:	08009b64 	.word	0x08009b64
 8001524:	08009b98 	.word	0x08009b98
 8001528:	08009b6c 	.word	0x08009b6c
 800152c:	08009ba8 	.word	0x08009ba8
 8001530:	08009b74 	.word	0x08009b74
 8001534:	08009b7c 	.word	0x08009b7c
 8001538:	08009b90 	.word	0x08009b90
 800153c:	20000080 	.word	0x20000080
 8001540:	200001a0 	.word	0x200001a0

08001544 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001544:	b580      	push	{r7, lr}
 8001546:	b094      	sub	sp, #80	; 0x50
 8001548:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800154a:	f107 0318 	add.w	r3, r7, #24
 800154e:	2238      	movs	r2, #56	; 0x38
 8001550:	2100      	movs	r1, #0
 8001552:	4618      	mov	r0, r3
 8001554:	f007 f818 	bl	8008588 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001558:	1d3b      	adds	r3, r7, #4
 800155a:	2200      	movs	r2, #0
 800155c:	601a      	str	r2, [r3, #0]
 800155e:	605a      	str	r2, [r3, #4]
 8001560:	609a      	str	r2, [r3, #8]
 8001562:	60da      	str	r2, [r3, #12]
 8001564:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 8001566:	2000      	movs	r0, #0
 8001568:	f002 fd82 	bl	8004070 <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800156c:	2301      	movs	r3, #1
 800156e:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001570:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001574:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001576:	2302      	movs	r3, #2
 8001578:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800157a:	2303      	movs	r3, #3
 800157c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV6;
 800157e:	2306      	movs	r3, #6
 8001580:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLN = 85;
 8001582:	2355      	movs	r3, #85	; 0x55
 8001584:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001586:	2302      	movs	r3, #2
 8001588:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800158a:	2302      	movs	r3, #2
 800158c:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800158e:	2302      	movs	r3, #2
 8001590:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001592:	f107 0318 	add.w	r3, r7, #24
 8001596:	4618      	mov	r0, r3
 8001598:	f002 fe1e 	bl	80041d8 <HAL_RCC_OscConfig>
 800159c:	4603      	mov	r3, r0
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d001      	beq.n	80015a6 <SystemClock_Config+0x62>
  {
    Error_Handler();
 80015a2:	f000 f839 	bl	8001618 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015a6:	230f      	movs	r3, #15
 80015a8:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015aa:	2303      	movs	r3, #3
 80015ac:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80015ae:	2300      	movs	r3, #0
 80015b0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80015b2:	2300      	movs	r3, #0
 80015b4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80015b6:	2300      	movs	r3, #0
 80015b8:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 80015ba:	1d3b      	adds	r3, r7, #4
 80015bc:	2104      	movs	r1, #4
 80015be:	4618      	mov	r0, r3
 80015c0:	f003 f922 	bl	8004808 <HAL_RCC_ClockConfig>
 80015c4:	4603      	mov	r3, r0
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d001      	beq.n	80015ce <SystemClock_Config+0x8a>
  {
    Error_Handler();
 80015ca:	f000 f825 	bl	8001618 <Error_Handler>
  }
}
 80015ce:	bf00      	nop
 80015d0:	3750      	adds	r7, #80	; 0x50
 80015d2:	46bd      	mov	sp, r7
 80015d4:	bd80      	pop	{r7, pc}
	...

080015d8 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback (UART_HandleTypeDef * huart){
 80015d8:	b580      	push	{r7, lr}
 80015da:	b082      	sub	sp, #8
 80015dc:	af00      	add	r7, sp, #0
 80015de:	6078      	str	r0, [r7, #4]
	uartRxReceived = 1;
 80015e0:	4b05      	ldr	r3, [pc, #20]	; (80015f8 <HAL_UART_RxCpltCallback+0x20>)
 80015e2:	2201      	movs	r2, #1
 80015e4:	601a      	str	r2, [r3, #0]
	HAL_UART_Receive_IT(&huart2, uartRxBuffer, UART_RX_BUFFER_SIZE);
 80015e6:	2201      	movs	r2, #1
 80015e8:	4904      	ldr	r1, [pc, #16]	; (80015fc <HAL_UART_RxCpltCallback+0x24>)
 80015ea:	4805      	ldr	r0, [pc, #20]	; (8001600 <HAL_UART_RxCpltCallback+0x28>)
 80015ec:	f005 f80e 	bl	800660c <HAL_UART_Receive_IT>
}
 80015f0:	bf00      	nop
 80015f2:	3708      	adds	r7, #8
 80015f4:	46bd      	mov	sp, r7
 80015f6:	bd80      	pop	{r7, pc}
 80015f8:	2000031c 	.word	0x2000031c
 80015fc:	20000320 	.word	0x20000320
 8001600:	200003b8 	.word	0x200003b8

08001604 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* AdcHandle)
{
 8001604:	b480      	push	{r7}
 8001606:	b083      	sub	sp, #12
 8001608:	af00      	add	r7, sp, #0
 800160a:	6078      	str	r0, [r7, #4]

}
 800160c:	bf00      	nop
 800160e:	370c      	adds	r7, #12
 8001610:	46bd      	mov	sp, r7
 8001612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001616:	4770      	bx	lr

08001618 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001618:	b480      	push	{r7}
 800161a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800161c:	b672      	cpsid	i
}
 800161e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1)
 8001620:	e7fe      	b.n	8001620 <Error_Handler+0x8>
	...

08001624 <start_module>:

/**
 * @brief Allume le moteur
 */

void start_module(){
 8001624:	b580      	push	{r7, lr}
 8001626:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(ISO_RESET_GPIO_Port, ISO_RESET_Pin, SET);
 8001628:	2201      	movs	r2, #1
 800162a:	2108      	movs	r1, #8
 800162c:	480e      	ldr	r0, [pc, #56]	; (8001668 <start_module+0x44>)
 800162e:	f002 fce3 	bl	8003ff8 <HAL_GPIO_WritePin>
	HAL_Delay(2);
 8001632:	2002      	movs	r0, #2
 8001634:	f000 fbca 	bl	8001dcc <HAL_Delay>
	HAL_GPIO_WritePin(ISO_RESET_GPIO_Port, ISO_RESET_Pin, RESET);
 8001638:	2200      	movs	r2, #0
 800163a:	2108      	movs	r1, #8
 800163c:	480a      	ldr	r0, [pc, #40]	; (8001668 <start_module+0x44>)
 800163e:	f002 fcdb 	bl	8003ff8 <HAL_GPIO_WritePin>

	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8001642:	2100      	movs	r1, #0
 8001644:	4809      	ldr	r0, [pc, #36]	; (800166c <start_module+0x48>)
 8001646:	f003 fda1 	bl	800518c <HAL_TIM_PWM_Start>
	HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1);
 800164a:	2100      	movs	r1, #0
 800164c:	4807      	ldr	r0, [pc, #28]	; (800166c <start_module+0x48>)
 800164e:	f004 fc57 	bl	8005f00 <HAL_TIMEx_PWMN_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 8001652:	2104      	movs	r1, #4
 8001654:	4805      	ldr	r0, [pc, #20]	; (800166c <start_module+0x48>)
 8001656:	f003 fd99 	bl	800518c <HAL_TIM_PWM_Start>
	HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2);
 800165a:	2104      	movs	r1, #4
 800165c:	4803      	ldr	r0, [pc, #12]	; (800166c <start_module+0x48>)
 800165e:	f004 fc4f 	bl	8005f00 <HAL_TIMEx_PWMN_Start>

}
 8001662:	bf00      	nop
 8001664:	bd80      	pop	{r7, pc}
 8001666:	bf00      	nop
 8001668:	48000800 	.word	0x48000800
 800166c:	2000036c 	.word	0x2000036c

08001670 <stop_module>:


/**
 * @brief Eteint le moteur
 */
void stop_module(){
 8001670:	b580      	push	{r7, lr}
 8001672:	af00      	add	r7, sp, #0
	HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_1);
 8001674:	2100      	movs	r1, #0
 8001676:	4808      	ldr	r0, [pc, #32]	; (8001698 <stop_module+0x28>)
 8001678:	f003 fe9a 	bl	80053b0 <HAL_TIM_PWM_Stop>
	HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_1);
 800167c:	2100      	movs	r1, #0
 800167e:	4806      	ldr	r0, [pc, #24]	; (8001698 <stop_module+0x28>)
 8001680:	f004 fd00 	bl	8006084 <HAL_TIMEx_PWMN_Stop>
	HAL_TIM_PWM_Stop(&htim1, TIM_CHANNEL_2);
 8001684:	2104      	movs	r1, #4
 8001686:	4804      	ldr	r0, [pc, #16]	; (8001698 <stop_module+0x28>)
 8001688:	f003 fe92 	bl	80053b0 <HAL_TIM_PWM_Stop>
	HAL_TIMEx_PWMN_Stop(&htim1, TIM_CHANNEL_2);
 800168c:	2104      	movs	r1, #4
 800168e:	4802      	ldr	r0, [pc, #8]	; (8001698 <stop_module+0x28>)
 8001690:	f004 fcf8 	bl	8006084 <HAL_TIMEx_PWMN_Stop>

}
 8001694:	bf00      	nop
 8001696:	bd80      	pop	{r7, pc}
 8001698:	2000036c 	.word	0x2000036c

0800169c <HAL_MspInit>:
 800169c:	b580      	push	{r7, lr}
 800169e:	b082      	sub	sp, #8
 80016a0:	af00      	add	r7, sp, #0
 80016a2:	4b13      	ldr	r3, [pc, #76]	; (80016f0 <HAL_MspInit+0x54>)
 80016a4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80016a6:	4a12      	ldr	r2, [pc, #72]	; (80016f0 <HAL_MspInit+0x54>)
 80016a8:	f043 0301 	orr.w	r3, r3, #1
 80016ac:	6613      	str	r3, [r2, #96]	; 0x60
 80016ae:	4b10      	ldr	r3, [pc, #64]	; (80016f0 <HAL_MspInit+0x54>)
 80016b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80016b2:	f003 0301 	and.w	r3, r3, #1
 80016b6:	607b      	str	r3, [r7, #4]
 80016b8:	687b      	ldr	r3, [r7, #4]
 80016ba:	4b0d      	ldr	r3, [pc, #52]	; (80016f0 <HAL_MspInit+0x54>)
 80016bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80016be:	4a0c      	ldr	r2, [pc, #48]	; (80016f0 <HAL_MspInit+0x54>)
 80016c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80016c4:	6593      	str	r3, [r2, #88]	; 0x58
 80016c6:	4b0a      	ldr	r3, [pc, #40]	; (80016f0 <HAL_MspInit+0x54>)
 80016c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80016ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80016ce:	603b      	str	r3, [r7, #0]
 80016d0:	683b      	ldr	r3, [r7, #0]
 80016d2:	2200      	movs	r2, #0
 80016d4:	2100      	movs	r1, #0
 80016d6:	2005      	movs	r0, #5
 80016d8:	f001 ffa5 	bl	8003626 <HAL_NVIC_SetPriority>
 80016dc:	2005      	movs	r0, #5
 80016de:	f001 ffbc 	bl	800365a <HAL_NVIC_EnableIRQ>
 80016e2:	f002 fd69 	bl	80041b8 <HAL_PWREx_DisableUCPDDeadBattery>
 80016e6:	bf00      	nop
 80016e8:	3708      	adds	r7, #8
 80016ea:	46bd      	mov	sp, r7
 80016ec:	bd80      	pop	{r7, pc}
 80016ee:	bf00      	nop
 80016f0:	40021000 	.word	0x40021000

080016f4 <NMI_Handler>:
 80016f4:	b480      	push	{r7}
 80016f6:	af00      	add	r7, sp, #0
 80016f8:	e7fe      	b.n	80016f8 <NMI_Handler+0x4>

080016fa <HardFault_Handler>:
 80016fa:	b480      	push	{r7}
 80016fc:	af00      	add	r7, sp, #0
 80016fe:	e7fe      	b.n	80016fe <HardFault_Handler+0x4>

08001700 <MemManage_Handler>:
 8001700:	b480      	push	{r7}
 8001702:	af00      	add	r7, sp, #0
 8001704:	e7fe      	b.n	8001704 <MemManage_Handler+0x4>

08001706 <BusFault_Handler>:
 8001706:	b480      	push	{r7}
 8001708:	af00      	add	r7, sp, #0
 800170a:	e7fe      	b.n	800170a <BusFault_Handler+0x4>

0800170c <UsageFault_Handler>:
 800170c:	b480      	push	{r7}
 800170e:	af00      	add	r7, sp, #0
 8001710:	e7fe      	b.n	8001710 <UsageFault_Handler+0x4>

08001712 <SVC_Handler>:
 8001712:	b480      	push	{r7}
 8001714:	af00      	add	r7, sp, #0
 8001716:	bf00      	nop
 8001718:	46bd      	mov	sp, r7
 800171a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800171e:	4770      	bx	lr

08001720 <DebugMon_Handler>:
 8001720:	b480      	push	{r7}
 8001722:	af00      	add	r7, sp, #0
 8001724:	bf00      	nop
 8001726:	46bd      	mov	sp, r7
 8001728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800172c:	4770      	bx	lr

0800172e <PendSV_Handler>:
 800172e:	b480      	push	{r7}
 8001730:	af00      	add	r7, sp, #0
 8001732:	bf00      	nop
 8001734:	46bd      	mov	sp, r7
 8001736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800173a:	4770      	bx	lr

0800173c <SysTick_Handler>:
 800173c:	b580      	push	{r7, lr}
 800173e:	af00      	add	r7, sp, #0
 8001740:	f000 fb26 	bl	8001d90 <HAL_IncTick>
 8001744:	bf00      	nop
 8001746:	bd80      	pop	{r7, pc}

08001748 <RCC_IRQHandler>:
 8001748:	b480      	push	{r7}
 800174a:	af00      	add	r7, sp, #0
 800174c:	bf00      	nop
 800174e:	46bd      	mov	sp, r7
 8001750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001754:	4770      	bx	lr
	...

08001758 <DMA1_Channel1_IRQHandler>:
 8001758:	b580      	push	{r7, lr}
 800175a:	af00      	add	r7, sp, #0
 800175c:	4802      	ldr	r0, [pc, #8]	; (8001768 <DMA1_Channel1_IRQHandler+0x10>)
 800175e:	f002 f97a 	bl	8003a56 <HAL_DMA_IRQHandler>
 8001762:	bf00      	nop
 8001764:	bd80      	pop	{r7, pc}
 8001766:	bf00      	nop
 8001768:	200002bc 	.word	0x200002bc

0800176c <USART2_IRQHandler>:
 800176c:	b580      	push	{r7, lr}
 800176e:	af00      	add	r7, sp, #0
 8001770:	4802      	ldr	r0, [pc, #8]	; (800177c <USART2_IRQHandler+0x10>)
 8001772:	f004 ffa1 	bl	80066b8 <HAL_UART_IRQHandler>
 8001776:	bf00      	nop
 8001778:	bd80      	pop	{r7, pc}
 800177a:	bf00      	nop
 800177c:	200003b8 	.word	0x200003b8

08001780 <EXTI15_10_IRQHandler>:
 8001780:	b580      	push	{r7, lr}
 8001782:	af00      	add	r7, sp, #0
 8001784:	f7ff ff4e 	bl	8001624 <start_module>
 8001788:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800178c:	f002 fc4c 	bl	8004028 <HAL_GPIO_EXTI_IRQHandler>
 8001790:	bf00      	nop
 8001792:	bd80      	pop	{r7, pc}

08001794 <_getpid>:
 8001794:	b480      	push	{r7}
 8001796:	af00      	add	r7, sp, #0
 8001798:	2301      	movs	r3, #1
 800179a:	4618      	mov	r0, r3
 800179c:	46bd      	mov	sp, r7
 800179e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a2:	4770      	bx	lr

080017a4 <_kill>:
 80017a4:	b580      	push	{r7, lr}
 80017a6:	b082      	sub	sp, #8
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
 80017ac:	6039      	str	r1, [r7, #0]
 80017ae:	f006 fec1 	bl	8008534 <__errno>
 80017b2:	4603      	mov	r3, r0
 80017b4:	2216      	movs	r2, #22
 80017b6:	601a      	str	r2, [r3, #0]
 80017b8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80017bc:	4618      	mov	r0, r3
 80017be:	3708      	adds	r7, #8
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bd80      	pop	{r7, pc}

080017c4 <_exit>:
 80017c4:	b580      	push	{r7, lr}
 80017c6:	b082      	sub	sp, #8
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	6078      	str	r0, [r7, #4]
 80017cc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80017d0:	6878      	ldr	r0, [r7, #4]
 80017d2:	f7ff ffe7 	bl	80017a4 <_kill>
 80017d6:	e7fe      	b.n	80017d6 <_exit+0x12>

080017d8 <_read>:
 80017d8:	b580      	push	{r7, lr}
 80017da:	b086      	sub	sp, #24
 80017dc:	af00      	add	r7, sp, #0
 80017de:	60f8      	str	r0, [r7, #12]
 80017e0:	60b9      	str	r1, [r7, #8]
 80017e2:	607a      	str	r2, [r7, #4]
 80017e4:	2300      	movs	r3, #0
 80017e6:	617b      	str	r3, [r7, #20]
 80017e8:	e00a      	b.n	8001800 <_read+0x28>
 80017ea:	f3af 8000 	nop.w
 80017ee:	4601      	mov	r1, r0
 80017f0:	68bb      	ldr	r3, [r7, #8]
 80017f2:	1c5a      	adds	r2, r3, #1
 80017f4:	60ba      	str	r2, [r7, #8]
 80017f6:	b2ca      	uxtb	r2, r1
 80017f8:	701a      	strb	r2, [r3, #0]
 80017fa:	697b      	ldr	r3, [r7, #20]
 80017fc:	3301      	adds	r3, #1
 80017fe:	617b      	str	r3, [r7, #20]
 8001800:	697a      	ldr	r2, [r7, #20]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	429a      	cmp	r2, r3
 8001806:	dbf0      	blt.n	80017ea <_read+0x12>
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	4618      	mov	r0, r3
 800180c:	3718      	adds	r7, #24
 800180e:	46bd      	mov	sp, r7
 8001810:	bd80      	pop	{r7, pc}

08001812 <_write>:
 8001812:	b580      	push	{r7, lr}
 8001814:	b086      	sub	sp, #24
 8001816:	af00      	add	r7, sp, #0
 8001818:	60f8      	str	r0, [r7, #12]
 800181a:	60b9      	str	r1, [r7, #8]
 800181c:	607a      	str	r2, [r7, #4]
 800181e:	2300      	movs	r3, #0
 8001820:	617b      	str	r3, [r7, #20]
 8001822:	e009      	b.n	8001838 <_write+0x26>
 8001824:	68bb      	ldr	r3, [r7, #8]
 8001826:	1c5a      	adds	r2, r3, #1
 8001828:	60ba      	str	r2, [r7, #8]
 800182a:	781b      	ldrb	r3, [r3, #0]
 800182c:	4618      	mov	r0, r3
 800182e:	f3af 8000 	nop.w
 8001832:	697b      	ldr	r3, [r7, #20]
 8001834:	3301      	adds	r3, #1
 8001836:	617b      	str	r3, [r7, #20]
 8001838:	697a      	ldr	r2, [r7, #20]
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	429a      	cmp	r2, r3
 800183e:	dbf1      	blt.n	8001824 <_write+0x12>
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	4618      	mov	r0, r3
 8001844:	3718      	adds	r7, #24
 8001846:	46bd      	mov	sp, r7
 8001848:	bd80      	pop	{r7, pc}

0800184a <_close>:
 800184a:	b480      	push	{r7}
 800184c:	b083      	sub	sp, #12
 800184e:	af00      	add	r7, sp, #0
 8001850:	6078      	str	r0, [r7, #4]
 8001852:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001856:	4618      	mov	r0, r3
 8001858:	370c      	adds	r7, #12
 800185a:	46bd      	mov	sp, r7
 800185c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001860:	4770      	bx	lr

08001862 <_fstat>:
 8001862:	b480      	push	{r7}
 8001864:	b083      	sub	sp, #12
 8001866:	af00      	add	r7, sp, #0
 8001868:	6078      	str	r0, [r7, #4]
 800186a:	6039      	str	r1, [r7, #0]
 800186c:	683b      	ldr	r3, [r7, #0]
 800186e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001872:	605a      	str	r2, [r3, #4]
 8001874:	2300      	movs	r3, #0
 8001876:	4618      	mov	r0, r3
 8001878:	370c      	adds	r7, #12
 800187a:	46bd      	mov	sp, r7
 800187c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001880:	4770      	bx	lr

08001882 <_isatty>:
 8001882:	b480      	push	{r7}
 8001884:	b083      	sub	sp, #12
 8001886:	af00      	add	r7, sp, #0
 8001888:	6078      	str	r0, [r7, #4]
 800188a:	2301      	movs	r3, #1
 800188c:	4618      	mov	r0, r3
 800188e:	370c      	adds	r7, #12
 8001890:	46bd      	mov	sp, r7
 8001892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001896:	4770      	bx	lr

08001898 <_lseek>:
 8001898:	b480      	push	{r7}
 800189a:	b085      	sub	sp, #20
 800189c:	af00      	add	r7, sp, #0
 800189e:	60f8      	str	r0, [r7, #12]
 80018a0:	60b9      	str	r1, [r7, #8]
 80018a2:	607a      	str	r2, [r7, #4]
 80018a4:	2300      	movs	r3, #0
 80018a6:	4618      	mov	r0, r3
 80018a8:	3714      	adds	r7, #20
 80018aa:	46bd      	mov	sp, r7
 80018ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018b0:	4770      	bx	lr
	...

080018b4 <_sbrk>:
 80018b4:	b580      	push	{r7, lr}
 80018b6:	b086      	sub	sp, #24
 80018b8:	af00      	add	r7, sp, #0
 80018ba:	6078      	str	r0, [r7, #4]
 80018bc:	4a14      	ldr	r2, [pc, #80]	; (8001910 <_sbrk+0x5c>)
 80018be:	4b15      	ldr	r3, [pc, #84]	; (8001914 <_sbrk+0x60>)
 80018c0:	1ad3      	subs	r3, r2, r3
 80018c2:	617b      	str	r3, [r7, #20]
 80018c4:	697b      	ldr	r3, [r7, #20]
 80018c6:	613b      	str	r3, [r7, #16]
 80018c8:	4b13      	ldr	r3, [pc, #76]	; (8001918 <_sbrk+0x64>)
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	d102      	bne.n	80018d6 <_sbrk+0x22>
 80018d0:	4b11      	ldr	r3, [pc, #68]	; (8001918 <_sbrk+0x64>)
 80018d2:	4a12      	ldr	r2, [pc, #72]	; (800191c <_sbrk+0x68>)
 80018d4:	601a      	str	r2, [r3, #0]
 80018d6:	4b10      	ldr	r3, [pc, #64]	; (8001918 <_sbrk+0x64>)
 80018d8:	681a      	ldr	r2, [r3, #0]
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	4413      	add	r3, r2
 80018de:	693a      	ldr	r2, [r7, #16]
 80018e0:	429a      	cmp	r2, r3
 80018e2:	d207      	bcs.n	80018f4 <_sbrk+0x40>
 80018e4:	f006 fe26 	bl	8008534 <__errno>
 80018e8:	4603      	mov	r3, r0
 80018ea:	220c      	movs	r2, #12
 80018ec:	601a      	str	r2, [r3, #0]
 80018ee:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80018f2:	e009      	b.n	8001908 <_sbrk+0x54>
 80018f4:	4b08      	ldr	r3, [pc, #32]	; (8001918 <_sbrk+0x64>)
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	60fb      	str	r3, [r7, #12]
 80018fa:	4b07      	ldr	r3, [pc, #28]	; (8001918 <_sbrk+0x64>)
 80018fc:	681a      	ldr	r2, [r3, #0]
 80018fe:	687b      	ldr	r3, [r7, #4]
 8001900:	4413      	add	r3, r2
 8001902:	4a05      	ldr	r2, [pc, #20]	; (8001918 <_sbrk+0x64>)
 8001904:	6013      	str	r3, [r2, #0]
 8001906:	68fb      	ldr	r3, [r7, #12]
 8001908:	4618      	mov	r0, r3
 800190a:	3718      	adds	r7, #24
 800190c:	46bd      	mov	sp, r7
 800190e:	bd80      	pop	{r7, pc}
 8001910:	20020000 	.word	0x20020000
 8001914:	00000400 	.word	0x00000400
 8001918:	20000368 	.word	0x20000368
 800191c:	20000460 	.word	0x20000460

08001920 <SystemInit>:
 8001920:	b480      	push	{r7}
 8001922:	af00      	add	r7, sp, #0
 8001924:	4b06      	ldr	r3, [pc, #24]	; (8001940 <SystemInit+0x20>)
 8001926:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800192a:	4a05      	ldr	r2, [pc, #20]	; (8001940 <SystemInit+0x20>)
 800192c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001930:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001934:	bf00      	nop
 8001936:	46bd      	mov	sp, r7
 8001938:	f85d 7b04 	ldr.w	r7, [sp], #4
 800193c:	4770      	bx	lr
 800193e:	bf00      	nop
 8001940:	e000ed00 	.word	0xe000ed00

08001944 <MX_TIM1_Init>:
 8001944:	b580      	push	{r7, lr}
 8001946:	b098      	sub	sp, #96	; 0x60
 8001948:	af00      	add	r7, sp, #0
 800194a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800194e:	2200      	movs	r2, #0
 8001950:	601a      	str	r2, [r3, #0]
 8001952:	605a      	str	r2, [r3, #4]
 8001954:	609a      	str	r2, [r3, #8]
 8001956:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800195a:	2200      	movs	r2, #0
 800195c:	601a      	str	r2, [r3, #0]
 800195e:	605a      	str	r2, [r3, #4]
 8001960:	609a      	str	r2, [r3, #8]
 8001962:	60da      	str	r2, [r3, #12]
 8001964:	611a      	str	r2, [r3, #16]
 8001966:	615a      	str	r2, [r3, #20]
 8001968:	619a      	str	r2, [r3, #24]
 800196a:	1d3b      	adds	r3, r7, #4
 800196c:	2234      	movs	r2, #52	; 0x34
 800196e:	2100      	movs	r1, #0
 8001970:	4618      	mov	r0, r3
 8001972:	f006 fe09 	bl	8008588 <memset>
 8001976:	4b44      	ldr	r3, [pc, #272]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001978:	4a44      	ldr	r2, [pc, #272]	; (8001a8c <MX_TIM1_Init+0x148>)
 800197a:	601a      	str	r2, [r3, #0]
 800197c:	4b42      	ldr	r3, [pc, #264]	; (8001a88 <MX_TIM1_Init+0x144>)
 800197e:	2209      	movs	r2, #9
 8001980:	605a      	str	r2, [r3, #4]
 8001982:	4b41      	ldr	r3, [pc, #260]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001984:	2220      	movs	r2, #32
 8001986:	609a      	str	r2, [r3, #8]
 8001988:	4b3f      	ldr	r3, [pc, #252]	; (8001a88 <MX_TIM1_Init+0x144>)
 800198a:	f240 32ff 	movw	r2, #1023	; 0x3ff
 800198e:	60da      	str	r2, [r3, #12]
 8001990:	4b3d      	ldr	r3, [pc, #244]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001992:	2200      	movs	r2, #0
 8001994:	611a      	str	r2, [r3, #16]
 8001996:	4b3c      	ldr	r3, [pc, #240]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001998:	2200      	movs	r2, #0
 800199a:	615a      	str	r2, [r3, #20]
 800199c:	4b3a      	ldr	r3, [pc, #232]	; (8001a88 <MX_TIM1_Init+0x144>)
 800199e:	2280      	movs	r2, #128	; 0x80
 80019a0:	619a      	str	r2, [r3, #24]
 80019a2:	4839      	ldr	r0, [pc, #228]	; (8001a88 <MX_TIM1_Init+0x144>)
 80019a4:	f003 fb9a 	bl	80050dc <HAL_TIM_PWM_Init>
 80019a8:	4603      	mov	r3, r0
 80019aa:	2b00      	cmp	r3, #0
 80019ac:	d001      	beq.n	80019b2 <MX_TIM1_Init+0x6e>
 80019ae:	f7ff fe33 	bl	8001618 <Error_Handler>
 80019b2:	2320      	movs	r3, #32
 80019b4:	657b      	str	r3, [r7, #84]	; 0x54
 80019b6:	2300      	movs	r3, #0
 80019b8:	65bb      	str	r3, [r7, #88]	; 0x58
 80019ba:	2380      	movs	r3, #128	; 0x80
 80019bc:	65fb      	str	r3, [r7, #92]	; 0x5c
 80019be:	f107 0354 	add.w	r3, r7, #84	; 0x54
 80019c2:	4619      	mov	r1, r3
 80019c4:	4830      	ldr	r0, [pc, #192]	; (8001a88 <MX_TIM1_Init+0x144>)
 80019c6:	f004 fbbb 	bl	8006140 <HAL_TIMEx_MasterConfigSynchronization>
 80019ca:	4603      	mov	r3, r0
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	d001      	beq.n	80019d4 <MX_TIM1_Init+0x90>
 80019d0:	f7ff fe22 	bl	8001618 <Error_Handler>
 80019d4:	2360      	movs	r3, #96	; 0x60
 80019d6:	63bb      	str	r3, [r7, #56]	; 0x38
 80019d8:	f240 2366 	movw	r3, #614	; 0x266
 80019dc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80019de:	2300      	movs	r3, #0
 80019e0:	643b      	str	r3, [r7, #64]	; 0x40
 80019e2:	2300      	movs	r3, #0
 80019e4:	647b      	str	r3, [r7, #68]	; 0x44
 80019e6:	2300      	movs	r3, #0
 80019e8:	64bb      	str	r3, [r7, #72]	; 0x48
 80019ea:	2300      	movs	r3, #0
 80019ec:	64fb      	str	r3, [r7, #76]	; 0x4c
 80019ee:	2300      	movs	r3, #0
 80019f0:	653b      	str	r3, [r7, #80]	; 0x50
 80019f2:	f107 0338 	add.w	r3, r7, #56	; 0x38
 80019f6:	2200      	movs	r2, #0
 80019f8:	4619      	mov	r1, r3
 80019fa:	4823      	ldr	r0, [pc, #140]	; (8001a88 <MX_TIM1_Init+0x144>)
 80019fc:	f003 fd74 	bl	80054e8 <HAL_TIM_PWM_ConfigChannel>
 8001a00:	4603      	mov	r3, r0
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d001      	beq.n	8001a0a <MX_TIM1_Init+0xc6>
 8001a06:	f7ff fe07 	bl	8001618 <Error_Handler>
 8001a0a:	f44f 73cd 	mov.w	r3, #410	; 0x19a
 8001a0e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001a10:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8001a14:	2204      	movs	r2, #4
 8001a16:	4619      	mov	r1, r3
 8001a18:	481b      	ldr	r0, [pc, #108]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001a1a:	f003 fd65 	bl	80054e8 <HAL_TIM_PWM_ConfigChannel>
 8001a1e:	4603      	mov	r3, r0
 8001a20:	2b00      	cmp	r3, #0
 8001a22:	d001      	beq.n	8001a28 <MX_TIM1_Init+0xe4>
 8001a24:	f7ff fdf8 	bl	8001618 <Error_Handler>
 8001a28:	4817      	ldr	r0, [pc, #92]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001a2a:	f004 fcd1 	bl	80063d0 <HAL_TIMEx_EnableDeadTimePreload>
 8001a2e:	2300      	movs	r3, #0
 8001a30:	607b      	str	r3, [r7, #4]
 8001a32:	2300      	movs	r3, #0
 8001a34:	60bb      	str	r3, [r7, #8]
 8001a36:	2300      	movs	r3, #0
 8001a38:	60fb      	str	r3, [r7, #12]
 8001a3a:	23d2      	movs	r3, #210	; 0xd2
 8001a3c:	613b      	str	r3, [r7, #16]
 8001a3e:	2300      	movs	r3, #0
 8001a40:	617b      	str	r3, [r7, #20]
 8001a42:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001a46:	61bb      	str	r3, [r7, #24]
 8001a48:	2300      	movs	r3, #0
 8001a4a:	61fb      	str	r3, [r7, #28]
 8001a4c:	2300      	movs	r3, #0
 8001a4e:	623b      	str	r3, [r7, #32]
 8001a50:	2300      	movs	r3, #0
 8001a52:	627b      	str	r3, [r7, #36]	; 0x24
 8001a54:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001a58:	62bb      	str	r3, [r7, #40]	; 0x28
 8001a5a:	2300      	movs	r3, #0
 8001a5c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001a5e:	2300      	movs	r3, #0
 8001a60:	633b      	str	r3, [r7, #48]	; 0x30
 8001a62:	2300      	movs	r3, #0
 8001a64:	637b      	str	r3, [r7, #52]	; 0x34
 8001a66:	1d3b      	adds	r3, r7, #4
 8001a68:	4619      	mov	r1, r3
 8001a6a:	4807      	ldr	r0, [pc, #28]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001a6c:	f004 fbfe 	bl	800626c <HAL_TIMEx_ConfigBreakDeadTime>
 8001a70:	4603      	mov	r3, r0
 8001a72:	2b00      	cmp	r3, #0
 8001a74:	d001      	beq.n	8001a7a <MX_TIM1_Init+0x136>
 8001a76:	f7ff fdcf 	bl	8001618 <Error_Handler>
 8001a7a:	4803      	ldr	r0, [pc, #12]	; (8001a88 <MX_TIM1_Init+0x144>)
 8001a7c:	f000 f828 	bl	8001ad0 <HAL_TIM_MspPostInit>
 8001a80:	bf00      	nop
 8001a82:	3760      	adds	r7, #96	; 0x60
 8001a84:	46bd      	mov	sp, r7
 8001a86:	bd80      	pop	{r7, pc}
 8001a88:	2000036c 	.word	0x2000036c
 8001a8c:	40012c00 	.word	0x40012c00

08001a90 <HAL_TIM_PWM_MspInit>:
 8001a90:	b480      	push	{r7}
 8001a92:	b085      	sub	sp, #20
 8001a94:	af00      	add	r7, sp, #0
 8001a96:	6078      	str	r0, [r7, #4]
 8001a98:	687b      	ldr	r3, [r7, #4]
 8001a9a:	681b      	ldr	r3, [r3, #0]
 8001a9c:	4a0a      	ldr	r2, [pc, #40]	; (8001ac8 <HAL_TIM_PWM_MspInit+0x38>)
 8001a9e:	4293      	cmp	r3, r2
 8001aa0:	d10b      	bne.n	8001aba <HAL_TIM_PWM_MspInit+0x2a>
 8001aa2:	4b0a      	ldr	r3, [pc, #40]	; (8001acc <HAL_TIM_PWM_MspInit+0x3c>)
 8001aa4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001aa6:	4a09      	ldr	r2, [pc, #36]	; (8001acc <HAL_TIM_PWM_MspInit+0x3c>)
 8001aa8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001aac:	6613      	str	r3, [r2, #96]	; 0x60
 8001aae:	4b07      	ldr	r3, [pc, #28]	; (8001acc <HAL_TIM_PWM_MspInit+0x3c>)
 8001ab0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8001ab2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001ab6:	60fb      	str	r3, [r7, #12]
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	bf00      	nop
 8001abc:	3714      	adds	r7, #20
 8001abe:	46bd      	mov	sp, r7
 8001ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ac4:	4770      	bx	lr
 8001ac6:	bf00      	nop
 8001ac8:	40012c00 	.word	0x40012c00
 8001acc:	40021000 	.word	0x40021000

08001ad0 <HAL_TIM_MspPostInit>:
 8001ad0:	b580      	push	{r7, lr}
 8001ad2:	b088      	sub	sp, #32
 8001ad4:	af00      	add	r7, sp, #0
 8001ad6:	6078      	str	r0, [r7, #4]
 8001ad8:	f107 030c 	add.w	r3, r7, #12
 8001adc:	2200      	movs	r2, #0
 8001ade:	601a      	str	r2, [r3, #0]
 8001ae0:	605a      	str	r2, [r3, #4]
 8001ae2:	609a      	str	r2, [r3, #8]
 8001ae4:	60da      	str	r2, [r3, #12]
 8001ae6:	611a      	str	r2, [r3, #16]
 8001ae8:	687b      	ldr	r3, [r7, #4]
 8001aea:	681b      	ldr	r3, [r3, #0]
 8001aec:	4a12      	ldr	r2, [pc, #72]	; (8001b38 <HAL_TIM_MspPostInit+0x68>)
 8001aee:	4293      	cmp	r3, r2
 8001af0:	d11d      	bne.n	8001b2e <HAL_TIM_MspPostInit+0x5e>
 8001af2:	4b12      	ldr	r3, [pc, #72]	; (8001b3c <HAL_TIM_MspPostInit+0x6c>)
 8001af4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001af6:	4a11      	ldr	r2, [pc, #68]	; (8001b3c <HAL_TIM_MspPostInit+0x6c>)
 8001af8:	f043 0301 	orr.w	r3, r3, #1
 8001afc:	64d3      	str	r3, [r2, #76]	; 0x4c
 8001afe:	4b0f      	ldr	r3, [pc, #60]	; (8001b3c <HAL_TIM_MspPostInit+0x6c>)
 8001b00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001b02:	f003 0301 	and.w	r3, r3, #1
 8001b06:	60bb      	str	r3, [r7, #8]
 8001b08:	68bb      	ldr	r3, [r7, #8]
 8001b0a:	f44f 53d8 	mov.w	r3, #6912	; 0x1b00
 8001b0e:	60fb      	str	r3, [r7, #12]
 8001b10:	2302      	movs	r3, #2
 8001b12:	613b      	str	r3, [r7, #16]
 8001b14:	2300      	movs	r3, #0
 8001b16:	617b      	str	r3, [r7, #20]
 8001b18:	2300      	movs	r3, #0
 8001b1a:	61bb      	str	r3, [r7, #24]
 8001b1c:	2306      	movs	r3, #6
 8001b1e:	61fb      	str	r3, [r7, #28]
 8001b20:	f107 030c 	add.w	r3, r7, #12
 8001b24:	4619      	mov	r1, r3
 8001b26:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001b2a:	f002 f8e3 	bl	8003cf4 <HAL_GPIO_Init>
 8001b2e:	bf00      	nop
 8001b30:	3720      	adds	r7, #32
 8001b32:	46bd      	mov	sp, r7
 8001b34:	bd80      	pop	{r7, pc}
 8001b36:	bf00      	nop
 8001b38:	40012c00 	.word	0x40012c00
 8001b3c:	40021000 	.word	0x40021000

08001b40 <MX_USART2_UART_Init>:
 8001b40:	b580      	push	{r7, lr}
 8001b42:	af00      	add	r7, sp, #0
 8001b44:	4b22      	ldr	r3, [pc, #136]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b46:	4a23      	ldr	r2, [pc, #140]	; (8001bd4 <MX_USART2_UART_Init+0x94>)
 8001b48:	601a      	str	r2, [r3, #0]
 8001b4a:	4b21      	ldr	r3, [pc, #132]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b4c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001b50:	605a      	str	r2, [r3, #4]
 8001b52:	4b1f      	ldr	r3, [pc, #124]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b54:	2200      	movs	r2, #0
 8001b56:	609a      	str	r2, [r3, #8]
 8001b58:	4b1d      	ldr	r3, [pc, #116]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	60da      	str	r2, [r3, #12]
 8001b5e:	4b1c      	ldr	r3, [pc, #112]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b60:	2200      	movs	r2, #0
 8001b62:	611a      	str	r2, [r3, #16]
 8001b64:	4b1a      	ldr	r3, [pc, #104]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b66:	220c      	movs	r2, #12
 8001b68:	615a      	str	r2, [r3, #20]
 8001b6a:	4b19      	ldr	r3, [pc, #100]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b6c:	2200      	movs	r2, #0
 8001b6e:	619a      	str	r2, [r3, #24]
 8001b70:	4b17      	ldr	r3, [pc, #92]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b72:	2200      	movs	r2, #0
 8001b74:	61da      	str	r2, [r3, #28]
 8001b76:	4b16      	ldr	r3, [pc, #88]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b78:	2200      	movs	r2, #0
 8001b7a:	621a      	str	r2, [r3, #32]
 8001b7c:	4b14      	ldr	r3, [pc, #80]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b7e:	2200      	movs	r2, #0
 8001b80:	625a      	str	r2, [r3, #36]	; 0x24
 8001b82:	4b13      	ldr	r3, [pc, #76]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b84:	2200      	movs	r2, #0
 8001b86:	629a      	str	r2, [r3, #40]	; 0x28
 8001b88:	4811      	ldr	r0, [pc, #68]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b8a:	f004 fc59 	bl	8006440 <HAL_UART_Init>
 8001b8e:	4603      	mov	r3, r0
 8001b90:	2b00      	cmp	r3, #0
 8001b92:	d001      	beq.n	8001b98 <MX_USART2_UART_Init+0x58>
 8001b94:	f7ff fd40 	bl	8001618 <Error_Handler>
 8001b98:	2100      	movs	r1, #0
 8001b9a:	480d      	ldr	r0, [pc, #52]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001b9c:	f006 fbfb 	bl	8008396 <HAL_UARTEx_SetTxFifoThreshold>
 8001ba0:	4603      	mov	r3, r0
 8001ba2:	2b00      	cmp	r3, #0
 8001ba4:	d001      	beq.n	8001baa <MX_USART2_UART_Init+0x6a>
 8001ba6:	f7ff fd37 	bl	8001618 <Error_Handler>
 8001baa:	2100      	movs	r1, #0
 8001bac:	4808      	ldr	r0, [pc, #32]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001bae:	f006 fc30 	bl	8008412 <HAL_UARTEx_SetRxFifoThreshold>
 8001bb2:	4603      	mov	r3, r0
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d001      	beq.n	8001bbc <MX_USART2_UART_Init+0x7c>
 8001bb8:	f7ff fd2e 	bl	8001618 <Error_Handler>
 8001bbc:	4804      	ldr	r0, [pc, #16]	; (8001bd0 <MX_USART2_UART_Init+0x90>)
 8001bbe:	f006 fbb1 	bl	8008324 <HAL_UARTEx_DisableFifoMode>
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d001      	beq.n	8001bcc <MX_USART2_UART_Init+0x8c>
 8001bc8:	f7ff fd26 	bl	8001618 <Error_Handler>
 8001bcc:	bf00      	nop
 8001bce:	bd80      	pop	{r7, pc}
 8001bd0:	200003b8 	.word	0x200003b8
 8001bd4:	40004400 	.word	0x40004400

08001bd8 <HAL_UART_MspInit>:
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	b09e      	sub	sp, #120	; 0x78
 8001bdc:	af00      	add	r7, sp, #0
 8001bde:	6078      	str	r0, [r7, #4]
 8001be0:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8001be4:	2200      	movs	r2, #0
 8001be6:	601a      	str	r2, [r3, #0]
 8001be8:	605a      	str	r2, [r3, #4]
 8001bea:	609a      	str	r2, [r3, #8]
 8001bec:	60da      	str	r2, [r3, #12]
 8001bee:	611a      	str	r2, [r3, #16]
 8001bf0:	f107 0310 	add.w	r3, r7, #16
 8001bf4:	2254      	movs	r2, #84	; 0x54
 8001bf6:	2100      	movs	r1, #0
 8001bf8:	4618      	mov	r0, r3
 8001bfa:	f006 fcc5 	bl	8008588 <memset>
 8001bfe:	687b      	ldr	r3, [r7, #4]
 8001c00:	681b      	ldr	r3, [r3, #0]
 8001c02:	4a23      	ldr	r2, [pc, #140]	; (8001c90 <HAL_UART_MspInit+0xb8>)
 8001c04:	4293      	cmp	r3, r2
 8001c06:	d13e      	bne.n	8001c86 <HAL_UART_MspInit+0xae>
 8001c08:	2302      	movs	r3, #2
 8001c0a:	613b      	str	r3, [r7, #16]
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	61bb      	str	r3, [r7, #24]
 8001c10:	f107 0310 	add.w	r3, r7, #16
 8001c14:	4618      	mov	r0, r3
 8001c16:	f003 f813 	bl	8004c40 <HAL_RCCEx_PeriphCLKConfig>
 8001c1a:	4603      	mov	r3, r0
 8001c1c:	2b00      	cmp	r3, #0
 8001c1e:	d001      	beq.n	8001c24 <HAL_UART_MspInit+0x4c>
 8001c20:	f7ff fcfa 	bl	8001618 <Error_Handler>
 8001c24:	4b1b      	ldr	r3, [pc, #108]	; (8001c94 <HAL_UART_MspInit+0xbc>)
 8001c26:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001c28:	4a1a      	ldr	r2, [pc, #104]	; (8001c94 <HAL_UART_MspInit+0xbc>)
 8001c2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001c2e:	6593      	str	r3, [r2, #88]	; 0x58
 8001c30:	4b18      	ldr	r3, [pc, #96]	; (8001c94 <HAL_UART_MspInit+0xbc>)
 8001c32:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8001c34:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001c38:	60fb      	str	r3, [r7, #12]
 8001c3a:	68fb      	ldr	r3, [r7, #12]
 8001c3c:	4b15      	ldr	r3, [pc, #84]	; (8001c94 <HAL_UART_MspInit+0xbc>)
 8001c3e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001c40:	4a14      	ldr	r2, [pc, #80]	; (8001c94 <HAL_UART_MspInit+0xbc>)
 8001c42:	f043 0301 	orr.w	r3, r3, #1
 8001c46:	64d3      	str	r3, [r2, #76]	; 0x4c
 8001c48:	4b12      	ldr	r3, [pc, #72]	; (8001c94 <HAL_UART_MspInit+0xbc>)
 8001c4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001c4c:	f003 0301 	and.w	r3, r3, #1
 8001c50:	60bb      	str	r3, [r7, #8]
 8001c52:	68bb      	ldr	r3, [r7, #8]
 8001c54:	230c      	movs	r3, #12
 8001c56:	667b      	str	r3, [r7, #100]	; 0x64
 8001c58:	2302      	movs	r3, #2
 8001c5a:	66bb      	str	r3, [r7, #104]	; 0x68
 8001c5c:	2300      	movs	r3, #0
 8001c5e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8001c60:	2300      	movs	r3, #0
 8001c62:	673b      	str	r3, [r7, #112]	; 0x70
 8001c64:	2307      	movs	r3, #7
 8001c66:	677b      	str	r3, [r7, #116]	; 0x74
 8001c68:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8001c6c:	4619      	mov	r1, r3
 8001c6e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001c72:	f002 f83f 	bl	8003cf4 <HAL_GPIO_Init>
 8001c76:	2200      	movs	r2, #0
 8001c78:	2101      	movs	r1, #1
 8001c7a:	2026      	movs	r0, #38	; 0x26
 8001c7c:	f001 fcd3 	bl	8003626 <HAL_NVIC_SetPriority>
 8001c80:	2026      	movs	r0, #38	; 0x26
 8001c82:	f001 fcea 	bl	800365a <HAL_NVIC_EnableIRQ>
 8001c86:	bf00      	nop
 8001c88:	3778      	adds	r7, #120	; 0x78
 8001c8a:	46bd      	mov	sp, r7
 8001c8c:	bd80      	pop	{r7, pc}
 8001c8e:	bf00      	nop
 8001c90:	40004400 	.word	0x40004400
 8001c94:	40021000 	.word	0x40021000

08001c98 <Reset_Handler>:
 8001c98:	480d      	ldr	r0, [pc, #52]	; (8001cd0 <LoopForever+0x2>)
 8001c9a:	4685      	mov	sp, r0
 8001c9c:	480d      	ldr	r0, [pc, #52]	; (8001cd4 <LoopForever+0x6>)
 8001c9e:	490e      	ldr	r1, [pc, #56]	; (8001cd8 <LoopForever+0xa>)
 8001ca0:	4a0e      	ldr	r2, [pc, #56]	; (8001cdc <LoopForever+0xe>)
 8001ca2:	2300      	movs	r3, #0
 8001ca4:	e002      	b.n	8001cac <LoopCopyDataInit>

08001ca6 <CopyDataInit>:
 8001ca6:	58d4      	ldr	r4, [r2, r3]
 8001ca8:	50c4      	str	r4, [r0, r3]
 8001caa:	3304      	adds	r3, #4

08001cac <LoopCopyDataInit>:
 8001cac:	18c4      	adds	r4, r0, r3
 8001cae:	428c      	cmp	r4, r1
 8001cb0:	d3f9      	bcc.n	8001ca6 <CopyDataInit>
 8001cb2:	4a0b      	ldr	r2, [pc, #44]	; (8001ce0 <LoopForever+0x12>)
 8001cb4:	4c0b      	ldr	r4, [pc, #44]	; (8001ce4 <LoopForever+0x16>)
 8001cb6:	2300      	movs	r3, #0
 8001cb8:	e001      	b.n	8001cbe <LoopFillZerobss>

08001cba <FillZerobss>:
 8001cba:	6013      	str	r3, [r2, #0]
 8001cbc:	3204      	adds	r2, #4

08001cbe <LoopFillZerobss>:
 8001cbe:	42a2      	cmp	r2, r4
 8001cc0:	d3fb      	bcc.n	8001cba <FillZerobss>
 8001cc2:	f7ff fe2d 	bl	8001920 <SystemInit>
 8001cc6:	f006 fc3b 	bl	8008540 <__libc_init_array>
 8001cca:	f7ff fae1 	bl	8001290 <main>

08001cce <LoopForever>:
 8001cce:	e7fe      	b.n	8001cce <LoopForever>
 8001cd0:	20020000 	.word	0x20020000
 8001cd4:	20000000 	.word	0x20000000
 8001cd8:	20000234 	.word	0x20000234
 8001cdc:	08009e68 	.word	0x08009e68
 8001ce0:	20000234 	.word	0x20000234
 8001ce4:	2000045c 	.word	0x2000045c

08001ce8 <ADC1_2_IRQHandler>:
 8001ce8:	e7fe      	b.n	8001ce8 <ADC1_2_IRQHandler>

08001cea <HAL_Init>:
 8001cea:	b580      	push	{r7, lr}
 8001cec:	b082      	sub	sp, #8
 8001cee:	af00      	add	r7, sp, #0
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	71fb      	strb	r3, [r7, #7]
 8001cf4:	2003      	movs	r0, #3
 8001cf6:	f001 fc8b 	bl	8003610 <HAL_NVIC_SetPriorityGrouping>
 8001cfa:	2000      	movs	r0, #0
 8001cfc:	f000 f80e 	bl	8001d1c <HAL_InitTick>
 8001d00:	4603      	mov	r3, r0
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d002      	beq.n	8001d0c <HAL_Init+0x22>
 8001d06:	2301      	movs	r3, #1
 8001d08:	71fb      	strb	r3, [r7, #7]
 8001d0a:	e001      	b.n	8001d10 <HAL_Init+0x26>
 8001d0c:	f7ff fcc6 	bl	800169c <HAL_MspInit>
 8001d10:	79fb      	ldrb	r3, [r7, #7]
 8001d12:	4618      	mov	r0, r3
 8001d14:	3708      	adds	r7, #8
 8001d16:	46bd      	mov	sp, r7
 8001d18:	bd80      	pop	{r7, pc}
	...

08001d1c <HAL_InitTick>:
 8001d1c:	b580      	push	{r7, lr}
 8001d1e:	b084      	sub	sp, #16
 8001d20:	af00      	add	r7, sp, #0
 8001d22:	6078      	str	r0, [r7, #4]
 8001d24:	2300      	movs	r3, #0
 8001d26:	73fb      	strb	r3, [r7, #15]
 8001d28:	4b16      	ldr	r3, [pc, #88]	; (8001d84 <HAL_InitTick+0x68>)
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d022      	beq.n	8001d76 <HAL_InitTick+0x5a>
 8001d30:	4b15      	ldr	r3, [pc, #84]	; (8001d88 <HAL_InitTick+0x6c>)
 8001d32:	681a      	ldr	r2, [r3, #0]
 8001d34:	4b13      	ldr	r3, [pc, #76]	; (8001d84 <HAL_InitTick+0x68>)
 8001d36:	681b      	ldr	r3, [r3, #0]
 8001d38:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001d3c:	fbb1 f3f3 	udiv	r3, r1, r3
 8001d40:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d44:	4618      	mov	r0, r3
 8001d46:	f001 fc96 	bl	8003676 <HAL_SYSTICK_Config>
 8001d4a:	4603      	mov	r3, r0
 8001d4c:	2b00      	cmp	r3, #0
 8001d4e:	d10f      	bne.n	8001d70 <HAL_InitTick+0x54>
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	2b0f      	cmp	r3, #15
 8001d54:	d809      	bhi.n	8001d6a <HAL_InitTick+0x4e>
 8001d56:	2200      	movs	r2, #0
 8001d58:	6879      	ldr	r1, [r7, #4]
 8001d5a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001d5e:	f001 fc62 	bl	8003626 <HAL_NVIC_SetPriority>
 8001d62:	4a0a      	ldr	r2, [pc, #40]	; (8001d8c <HAL_InitTick+0x70>)
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	6013      	str	r3, [r2, #0]
 8001d68:	e007      	b.n	8001d7a <HAL_InitTick+0x5e>
 8001d6a:	2301      	movs	r3, #1
 8001d6c:	73fb      	strb	r3, [r7, #15]
 8001d6e:	e004      	b.n	8001d7a <HAL_InitTick+0x5e>
 8001d70:	2301      	movs	r3, #1
 8001d72:	73fb      	strb	r3, [r7, #15]
 8001d74:	e001      	b.n	8001d7a <HAL_InitTick+0x5e>
 8001d76:	2301      	movs	r3, #1
 8001d78:	73fb      	strb	r3, [r7, #15]
 8001d7a:	7bfb      	ldrb	r3, [r7, #15]
 8001d7c:	4618      	mov	r0, r3
 8001d7e:	3710      	adds	r7, #16
 8001d80:	46bd      	mov	sp, r7
 8001d82:	bd80      	pop	{r7, pc}
 8001d84:	200001cc 	.word	0x200001cc
 8001d88:	200001c4 	.word	0x200001c4
 8001d8c:	200001c8 	.word	0x200001c8

08001d90 <HAL_IncTick>:
 8001d90:	b480      	push	{r7}
 8001d92:	af00      	add	r7, sp, #0
 8001d94:	4b05      	ldr	r3, [pc, #20]	; (8001dac <HAL_IncTick+0x1c>)
 8001d96:	681a      	ldr	r2, [r3, #0]
 8001d98:	4b05      	ldr	r3, [pc, #20]	; (8001db0 <HAL_IncTick+0x20>)
 8001d9a:	681b      	ldr	r3, [r3, #0]
 8001d9c:	4413      	add	r3, r2
 8001d9e:	4a03      	ldr	r2, [pc, #12]	; (8001dac <HAL_IncTick+0x1c>)
 8001da0:	6013      	str	r3, [r2, #0]
 8001da2:	bf00      	nop
 8001da4:	46bd      	mov	sp, r7
 8001da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001daa:	4770      	bx	lr
 8001dac:	20000448 	.word	0x20000448
 8001db0:	200001cc 	.word	0x200001cc

08001db4 <HAL_GetTick>:
 8001db4:	b480      	push	{r7}
 8001db6:	af00      	add	r7, sp, #0
 8001db8:	4b03      	ldr	r3, [pc, #12]	; (8001dc8 <HAL_GetTick+0x14>)
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	4618      	mov	r0, r3
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc4:	4770      	bx	lr
 8001dc6:	bf00      	nop
 8001dc8:	20000448 	.word	0x20000448

08001dcc <HAL_Delay>:
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	b084      	sub	sp, #16
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	6078      	str	r0, [r7, #4]
 8001dd4:	f7ff ffee 	bl	8001db4 <HAL_GetTick>
 8001dd8:	60b8      	str	r0, [r7, #8]
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	60fb      	str	r3, [r7, #12]
 8001dde:	68fb      	ldr	r3, [r7, #12]
 8001de0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001de4:	d004      	beq.n	8001df0 <HAL_Delay+0x24>
 8001de6:	4b09      	ldr	r3, [pc, #36]	; (8001e0c <HAL_Delay+0x40>)
 8001de8:	681b      	ldr	r3, [r3, #0]
 8001dea:	68fa      	ldr	r2, [r7, #12]
 8001dec:	4413      	add	r3, r2
 8001dee:	60fb      	str	r3, [r7, #12]
 8001df0:	bf00      	nop
 8001df2:	f7ff ffdf 	bl	8001db4 <HAL_GetTick>
 8001df6:	4602      	mov	r2, r0
 8001df8:	68bb      	ldr	r3, [r7, #8]
 8001dfa:	1ad3      	subs	r3, r2, r3
 8001dfc:	68fa      	ldr	r2, [r7, #12]
 8001dfe:	429a      	cmp	r2, r3
 8001e00:	d8f7      	bhi.n	8001df2 <HAL_Delay+0x26>
 8001e02:	bf00      	nop
 8001e04:	bf00      	nop
 8001e06:	3710      	adds	r7, #16
 8001e08:	46bd      	mov	sp, r7
 8001e0a:	bd80      	pop	{r7, pc}
 8001e0c:	200001cc 	.word	0x200001cc

08001e10 <LL_ADC_SetCommonClock>:
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
  *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
{
 8001e10:	b480      	push	{r7}
 8001e12:	b083      	sub	sp, #12
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	6078      	str	r0, [r7, #4]
 8001e18:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	689b      	ldr	r3, [r3, #8]
 8001e1e:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8001e22:	683b      	ldr	r3, [r7, #0]
 8001e24:	431a      	orrs	r2, r3
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	609a      	str	r2, [r3, #8]
}
 8001e2a:	bf00      	nop
 8001e2c:	370c      	adds	r7, #12
 8001e2e:	46bd      	mov	sp, r7
 8001e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e34:	4770      	bx	lr

08001e36 <LL_ADC_SetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t PathInternal)
{
 8001e36:	b480      	push	{r7}
 8001e38:	b083      	sub	sp, #12
 8001e3a:	af00      	add	r7, sp, #0
 8001e3c:	6078      	str	r0, [r7, #4]
 8001e3e:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSEL, PathInternal);
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	689b      	ldr	r3, [r3, #8]
 8001e44:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8001e48:	683b      	ldr	r3, [r7, #0]
 8001e4a:	431a      	orrs	r2, r3
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	609a      	str	r2, [r3, #8]
}
 8001e50:	bf00      	nop
 8001e52:	370c      	adds	r7, #12
 8001e54:	46bd      	mov	sp, r7
 8001e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e5a:	4770      	bx	lr

08001e5c <LL_ADC_GetCommonPathInternalCh>:
  *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
  *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
  *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
  */
__STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
{
 8001e5c:	b480      	push	{r7}
 8001e5e:	b083      	sub	sp, #12
 8001e60:	af00      	add	r7, sp, #0
 8001e62:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_VSENSESEL | ADC_CCR_VBATSEL));
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	689b      	ldr	r3, [r3, #8]
 8001e68:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
}
 8001e6c:	4618      	mov	r0, r3
 8001e6e:	370c      	adds	r7, #12
 8001e70:	46bd      	mov	sp, r7
 8001e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e76:	4770      	bx	lr

08001e78 <LL_ADC_SetOffset>:
  *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 ADC clock cycles (fADC) to convert in 12-bit resolution.\n
  * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32_t OffsetLevel)
{
 8001e78:	b480      	push	{r7}
 8001e7a:	b087      	sub	sp, #28
 8001e7c:	af00      	add	r7, sp, #0
 8001e7e:	60f8      	str	r0, [r7, #12]
 8001e80:	60b9      	str	r1, [r7, #8]
 8001e82:	607a      	str	r2, [r7, #4]
 8001e84:	603b      	str	r3, [r7, #0]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001e86:	68fb      	ldr	r3, [r7, #12]
 8001e88:	3360      	adds	r3, #96	; 0x60
 8001e8a:	461a      	mov	r2, r3
 8001e8c:	68bb      	ldr	r3, [r7, #8]
 8001e8e:	009b      	lsls	r3, r3, #2
 8001e90:	4413      	add	r3, r2
 8001e92:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001e94:	697b      	ldr	r3, [r7, #20]
 8001e96:	681a      	ldr	r2, [r3, #0]
 8001e98:	4b08      	ldr	r3, [pc, #32]	; (8001ebc <LL_ADC_SetOffset+0x44>)
 8001e9a:	4013      	ands	r3, r2
 8001e9c:	687a      	ldr	r2, [r7, #4]
 8001e9e:	f002 41f8 	and.w	r1, r2, #2080374784	; 0x7c000000
 8001ea2:	683a      	ldr	r2, [r7, #0]
 8001ea4:	430a      	orrs	r2, r1
 8001ea6:	4313      	orrs	r3, r2
 8001ea8:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8001eac:	697b      	ldr	r3, [r7, #20]
 8001eae:	601a      	str	r2, [r3, #0]
             ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
             ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
}
 8001eb0:	bf00      	nop
 8001eb2:	371c      	adds	r7, #28
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eba:	4770      	bx	lr
 8001ebc:	03fff000 	.word	0x03fff000

08001ec0 <LL_ADC_GetOffsetChannel>:
  *         (1, 2, 3, 4, 5, 7) For ADC channel read back from ADC register,
  *                      comparison with internal channel parameter to be done
  *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
  */
__STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
{
 8001ec0:	b480      	push	{r7}
 8001ec2:	b085      	sub	sp, #20
 8001ec4:	af00      	add	r7, sp, #0
 8001ec6:	6078      	str	r0, [r7, #4]
 8001ec8:	6039      	str	r1, [r7, #0]
  const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	3360      	adds	r3, #96	; 0x60
 8001ece:	461a      	mov	r2, r3
 8001ed0:	683b      	ldr	r3, [r7, #0]
 8001ed2:	009b      	lsls	r3, r3, #2
 8001ed4:	4413      	add	r3, r2
 8001ed6:	60fb      	str	r3, [r7, #12]

  return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
 8001ed8:	68fb      	ldr	r3, [r7, #12]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
}
 8001ee0:	4618      	mov	r0, r3
 8001ee2:	3714      	adds	r7, #20
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eea:	4770      	bx	lr

08001eec <LL_ADC_SetOffsetState>:
  *         @arg @ref LL_ADC_OFFSET_DISABLE
  *         @arg @ref LL_ADC_OFFSET_ENABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetState)
{
 8001eec:	b480      	push	{r7}
 8001eee:	b087      	sub	sp, #28
 8001ef0:	af00      	add	r7, sp, #0
 8001ef2:	60f8      	str	r0, [r7, #12]
 8001ef4:	60b9      	str	r1, [r7, #8]
 8001ef6:	607a      	str	r2, [r7, #4]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001ef8:	68fb      	ldr	r3, [r7, #12]
 8001efa:	3360      	adds	r3, #96	; 0x60
 8001efc:	461a      	mov	r2, r3
 8001efe:	68bb      	ldr	r3, [r7, #8]
 8001f00:	009b      	lsls	r3, r3, #2
 8001f02:	4413      	add	r3, r2
 8001f04:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001f06:	697b      	ldr	r3, [r7, #20]
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	431a      	orrs	r2, r3
 8001f12:	697b      	ldr	r3, [r7, #20]
 8001f14:	601a      	str	r2, [r3, #0]
             ADC_OFR1_OFFSET1_EN,
             OffsetState);
}
 8001f16:	bf00      	nop
 8001f18:	371c      	adds	r7, #28
 8001f1a:	46bd      	mov	sp, r7
 8001f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f20:	4770      	bx	lr

08001f22 <LL_ADC_SetOffsetSign>:
  *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
  *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
{
 8001f22:	b480      	push	{r7}
 8001f24:	b087      	sub	sp, #28
 8001f26:	af00      	add	r7, sp, #0
 8001f28:	60f8      	str	r0, [r7, #12]
 8001f2a:	60b9      	str	r1, [r7, #8]
 8001f2c:	607a      	str	r2, [r7, #4]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001f2e:	68fb      	ldr	r3, [r7, #12]
 8001f30:	3360      	adds	r3, #96	; 0x60
 8001f32:	461a      	mov	r2, r3
 8001f34:	68bb      	ldr	r3, [r7, #8]
 8001f36:	009b      	lsls	r3, r3, #2
 8001f38:	4413      	add	r3, r2
 8001f3a:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001f3c:	697b      	ldr	r3, [r7, #20]
 8001f3e:	681b      	ldr	r3, [r3, #0]
 8001f40:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	431a      	orrs	r2, r3
 8001f48:	697b      	ldr	r3, [r7, #20]
 8001f4a:	601a      	str	r2, [r3, #0]
             ADC_OFR1_OFFSETPOS,
             OffsetSign);
}
 8001f4c:	bf00      	nop
 8001f4e:	371c      	adds	r7, #28
 8001f50:	46bd      	mov	sp, r7
 8001f52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f56:	4770      	bx	lr

08001f58 <LL_ADC_SetOffsetSaturation>:
  *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
  *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSaturation)
{
 8001f58:	b480      	push	{r7}
 8001f5a:	b087      	sub	sp, #28
 8001f5c:	af00      	add	r7, sp, #0
 8001f5e:	60f8      	str	r0, [r7, #12]
 8001f60:	60b9      	str	r1, [r7, #8]
 8001f62:	607a      	str	r2, [r7, #4]
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
 8001f64:	68fb      	ldr	r3, [r7, #12]
 8001f66:	3360      	adds	r3, #96	; 0x60
 8001f68:	461a      	mov	r2, r3
 8001f6a:	68bb      	ldr	r3, [r7, #8]
 8001f6c:	009b      	lsls	r3, r3, #2
 8001f6e:	4413      	add	r3, r2
 8001f70:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001f72:	697b      	ldr	r3, [r7, #20]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	431a      	orrs	r2, r3
 8001f7e:	697b      	ldr	r3, [r7, #20]
 8001f80:	601a      	str	r2, [r3, #0]
             ADC_OFR1_SATEN,
             OffsetSaturation);
}
 8001f82:	bf00      	nop
 8001f84:	371c      	adds	r7, #28
 8001f86:	46bd      	mov	sp, r7
 8001f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f8c:	4770      	bx	lr

08001f8e <LL_ADC_SetSamplingTimeCommonConfig>:
  *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
  *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCommonConfig)
{
 8001f8e:	b480      	push	{r7}
 8001f90:	b083      	sub	sp, #12
 8001f92:	af00      	add	r7, sp, #0
 8001f94:	6078      	str	r0, [r7, #4]
 8001f96:	6039      	str	r1, [r7, #0]
  MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
 8001f98:	687b      	ldr	r3, [r7, #4]
 8001f9a:	695b      	ldr	r3, [r3, #20]
 8001f9c:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8001fa0:	683b      	ldr	r3, [r7, #0]
 8001fa2:	431a      	orrs	r2, r3
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	615a      	str	r2, [r3, #20]
}
 8001fa8:	bf00      	nop
 8001faa:	370c      	adds	r7, #12
 8001fac:	46bd      	mov	sp, r7
 8001fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fb2:	4770      	bx	lr

08001fb4 <LL_ADC_REG_IsTriggerSourceSWStart>:
  * @param  ADCx ADC instance
  * @retval Value "0" if trigger source external trigger
  *         Value "1" if trigger source SW start.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
{
 8001fb4:	b480      	push	{r7}
 8001fb6:	b083      	sub	sp, #12
 8001fb8:	af00      	add	r7, sp, #0
 8001fba:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1UL : 0UL);
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	68db      	ldr	r3, [r3, #12]
 8001fc0:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d101      	bne.n	8001fcc <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8001fc8:	2301      	movs	r3, #1
 8001fca:	e000      	b.n	8001fce <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8001fcc:	2300      	movs	r3, #0
}
 8001fce:	4618      	mov	r0, r3
 8001fd0:	370c      	adds	r7, #12
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fd8:	4770      	bx	lr

08001fda <LL_ADC_REG_SetSequencerRanks>:
  *         (8) On STM32G4, fast channel allows: 2.5 (sampling) + 12.5 (conversion) = 15 ADC clock cycles (fADC) to convert in 12-bit resolution.
  *             Other channels are slow channels  allows: 6.5 (sampling) + 12.5 (conversion) = 19 ADC clock cycles (fADC) to convert in 12-bit resolution.\n
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channel)
{
 8001fda:	b480      	push	{r7}
 8001fdc:	b087      	sub	sp, #28
 8001fde:	af00      	add	r7, sp, #0
 8001fe0:	60f8      	str	r0, [r7, #12]
 8001fe2:	60b9      	str	r1, [r7, #8]
 8001fe4:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "Channel" with bits position          */
  /* in register and register position depending on parameter "Rank".         */
  /* Parameters "Rank" and "Channel" are used with masks because containing   */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> ADC_SQRX_REGOFFSET_POS));
 8001fe6:	68fb      	ldr	r3, [r7, #12]
 8001fe8:	3330      	adds	r3, #48	; 0x30
 8001fea:	461a      	mov	r2, r3
 8001fec:	68bb      	ldr	r3, [r7, #8]
 8001fee:	0a1b      	lsrs	r3, r3, #8
 8001ff0:	009b      	lsls	r3, r3, #2
 8001ff2:	f003 030c 	and.w	r3, r3, #12
 8001ff6:	4413      	add	r3, r2
 8001ff8:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8001ffa:	697b      	ldr	r3, [r7, #20]
 8001ffc:	681a      	ldr	r2, [r3, #0]
 8001ffe:	68bb      	ldr	r3, [r7, #8]
 8002000:	f003 031f 	and.w	r3, r3, #31
 8002004:	211f      	movs	r1, #31
 8002006:	fa01 f303 	lsl.w	r3, r1, r3
 800200a:	43db      	mvns	r3, r3
 800200c:	401a      	ands	r2, r3
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	0e9b      	lsrs	r3, r3, #26
 8002012:	f003 011f 	and.w	r1, r3, #31
 8002016:	68bb      	ldr	r3, [r7, #8]
 8002018:	f003 031f 	and.w	r3, r3, #31
 800201c:	fa01 f303 	lsl.w	r3, r1, r3
 8002020:	431a      	orrs	r2, r3
 8002022:	697b      	ldr	r3, [r7, #20]
 8002024:	601a      	str	r2, [r3, #0]
             ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
             ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
}
 8002026:	bf00      	nop
 8002028:	371c      	adds	r7, #28
 800202a:	46bd      	mov	sp, r7
 800202c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002030:	4770      	bx	lr

08002032 <LL_ADC_SetChannelSamplingTime>:
  *             can be replaced by 3.5 ADC clock cycles.
  *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SamplingTime)
{
 8002032:	b480      	push	{r7}
 8002034:	b087      	sub	sp, #28
 8002036:	af00      	add	r7, sp, #0
 8002038:	60f8      	str	r0, [r7, #12]
 800203a:	60b9      	str	r1, [r7, #8]
 800203c:	607a      	str	r2, [r7, #4]
  /* Set bits with content of parameter "SamplingTime" with bits position     */
  /* in register and register position depending on parameter "Channel".      */
  /* Parameter "Channel" is used with masks because containing                */
  /* other bits reserved for other purpose.                                   */
  __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_MASK) >> ADC_SMPRX_REGOFFSET_POS));
 800203e:	68fb      	ldr	r3, [r7, #12]
 8002040:	3314      	adds	r3, #20
 8002042:	461a      	mov	r2, r3
 8002044:	68bb      	ldr	r3, [r7, #8]
 8002046:	0e5b      	lsrs	r3, r3, #25
 8002048:	009b      	lsls	r3, r3, #2
 800204a:	f003 0304 	and.w	r3, r3, #4
 800204e:	4413      	add	r3, r2
 8002050:	617b      	str	r3, [r7, #20]

  MODIFY_REG(*preg,
 8002052:	697b      	ldr	r3, [r7, #20]
 8002054:	681a      	ldr	r2, [r3, #0]
 8002056:	68bb      	ldr	r3, [r7, #8]
 8002058:	0d1b      	lsrs	r3, r3, #20
 800205a:	f003 031f 	and.w	r3, r3, #31
 800205e:	2107      	movs	r1, #7
 8002060:	fa01 f303 	lsl.w	r3, r1, r3
 8002064:	43db      	mvns	r3, r3
 8002066:	401a      	ands	r2, r3
 8002068:	68bb      	ldr	r3, [r7, #8]
 800206a:	0d1b      	lsrs	r3, r3, #20
 800206c:	f003 031f 	and.w	r3, r3, #31
 8002070:	6879      	ldr	r1, [r7, #4]
 8002072:	fa01 f303 	lsl.w	r3, r1, r3
 8002076:	431a      	orrs	r2, r3
 8002078:	697b      	ldr	r3, [r7, #20]
 800207a:	601a      	str	r2, [r3, #0]
             ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS),
             SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_POS));
}
 800207c:	bf00      	nop
 800207e:	371c      	adds	r7, #28
 8002080:	46bd      	mov	sp, r7
 8002082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002086:	4770      	bx	lr

08002088 <LL_ADC_SetChannelSingleDiff>:
  *         @arg @ref LL_ADC_SINGLE_ENDED
  *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
  * @retval None
  */
__STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t SingleDiff)
{
 8002088:	b480      	push	{r7}
 800208a:	b085      	sub	sp, #20
 800208c:	af00      	add	r7, sp, #0
 800208e:	60f8      	str	r0, [r7, #12]
 8002090:	60b9      	str	r1, [r7, #8]
 8002092:	607a      	str	r2, [r7, #4]
  /* Bits for single or differential mode selection for each channel are set  */
  /* to 1 only when the differential mode is selected, and to 0 when the      */
  /* single mode is selected.                                                 */
  
  if (SingleDiff == LL_ADC_DIFFERENTIAL_ENDED)
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	4a0f      	ldr	r2, [pc, #60]	; (80020d4 <LL_ADC_SetChannelSingleDiff+0x4c>)
 8002098:	4293      	cmp	r3, r2
 800209a:	d10a      	bne.n	80020b2 <LL_ADC_SetChannelSingleDiff+0x2a>
  {
    SET_BIT(ADCx->DIFSEL,
 800209c:	68fb      	ldr	r3, [r7, #12]
 800209e:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 80020a2:	68bb      	ldr	r3, [r7, #8]
 80020a4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80020a8:	431a      	orrs	r2, r3
 80020aa:	68fb      	ldr	r3, [r7, #12]
 80020ac:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  else
  {
    CLEAR_BIT(ADCx->DIFSEL,
            Channel & ADC_SINGLEDIFF_CHANNEL_MASK);
  }
}
 80020b0:	e00a      	b.n	80020c8 <LL_ADC_SetChannelSingleDiff+0x40>
    CLEAR_BIT(ADCx->DIFSEL,
 80020b2:	68fb      	ldr	r3, [r7, #12]
 80020b4:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 80020b8:	68bb      	ldr	r3, [r7, #8]
 80020ba:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80020be:	43db      	mvns	r3, r3
 80020c0:	401a      	ands	r2, r3
 80020c2:	68fb      	ldr	r3, [r7, #12]
 80020c4:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
}
 80020c8:	bf00      	nop
 80020ca:	3714      	adds	r7, #20
 80020cc:	46bd      	mov	sp, r7
 80020ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d2:	4770      	bx	lr
 80020d4:	407f0000 	.word	0x407f0000

080020d8 <LL_ADC_GetMultimode>:
  *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
  *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
  *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
  */
__STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
{
 80020d8:	b480      	push	{r7}
 80020da:	b083      	sub	sp, #12
 80020dc:	af00      	add	r7, sp, #0
 80020de:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	689b      	ldr	r3, [r3, #8]
 80020e4:	f003 031f 	and.w	r3, r3, #31
}
 80020e8:	4618      	mov	r0, r3
 80020ea:	370c      	adds	r7, #12
 80020ec:	46bd      	mov	sp, r7
 80020ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020f2:	4770      	bx	lr

080020f4 <LL_ADC_DisableDeepPowerDown>:
  * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
{
 80020f4:	b480      	push	{r7}
 80020f6:	b083      	sub	sp, #12
 80020f8:	af00      	add	r7, sp, #0
 80020fa:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	689b      	ldr	r3, [r3, #8]
 8002100:	f023 4320 	bic.w	r3, r3, #2684354560	; 0xa0000000
 8002104:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8002108:	687a      	ldr	r2, [r7, #4]
 800210a:	6093      	str	r3, [r2, #8]
}
 800210c:	bf00      	nop
 800210e:	370c      	adds	r7, #12
 8002110:	46bd      	mov	sp, r7
 8002112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002116:	4770      	bx	lr

08002118 <LL_ADC_IsDeepPowerDownEnabled>:
  * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
  * @param  ADCx ADC instance
  * @retval 0: deep power down is disabled, 1: deep power down is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
{
 8002118:	b480      	push	{r7}
 800211a:	b083      	sub	sp, #12
 800211c:	af00      	add	r7, sp, #0
 800211e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	689b      	ldr	r3, [r3, #8]
 8002124:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8002128:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800212c:	d101      	bne.n	8002132 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 800212e:	2301      	movs	r3, #1
 8002130:	e000      	b.n	8002134 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8002132:	2300      	movs	r3, #0
}
 8002134:	4618      	mov	r0, r3
 8002136:	370c      	adds	r7, #12
 8002138:	46bd      	mov	sp, r7
 800213a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800213e:	4770      	bx	lr

08002140 <LL_ADC_EnableInternalRegulator>:
  * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
{
 8002140:	b480      	push	{r7}
 8002142:	b083      	sub	sp, #12
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	689b      	ldr	r3, [r3, #8]
 800214c:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 8002150:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8002154:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADVREGEN);
}
 800215c:	bf00      	nop
 800215e:	370c      	adds	r7, #12
 8002160:	46bd      	mov	sp, r7
 8002162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002166:	4770      	bx	lr

08002168 <LL_ADC_IsInternalRegulatorEnabled>:
  * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
  * @param  ADCx ADC instance
  * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
{
 8002168:	b480      	push	{r7}
 800216a:	b083      	sub	sp, #12
 800216c:	af00      	add	r7, sp, #0
 800216e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	689b      	ldr	r3, [r3, #8]
 8002174:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002178:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800217c:	d101      	bne.n	8002182 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 800217e:	2301      	movs	r3, #1
 8002180:	e000      	b.n	8002184 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8002182:	2300      	movs	r3, #0
}
 8002184:	4618      	mov	r0, r3
 8002186:	370c      	adds	r7, #12
 8002188:	46bd      	mov	sp, r7
 800218a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800218e:	4770      	bx	lr

08002190 <LL_ADC_Enable>:
  * @rmtoll CR       ADEN           LL_ADC_Enable
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
{
 8002190:	b480      	push	{r7}
 8002192:	b083      	sub	sp, #12
 8002194:	af00      	add	r7, sp, #0
 8002196:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 8002198:	687b      	ldr	r3, [r7, #4]
 800219a:	689b      	ldr	r3, [r3, #8]
 800219c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80021a0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80021a4:	f043 0201 	orr.w	r2, r3, #1
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADEN);
}
 80021ac:	bf00      	nop
 80021ae:	370c      	adds	r7, #12
 80021b0:	46bd      	mov	sp, r7
 80021b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021b6:	4770      	bx	lr

080021b8 <LL_ADC_IsEnabled>:
  * @rmtoll CR       ADEN           LL_ADC_IsEnabled
  * @param  ADCx ADC instance
  * @retval 0: ADC is disabled, 1: ADC is enabled.
  */
__STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
{
 80021b8:	b480      	push	{r7}
 80021ba:	b083      	sub	sp, #12
 80021bc:	af00      	add	r7, sp, #0
 80021be:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	689b      	ldr	r3, [r3, #8]
 80021c4:	f003 0301 	and.w	r3, r3, #1
 80021c8:	2b01      	cmp	r3, #1
 80021ca:	d101      	bne.n	80021d0 <LL_ADC_IsEnabled+0x18>
 80021cc:	2301      	movs	r3, #1
 80021ce:	e000      	b.n	80021d2 <LL_ADC_IsEnabled+0x1a>
 80021d0:	2300      	movs	r3, #0
}
 80021d2:	4618      	mov	r0, r3
 80021d4:	370c      	adds	r7, #12
 80021d6:	46bd      	mov	sp, r7
 80021d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021dc:	4770      	bx	lr

080021de <LL_ADC_REG_StartConversion>:
  * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
  * @param  ADCx ADC instance
  * @retval None
  */
__STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
{
 80021de:	b480      	push	{r7}
 80021e0:	b083      	sub	sp, #12
 80021e2:	af00      	add	r7, sp, #0
 80021e4:	6078      	str	r0, [r7, #4]
  /* Note: Write register with some additional bits forced to state reset     */
  /*       instead of modifying only the selected bit for this function,      */
  /*       to not interfere with bits with HW property "rs".                  */
  MODIFY_REG(ADCx->CR,
 80021e6:	687b      	ldr	r3, [r7, #4]
 80021e8:	689b      	ldr	r3, [r3, #8]
 80021ea:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80021ee:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80021f2:	f043 0204 	orr.w	r2, r3, #4
 80021f6:	687b      	ldr	r3, [r7, #4]
 80021f8:	609a      	str	r2, [r3, #8]
             ADC_CR_BITS_PROPERTY_RS,
             ADC_CR_ADSTART);
}
 80021fa:	bf00      	nop
 80021fc:	370c      	adds	r7, #12
 80021fe:	46bd      	mov	sp, r7
 8002200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002204:	4770      	bx	lr

08002206 <LL_ADC_REG_IsConversionOngoing>:
  * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group regular.
  */
__STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 8002206:	b480      	push	{r7}
 8002208:	b083      	sub	sp, #12
 800220a:	af00      	add	r7, sp, #0
 800220c:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	689b      	ldr	r3, [r3, #8]
 8002212:	f003 0304 	and.w	r3, r3, #4
 8002216:	2b04      	cmp	r3, #4
 8002218:	d101      	bne.n	800221e <LL_ADC_REG_IsConversionOngoing+0x18>
 800221a:	2301      	movs	r3, #1
 800221c:	e000      	b.n	8002220 <LL_ADC_REG_IsConversionOngoing+0x1a>
 800221e:	2300      	movs	r3, #0
}
 8002220:	4618      	mov	r0, r3
 8002222:	370c      	adds	r7, #12
 8002224:	46bd      	mov	sp, r7
 8002226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800222a:	4770      	bx	lr

0800222c <LL_ADC_INJ_IsConversionOngoing>:
  * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
  * @param  ADCx ADC instance
  * @retval 0: no conversion is on going on ADC group injected.
  */
__STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
{
 800222c:	b480      	push	{r7}
 800222e:	b083      	sub	sp, #12
 8002230:	af00      	add	r7, sp, #0
 8002232:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	689b      	ldr	r3, [r3, #8]
 8002238:	f003 0308 	and.w	r3, r3, #8
 800223c:	2b08      	cmp	r3, #8
 800223e:	d101      	bne.n	8002244 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002240:	2301      	movs	r3, #1
 8002242:	e000      	b.n	8002246 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8002244:	2300      	movs	r3, #0
}
 8002246:	4618      	mov	r0, r3
 8002248:	370c      	adds	r7, #12
 800224a:	46bd      	mov	sp, r7
 800224c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002250:	4770      	bx	lr
	...

08002254 <HAL_ADC_Init>:
  *         without  disabling the other ADCs.
  * @param hadc ADC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002254:	b590      	push	{r4, r7, lr}
 8002256:	b089      	sub	sp, #36	; 0x24
 8002258:	af00      	add	r7, sp, #0
 800225a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 800225c:	2300      	movs	r3, #0
 800225e:	77fb      	strb	r3, [r7, #31]
  uint32_t tmpCFGR;
  uint32_t tmp_adc_reg_is_conversion_on_going;
  __IO uint32_t wait_loop_index = 0UL;
 8002260:	2300      	movs	r3, #0
 8002262:	60bb      	str	r3, [r7, #8]
  uint32_t tmp_adc_is_conversion_on_going_regular;
  uint32_t tmp_adc_is_conversion_on_going_injected;

  /* Check ADC handle */
  if (hadc == NULL)
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	2b00      	cmp	r3, #0
 8002268:	d101      	bne.n	800226e <HAL_ADC_Init+0x1a>
  {
    return HAL_ERROR;
 800226a:	2301      	movs	r3, #1
 800226c:	e1af      	b.n	80025ce <HAL_ADC_Init+0x37a>
  assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));

  if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	695b      	ldr	r3, [r3, #20]
 8002272:	2b00      	cmp	r3, #0
  /* DISCEN and CONT bits cannot be set at the same time */
  assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == ENABLE)));

  /* Actions performed only if ADC is coming from state reset:                */
  /* - Initialization of ADC MSP                                              */
  if (hadc->State == HAL_ADC_STATE_RESET)
 8002274:	687b      	ldr	r3, [r7, #4]
 8002276:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002278:	2b00      	cmp	r3, #0
 800227a:	d109      	bne.n	8002290 <HAL_ADC_Init+0x3c>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800227c:	6878      	ldr	r0, [r7, #4]
 800227e:	f7fe fe29 	bl	8000ed4 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	2200      	movs	r2, #0
 8002286:	661a      	str	r2, [r3, #96]	; 0x60

    /* Initialize Lock */
    hadc->Lock = HAL_UNLOCKED;
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	2200      	movs	r2, #0
 800228c:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
  }

  /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
  if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	4618      	mov	r0, r3
 8002296:	f7ff ff3f 	bl	8002118 <LL_ADC_IsDeepPowerDownEnabled>
 800229a:	4603      	mov	r3, r0
 800229c:	2b00      	cmp	r3, #0
 800229e:	d004      	beq.n	80022aa <HAL_ADC_Init+0x56>
  {
    /* Disable ADC deep power down mode */
    LL_ADC_DisableDeepPowerDown(hadc->Instance);
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	681b      	ldr	r3, [r3, #0]
 80022a4:	4618      	mov	r0, r3
 80022a6:	f7ff ff25 	bl	80020f4 <LL_ADC_DisableDeepPowerDown>
    /* System was in deep power down mode, calibration must
     be relaunched or a previously saved calibration factor
     re-applied once the ADC voltage regulator is enabled */
  }

  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	4618      	mov	r0, r3
 80022b0:	f7ff ff5a 	bl	8002168 <LL_ADC_IsInternalRegulatorEnabled>
 80022b4:	4603      	mov	r3, r0
 80022b6:	2b00      	cmp	r3, #0
 80022b8:	d115      	bne.n	80022e6 <HAL_ADC_Init+0x92>
  {
    /* Enable ADC internal voltage regulator */
    LL_ADC_EnableInternalRegulator(hadc->Instance);
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	4618      	mov	r0, r3
 80022c0:	f7ff ff3e 	bl	8002140 <LL_ADC_EnableInternalRegulator>

    /* Note: Variable divided by 2 to compensate partially              */
    /*       CPU processing cycles, scaling in us split to not          */
    /*       exceed 32 bits register capacity and handle low frequency. */
    wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 80022c4:	4b9f      	ldr	r3, [pc, #636]	; (8002544 <HAL_ADC_Init+0x2f0>)
 80022c6:	681b      	ldr	r3, [r3, #0]
 80022c8:	099b      	lsrs	r3, r3, #6
 80022ca:	4a9f      	ldr	r2, [pc, #636]	; (8002548 <HAL_ADC_Init+0x2f4>)
 80022cc:	fba2 2303 	umull	r2, r3, r2, r3
 80022d0:	099b      	lsrs	r3, r3, #6
 80022d2:	3301      	adds	r3, #1
 80022d4:	005b      	lsls	r3, r3, #1
 80022d6:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 80022d8:	e002      	b.n	80022e0 <HAL_ADC_Init+0x8c>
    {
      wait_loop_index--;
 80022da:	68bb      	ldr	r3, [r7, #8]
 80022dc:	3b01      	subs	r3, #1
 80022de:	60bb      	str	r3, [r7, #8]
    while (wait_loop_index != 0UL)
 80022e0:	68bb      	ldr	r3, [r7, #8]
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d1f9      	bne.n	80022da <HAL_ADC_Init+0x86>
  }

  /* Verification that ADC voltage regulator is correctly enabled, whether    */
  /* or not ADC is coming from state reset (if any potential problem of       */
  /* clocking, voltage regulator would not be enabled).                       */
  if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	4618      	mov	r0, r3
 80022ec:	f7ff ff3c 	bl	8002168 <LL_ADC_IsInternalRegulatorEnabled>
 80022f0:	4603      	mov	r3, r0
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d10d      	bne.n	8002312 <HAL_ADC_Init+0xbe>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80022fa:	f043 0210 	orr.w	r2, r3, #16
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Set ADC error code to ADC peripheral internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002306:	f043 0201 	orr.w	r2, r3, #1
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	661a      	str	r2, [r3, #96]	; 0x60

    tmp_hal_status = HAL_ERROR;
 800230e:	2301      	movs	r3, #1
 8002310:	77fb      	strb	r3, [r7, #31]

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed and if there is no conversion on going on regular    */
  /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
  /* called to update a parameter on the fly).                                */
  tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	4618      	mov	r0, r3
 8002318:	f7ff ff75 	bl	8002206 <LL_ADC_REG_IsConversionOngoing>
 800231c:	6178      	str	r0, [r7, #20]

  if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002322:	f003 0310 	and.w	r3, r3, #16
 8002326:	2b00      	cmp	r3, #0
 8002328:	f040 8148 	bne.w	80025bc <HAL_ADC_Init+0x368>
      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 800232c:	697b      	ldr	r3, [r7, #20]
 800232e:	2b00      	cmp	r3, #0
 8002330:	f040 8144 	bne.w	80025bc <HAL_ADC_Init+0x368>
     )
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002338:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 800233c:	f043 0202 	orr.w	r2, r3, #2
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	65da      	str	r2, [r3, #92]	; 0x5c
    /* Configuration of common ADC parameters                                 */

    /* Parameters update conditioned to ADC state:                            */
    /* Parameters that can be updated only when ADC is disabled:              */
    /*  - clock configuration                                                 */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	4618      	mov	r0, r3
 800234a:	f7ff ff35 	bl	80021b8 <LL_ADC_IsEnabled>
 800234e:	4603      	mov	r3, r0
 8002350:	2b00      	cmp	r3, #0
 8002352:	d141      	bne.n	80023d8 <HAL_ADC_Init+0x184>
    {
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	681b      	ldr	r3, [r3, #0]
 8002358:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800235c:	d004      	beq.n	8002368 <HAL_ADC_Init+0x114>
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	681b      	ldr	r3, [r3, #0]
 8002362:	4a7a      	ldr	r2, [pc, #488]	; (800254c <HAL_ADC_Init+0x2f8>)
 8002364:	4293      	cmp	r3, r2
 8002366:	d10f      	bne.n	8002388 <HAL_ADC_Init+0x134>
 8002368:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 800236c:	f7ff ff24 	bl	80021b8 <LL_ADC_IsEnabled>
 8002370:	4604      	mov	r4, r0
 8002372:	4876      	ldr	r0, [pc, #472]	; (800254c <HAL_ADC_Init+0x2f8>)
 8002374:	f7ff ff20 	bl	80021b8 <LL_ADC_IsEnabled>
 8002378:	4603      	mov	r3, r0
 800237a:	4323      	orrs	r3, r4
 800237c:	2b00      	cmp	r3, #0
 800237e:	bf0c      	ite	eq
 8002380:	2301      	moveq	r3, #1
 8002382:	2300      	movne	r3, #0
 8002384:	b2db      	uxtb	r3, r3
 8002386:	e012      	b.n	80023ae <HAL_ADC_Init+0x15a>
 8002388:	4871      	ldr	r0, [pc, #452]	; (8002550 <HAL_ADC_Init+0x2fc>)
 800238a:	f7ff ff15 	bl	80021b8 <LL_ADC_IsEnabled>
 800238e:	4604      	mov	r4, r0
 8002390:	4870      	ldr	r0, [pc, #448]	; (8002554 <HAL_ADC_Init+0x300>)
 8002392:	f7ff ff11 	bl	80021b8 <LL_ADC_IsEnabled>
 8002396:	4603      	mov	r3, r0
 8002398:	431c      	orrs	r4, r3
 800239a:	486f      	ldr	r0, [pc, #444]	; (8002558 <HAL_ADC_Init+0x304>)
 800239c:	f7ff ff0c 	bl	80021b8 <LL_ADC_IsEnabled>
 80023a0:	4603      	mov	r3, r0
 80023a2:	4323      	orrs	r3, r4
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	bf0c      	ite	eq
 80023a8:	2301      	moveq	r3, #1
 80023aa:	2300      	movne	r3, #0
 80023ac:	b2db      	uxtb	r3, r3
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	d012      	beq.n	80023d8 <HAL_ADC_Init+0x184>
        /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
        /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
        /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
        /*     (set into HAL_ADC_ConfigChannel() or                             */
        /*     HAL_ADCEx_InjectedConfigChannel() )                              */
        LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80023ba:	d004      	beq.n	80023c6 <HAL_ADC_Init+0x172>
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	4a62      	ldr	r2, [pc, #392]	; (800254c <HAL_ADC_Init+0x2f8>)
 80023c2:	4293      	cmp	r3, r2
 80023c4:	d101      	bne.n	80023ca <HAL_ADC_Init+0x176>
 80023c6:	4a65      	ldr	r2, [pc, #404]	; (800255c <HAL_ADC_Init+0x308>)
 80023c8:	e000      	b.n	80023cc <HAL_ADC_Init+0x178>
 80023ca:	4a65      	ldr	r2, [pc, #404]	; (8002560 <HAL_ADC_Init+0x30c>)
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	685b      	ldr	r3, [r3, #4]
 80023d0:	4619      	mov	r1, r3
 80023d2:	4610      	mov	r0, r2
 80023d4:	f7ff fd1c 	bl	8001e10 <LL_ADC_SetCommonClock>
    /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
    /*  - continuous conversion mode               Init.ContinuousConvMode    */
    /*  - overrun                                  Init.Overrun               */
    /*  - discontinuous mode                       Init.DiscontinuousConvMode */
    /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
    tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	7f5b      	ldrb	r3, [r3, #29]
 80023dc:	035a      	lsls	r2, r3, #13
                hadc->Init.Overrun                                                     |
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 80023e2:	431a      	orrs	r2, r3
                hadc->Init.DataAlign                                                   |
 80023e4:	687b      	ldr	r3, [r7, #4]
 80023e6:	68db      	ldr	r3, [r3, #12]
                hadc->Init.Overrun                                                     |
 80023e8:	431a      	orrs	r2, r3
                hadc->Init.Resolution                                                  |
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	689b      	ldr	r3, [r3, #8]
                hadc->Init.DataAlign                                                   |
 80023ee:	431a      	orrs	r2, r3
                ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80023f6:	041b      	lsls	r3, r3, #16
    tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 80023f8:	4313      	orrs	r3, r2
 80023fa:	61bb      	str	r3, [r7, #24]

    if (hadc->Init.DiscontinuousConvMode == ENABLE)
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8002402:	2b01      	cmp	r3, #1
 8002404:	d106      	bne.n	8002414 <HAL_ADC_Init+0x1c0>
    {
      tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800240a:	3b01      	subs	r3, #1
 800240c:	045b      	lsls	r3, r3, #17
 800240e:	69ba      	ldr	r2, [r7, #24]
 8002410:	4313      	orrs	r3, r2
 8002412:	61bb      	str	r3, [r7, #24]
    /* Enable external trigger if trigger selection is different of software  */
    /* start.                                                                 */
    /* Note: This configuration keeps the hardware feature of parameter       */
    /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
    /*       software start.                                                  */
    if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002414:	687b      	ldr	r3, [r7, #4]
 8002416:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002418:	2b00      	cmp	r3, #0
 800241a:	d009      	beq.n	8002430 <HAL_ADC_Init+0x1dc>
    {
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002420:	f403 7278 	and.w	r2, r3, #992	; 0x3e0
                  | hadc->Init.ExternalTrigConvEdge
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002428:	4313      	orrs	r3, r2
      tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 800242a:	69ba      	ldr	r2, [r7, #24]
 800242c:	4313      	orrs	r3, r2
 800242e:	61bb      	str	r3, [r7, #24]
                 );
    }

    /* Update Configuration Register CFGR */
    MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	68da      	ldr	r2, [r3, #12]
 8002436:	4b4b      	ldr	r3, [pc, #300]	; (8002564 <HAL_ADC_Init+0x310>)
 8002438:	4013      	ands	r3, r2
 800243a:	687a      	ldr	r2, [r7, #4]
 800243c:	6812      	ldr	r2, [r2, #0]
 800243e:	69b9      	ldr	r1, [r7, #24]
 8002440:	430b      	orrs	r3, r1
 8002442:	60d3      	str	r3, [r2, #12]

    /* Configuration of sampling mode */
    MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_BULB | ADC_CFGR2_SMPTRIG, hadc->Init.SamplingMode);
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	691b      	ldr	r3, [r3, #16]
 800244a:	f023 6140 	bic.w	r1, r3, #201326592	; 0xc000000
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	430a      	orrs	r2, r1
 8002458:	611a      	str	r2, [r3, #16]
    /* conversion on going on regular and injected groups:                    */
    /*  - Gain Compensation               Init.GainCompensation               */
    /*  - DMA continuous request          Init.DMAContinuousRequests          */
    /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
    /*  - Oversampling parameters         Init.Oversampling                   */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 800245a:	687b      	ldr	r3, [r7, #4]
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	4618      	mov	r0, r3
 8002460:	f7ff fed1 	bl	8002206 <LL_ADC_REG_IsConversionOngoing>
 8002464:	6138      	str	r0, [r7, #16]
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	681b      	ldr	r3, [r3, #0]
 800246a:	4618      	mov	r0, r3
 800246c:	f7ff fede 	bl	800222c <LL_ADC_INJ_IsConversionOngoing>
 8002470:	60f8      	str	r0, [r7, #12]
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8002472:	693b      	ldr	r3, [r7, #16]
 8002474:	2b00      	cmp	r3, #0
 8002476:	d17f      	bne.n	8002578 <HAL_ADC_Init+0x324>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	2b00      	cmp	r3, #0
 800247c:	d17c      	bne.n	8002578 <HAL_ADC_Init+0x324>
       )
    {
      tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
                 ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	7f1b      	ldrb	r3, [r3, #28]
      tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 8002482:	039a      	lsls	r2, r3, #14
                 ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 8002484:	687b      	ldr	r3, [r7, #4]
 8002486:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800248a:	005b      	lsls	r3, r3, #1
      tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 800248c:	4313      	orrs	r3, r2
 800248e:	61bb      	str	r3, [r7, #24]

      MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	681b      	ldr	r3, [r3, #0]
 8002494:	68db      	ldr	r3, [r3, #12]
 8002496:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800249a:	f023 0302 	bic.w	r3, r3, #2
 800249e:	687a      	ldr	r2, [r7, #4]
 80024a0:	6812      	ldr	r2, [r2, #0]
 80024a2:	69b9      	ldr	r1, [r7, #24]
 80024a4:	430b      	orrs	r3, r1
 80024a6:	60d3      	str	r3, [r2, #12]

      if (hadc->Init.GainCompensation != 0UL)
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	691b      	ldr	r3, [r3, #16]
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	d017      	beq.n	80024e0 <HAL_ADC_Init+0x28c>
      {
        SET_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	681b      	ldr	r3, [r3, #0]
 80024b4:	691a      	ldr	r2, [r3, #16]
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	681b      	ldr	r3, [r3, #0]
 80024ba:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80024be:	611a      	str	r2, [r3, #16]
        MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, hadc->Init.GainCompensation);
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80024c8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80024cc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80024d0:	687a      	ldr	r2, [r7, #4]
 80024d2:	6911      	ldr	r1, [r2, #16]
 80024d4:	687a      	ldr	r2, [r7, #4]
 80024d6:	6812      	ldr	r2, [r2, #0]
 80024d8:	430b      	orrs	r3, r1
 80024da:	f8c2 30c0 	str.w	r3, [r2, #192]	; 0xc0
 80024de:	e013      	b.n	8002508 <HAL_ADC_Init+0x2b4>
      }
      else
      {
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_GCOMP);
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	691a      	ldr	r2, [r3, #16]
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	681b      	ldr	r3, [r3, #0]
 80024ea:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80024ee:	611a      	str	r2, [r3, #16]
        MODIFY_REG(hadc->Instance->GCOMP, ADC_GCOMP_GCOMPCOEFF, 0UL);
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80024f8:	687a      	ldr	r2, [r7, #4]
 80024fa:	6812      	ldr	r2, [r2, #0]
 80024fc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8002500:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8002504:	f8c2 30c0 	str.w	r3, [r2, #192]	; 0xc0
      }

      if (hadc->Init.OversamplingMode == ENABLE)
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800250e:	2b01      	cmp	r3, #1
 8002510:	d12a      	bne.n	8002568 <HAL_ADC_Init+0x314>
        /* Configuration of Oversampler:                                      */
        /*  - Oversampling Ratio                                              */
        /*  - Right bit shift                                                 */
        /*  - Triggered mode                                                  */
        /*  - Oversampling mode (continued/resumed)                           */
        MODIFY_REG(hadc->Instance->CFGR2,
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	691b      	ldr	r3, [r3, #16]
 8002518:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800251c:	f023 0304 	bic.w	r3, r3, #4
 8002520:	687a      	ldr	r2, [r7, #4]
 8002522:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8002524:	687a      	ldr	r2, [r7, #4]
 8002526:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8002528:	4311      	orrs	r1, r2
 800252a:	687a      	ldr	r2, [r7, #4]
 800252c:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
 800252e:	4311      	orrs	r1, r2
 8002530:	687a      	ldr	r2, [r7, #4]
 8002532:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8002534:	430a      	orrs	r2, r1
 8002536:	431a      	orrs	r2, r3
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	f042 0201 	orr.w	r2, r2, #1
 8002540:	611a      	str	r2, [r3, #16]
 8002542:	e019      	b.n	8002578 <HAL_ADC_Init+0x324>
 8002544:	200001c4 	.word	0x200001c4
 8002548:	053e2d63 	.word	0x053e2d63
 800254c:	50000100 	.word	0x50000100
 8002550:	50000400 	.word	0x50000400
 8002554:	50000500 	.word	0x50000500
 8002558:	50000600 	.word	0x50000600
 800255c:	50000300 	.word	0x50000300
 8002560:	50000700 	.word	0x50000700
 8002564:	fff04007 	.word	0xfff04007
                  );
      }
      else
      {
        /* Disable ADC oversampling scope on ADC group regular */
        CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	691a      	ldr	r2, [r3, #16]
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	f022 0201 	bic.w	r2, r2, #1
 8002576:	611a      	str	r2, [r3, #16]
    /*   Note: Scan mode is not present by hardware on this device, but       */
    /*   emulated by software for alignment over all STM32 devices.           */
    /* - if scan mode is enabled, regular channels sequence length is set to  */
    /*   parameter "NbrOfConversion".                                         */

    if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	695b      	ldr	r3, [r3, #20]
 800257c:	2b01      	cmp	r3, #1
 800257e:	d10c      	bne.n	800259a <HAL_ADC_Init+0x346>
    {
      /* Set number of ranks in regular group sequencer */
      MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002586:	f023 010f 	bic.w	r1, r3, #15
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	6a1b      	ldr	r3, [r3, #32]
 800258e:	1e5a      	subs	r2, r3, #1
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	430a      	orrs	r2, r1
 8002596:	631a      	str	r2, [r3, #48]	; 0x30
 8002598:	e007      	b.n	80025aa <HAL_ADC_Init+0x356>
    }
    else
    {
      CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 800259a:	687b      	ldr	r3, [r7, #4]
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	681b      	ldr	r3, [r3, #0]
 80025a4:	f022 020f 	bic.w	r2, r2, #15
 80025a8:	631a      	str	r2, [r3, #48]	; 0x30
    }

    /* Initialize the ADC state */
    /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
    ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80025ae:	f023 0303 	bic.w	r3, r3, #3
 80025b2:	f043 0201 	orr.w	r2, r3, #1
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	65da      	str	r2, [r3, #92]	; 0x5c
 80025ba:	e007      	b.n	80025cc <HAL_ADC_Init+0x378>
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80025c0:	f043 0210 	orr.w	r2, r3, #16
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	65da      	str	r2, [r3, #92]	; 0x5c

    tmp_hal_status = HAL_ERROR;
 80025c8:	2301      	movs	r3, #1
 80025ca:	77fb      	strb	r3, [r7, #31]
  }

  /* Return function status */
  return tmp_hal_status;
 80025cc:	7ffb      	ldrb	r3, [r7, #31]
}
 80025ce:	4618      	mov	r0, r3
 80025d0:	3724      	adds	r7, #36	; 0x24
 80025d2:	46bd      	mov	sp, r7
 80025d4:	bd90      	pop	{r4, r7, pc}
 80025d6:	bf00      	nop

080025d8 <HAL_ADC_Start_DMA>:
  * @param pData Destination Buffer address.
  * @param Length Number of data to be transferred from ADC peripheral to memory
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 80025d8:	b580      	push	{r7, lr}
 80025da:	b086      	sub	sp, #24
 80025dc:	af00      	add	r7, sp, #0
 80025de:	60f8      	str	r0, [r7, #12]
 80025e0:	60b9      	str	r1, [r7, #8]
 80025e2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status;
#if defined(ADC_MULTIMODE_SUPPORT)
  uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 80025e4:	68fb      	ldr	r3, [r7, #12]
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80025ec:	d004      	beq.n	80025f8 <HAL_ADC_Start_DMA+0x20>
 80025ee:	68fb      	ldr	r3, [r7, #12]
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	4a5a      	ldr	r2, [pc, #360]	; (800275c <HAL_ADC_Start_DMA+0x184>)
 80025f4:	4293      	cmp	r3, r2
 80025f6:	d101      	bne.n	80025fc <HAL_ADC_Start_DMA+0x24>
 80025f8:	4b59      	ldr	r3, [pc, #356]	; (8002760 <HAL_ADC_Start_DMA+0x188>)
 80025fa:	e000      	b.n	80025fe <HAL_ADC_Start_DMA+0x26>
 80025fc:	4b59      	ldr	r3, [pc, #356]	; (8002764 <HAL_ADC_Start_DMA+0x18c>)
 80025fe:	4618      	mov	r0, r3
 8002600:	f7ff fd6a 	bl	80020d8 <LL_ADC_GetMultimode>
 8002604:	6138      	str	r0, [r7, #16]

  /* Check the parameters */
  assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));

  /* Perform ADC enable and conversion start if no conversion is on going */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 8002606:	68fb      	ldr	r3, [r7, #12]
 8002608:	681b      	ldr	r3, [r3, #0]
 800260a:	4618      	mov	r0, r3
 800260c:	f7ff fdfb 	bl	8002206 <LL_ADC_REG_IsConversionOngoing>
 8002610:	4603      	mov	r3, r0
 8002612:	2b00      	cmp	r3, #0
 8002614:	f040 809b 	bne.w	800274e <HAL_ADC_Start_DMA+0x176>
  {
    /* Process locked */
    __HAL_LOCK(hadc);
 8002618:	68fb      	ldr	r3, [r7, #12]
 800261a:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800261e:	2b01      	cmp	r3, #1
 8002620:	d101      	bne.n	8002626 <HAL_ADC_Start_DMA+0x4e>
 8002622:	2302      	movs	r3, #2
 8002624:	e096      	b.n	8002754 <HAL_ADC_Start_DMA+0x17c>
 8002626:	68fb      	ldr	r3, [r7, #12]
 8002628:	2201      	movs	r2, #1
 800262a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58

#if defined(ADC_MULTIMODE_SUPPORT)
    /* Ensure that multimode regular conversions are not enabled.   */
    /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
    if ((ADC_IS_INDEPENDENT(hadc) != RESET)
 800262e:	68fb      	ldr	r3, [r7, #12]
 8002630:	681b      	ldr	r3, [r3, #0]
 8002632:	4a4d      	ldr	r2, [pc, #308]	; (8002768 <HAL_ADC_Start_DMA+0x190>)
 8002634:	4293      	cmp	r3, r2
 8002636:	d008      	beq.n	800264a <HAL_ADC_Start_DMA+0x72>
        || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 8002638:	693b      	ldr	r3, [r7, #16]
 800263a:	2b00      	cmp	r3, #0
 800263c:	d005      	beq.n	800264a <HAL_ADC_Start_DMA+0x72>
        || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 800263e:	693b      	ldr	r3, [r7, #16]
 8002640:	2b05      	cmp	r3, #5
 8002642:	d002      	beq.n	800264a <HAL_ADC_Start_DMA+0x72>
        || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
 8002644:	693b      	ldr	r3, [r7, #16]
 8002646:	2b09      	cmp	r3, #9
 8002648:	d17a      	bne.n	8002740 <HAL_ADC_Start_DMA+0x168>
       )
#endif /* ADC_MULTIMODE_SUPPORT */
    {
      /* Enable the ADC peripheral */
      tmp_hal_status = ADC_Enable(hadc);
 800264a:	68f8      	ldr	r0, [r7, #12]
 800264c:	f000 fcec 	bl	8003028 <ADC_Enable>
 8002650:	4603      	mov	r3, r0
 8002652:	75fb      	strb	r3, [r7, #23]

      /* Start conversion if ADC is effectively enabled */
      if (tmp_hal_status == HAL_OK)
 8002654:	7dfb      	ldrb	r3, [r7, #23]
 8002656:	2b00      	cmp	r3, #0
 8002658:	d16d      	bne.n	8002736 <HAL_ADC_Start_DMA+0x15e>
      {
        /* Set ADC state                                                        */
        /* - Clear state bitfield related to regular group conversion results   */
        /* - Set state bitfield related to regular operation                    */
        ADC_STATE_CLR_SET(hadc->State,
 800265a:	68fb      	ldr	r3, [r7, #12]
 800265c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800265e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8002662:	f023 0301 	bic.w	r3, r3, #1
 8002666:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800266a:	68fb      	ldr	r3, [r7, #12]
 800266c:	65da      	str	r2, [r3, #92]	; 0x5c

#if defined(ADC_MULTIMODE_SUPPORT)
        /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
          - if ADC instance is master or if multimode feature is not available
          - if multimode setting is disabled (ADC instance slave in independent mode) */
        if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 800266e:	68fb      	ldr	r3, [r7, #12]
 8002670:	681b      	ldr	r3, [r3, #0]
 8002672:	4a3a      	ldr	r2, [pc, #232]	; (800275c <HAL_ADC_Start_DMA+0x184>)
 8002674:	4293      	cmp	r3, r2
 8002676:	d009      	beq.n	800268c <HAL_ADC_Start_DMA+0xb4>
 8002678:	68fb      	ldr	r3, [r7, #12]
 800267a:	681b      	ldr	r3, [r3, #0]
 800267c:	4a3b      	ldr	r2, [pc, #236]	; (800276c <HAL_ADC_Start_DMA+0x194>)
 800267e:	4293      	cmp	r3, r2
 8002680:	d002      	beq.n	8002688 <HAL_ADC_Start_DMA+0xb0>
 8002682:	68fb      	ldr	r3, [r7, #12]
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	e003      	b.n	8002690 <HAL_ADC_Start_DMA+0xb8>
 8002688:	4b39      	ldr	r3, [pc, #228]	; (8002770 <HAL_ADC_Start_DMA+0x198>)
 800268a:	e001      	b.n	8002690 <HAL_ADC_Start_DMA+0xb8>
 800268c:	f04f 43a0 	mov.w	r3, #1342177280	; 0x50000000
 8002690:	68fa      	ldr	r2, [r7, #12]
 8002692:	6812      	ldr	r2, [r2, #0]
 8002694:	4293      	cmp	r3, r2
 8002696:	d002      	beq.n	800269e <HAL_ADC_Start_DMA+0xc6>
            || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 8002698:	693b      	ldr	r3, [r7, #16]
 800269a:	2b00      	cmp	r3, #0
 800269c:	d105      	bne.n	80026aa <HAL_ADC_Start_DMA+0xd2>
           )
        {
          CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80026a2:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 80026a6:	68fb      	ldr	r3, [r7, #12]
 80026a8:	65da      	str	r2, [r3, #92]	; 0x5c
        }
#endif

        /* Check if a conversion is on going on ADC group injected */
        if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
 80026aa:	68fb      	ldr	r3, [r7, #12]
 80026ac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80026ae:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d006      	beq.n	80026c4 <HAL_ADC_Start_DMA+0xec>
        {
          /* Reset ADC error code fields related to regular conversions only */
          CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 80026b6:	68fb      	ldr	r3, [r7, #12]
 80026b8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80026ba:	f023 0206 	bic.w	r2, r3, #6
 80026be:	68fb      	ldr	r3, [r7, #12]
 80026c0:	661a      	str	r2, [r3, #96]	; 0x60
 80026c2:	e002      	b.n	80026ca <HAL_ADC_Start_DMA+0xf2>
        }
        else
        {
          /* Reset all ADC error code fields */
          ADC_CLEAR_ERRORCODE(hadc);
 80026c4:	68fb      	ldr	r3, [r7, #12]
 80026c6:	2200      	movs	r2, #0
 80026c8:	661a      	str	r2, [r3, #96]	; 0x60
        }

        /* Set the DMA transfer complete callback */
        hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 80026ca:	68fb      	ldr	r3, [r7, #12]
 80026cc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026ce:	4a29      	ldr	r2, [pc, #164]	; (8002774 <HAL_ADC_Start_DMA+0x19c>)
 80026d0:	62da      	str	r2, [r3, #44]	; 0x2c

        /* Set the DMA half transfer complete callback */
        hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 80026d2:	68fb      	ldr	r3, [r7, #12]
 80026d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026d6:	4a28      	ldr	r2, [pc, #160]	; (8002778 <HAL_ADC_Start_DMA+0x1a0>)
 80026d8:	631a      	str	r2, [r3, #48]	; 0x30

        /* Set the DMA error callback */
        hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 80026da:	68fb      	ldr	r3, [r7, #12]
 80026dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80026de:	4a27      	ldr	r2, [pc, #156]	; (800277c <HAL_ADC_Start_DMA+0x1a4>)
 80026e0:	635a      	str	r2, [r3, #52]	; 0x34
        /* ADC start (in case of SW start):                                   */

        /* Clear regular group conversion flag and overrun flag               */
        /* (To ensure of no unknown state from potential previous ADC         */
        /* operations)                                                        */
        __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 80026e2:	68fb      	ldr	r3, [r7, #12]
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	221c      	movs	r2, #28
 80026e8:	601a      	str	r2, [r3, #0]

        /* Process unlocked */
        /* Unlock before starting ADC conversions: in case of potential         */
        /* interruption, to let the process to ADC IRQ Handler.                 */
        __HAL_UNLOCK(hadc);
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	2200      	movs	r2, #0
 80026ee:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58

        /* With DMA, overrun event is always considered as an error even if
           hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
           ADC_IT_OVR is enabled. */
        __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 80026f2:	68fb      	ldr	r3, [r7, #12]
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	685a      	ldr	r2, [r3, #4]
 80026f8:	68fb      	ldr	r3, [r7, #12]
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	f042 0210 	orr.w	r2, r2, #16
 8002700:	605a      	str	r2, [r3, #4]

        /* Enable ADC DMA mode */
        SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 8002702:	68fb      	ldr	r3, [r7, #12]
 8002704:	681b      	ldr	r3, [r3, #0]
 8002706:	68da      	ldr	r2, [r3, #12]
 8002708:	68fb      	ldr	r3, [r7, #12]
 800270a:	681b      	ldr	r3, [r3, #0]
 800270c:	f042 0201 	orr.w	r2, r2, #1
 8002710:	60da      	str	r2, [r3, #12]

        /* Start the DMA channel */
        tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002712:	68fb      	ldr	r3, [r7, #12]
 8002714:	6d58      	ldr	r0, [r3, #84]	; 0x54
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	3340      	adds	r3, #64	; 0x40
 800271c:	4619      	mov	r1, r3
 800271e:	68ba      	ldr	r2, [r7, #8]
 8002720:	687b      	ldr	r3, [r7, #4]
 8002722:	f001 f85d 	bl	80037e0 <HAL_DMA_Start_IT>
 8002726:	4603      	mov	r3, r0
 8002728:	75fb      	strb	r3, [r7, #23]
        /* Enable conversion of regular group.                                  */
        /* If software start has been selected, conversion starts immediately.  */
        /* If external trigger has been selected, conversion will start at next */
        /* trigger event.                                                       */
        /* Start ADC group regular conversion */
        LL_ADC_REG_StartConversion(hadc->Instance);
 800272a:	68fb      	ldr	r3, [r7, #12]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	4618      	mov	r0, r3
 8002730:	f7ff fd55 	bl	80021de <LL_ADC_REG_StartConversion>
      if (tmp_hal_status == HAL_OK)
 8002734:	e00d      	b.n	8002752 <HAL_ADC_Start_DMA+0x17a>
      }
      else
      {
        /* Process unlocked */
        __HAL_UNLOCK(hadc);
 8002736:	68fb      	ldr	r3, [r7, #12]
 8002738:	2200      	movs	r2, #0
 800273a:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
      if (tmp_hal_status == HAL_OK)
 800273e:	e008      	b.n	8002752 <HAL_ADC_Start_DMA+0x17a>

    }
#if defined(ADC_MULTIMODE_SUPPORT)
    else
    {
      tmp_hal_status = HAL_ERROR;
 8002740:	2301      	movs	r3, #1
 8002742:	75fb      	strb	r3, [r7, #23]
      /* Process unlocked */
      __HAL_UNLOCK(hadc);
 8002744:	68fb      	ldr	r3, [r7, #12]
 8002746:	2200      	movs	r2, #0
 8002748:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 800274c:	e001      	b.n	8002752 <HAL_ADC_Start_DMA+0x17a>
    }
#endif
  }
  else
  {
    tmp_hal_status = HAL_BUSY;
 800274e:	2302      	movs	r3, #2
 8002750:	75fb      	strb	r3, [r7, #23]
  }

  /* Return function status */
  return tmp_hal_status;
 8002752:	7dfb      	ldrb	r3, [r7, #23]
}
 8002754:	4618      	mov	r0, r3
 8002756:	3718      	adds	r7, #24
 8002758:	46bd      	mov	sp, r7
 800275a:	bd80      	pop	{r7, pc}
 800275c:	50000100 	.word	0x50000100
 8002760:	50000300 	.word	0x50000300
 8002764:	50000700 	.word	0x50000700
 8002768:	50000600 	.word	0x50000600
 800276c:	50000500 	.word	0x50000500
 8002770:	50000400 	.word	0x50000400
 8002774:	080030ed 	.word	0x080030ed
 8002778:	080031c5 	.word	0x080031c5
 800277c:	080031e1 	.word	0x080031e1

08002780 <HAL_ADC_ConvHalfCpltCallback>:
  * @brief  Conversion DMA half-transfer callback in non-blocking mode.
  * @param hadc ADC handle
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002780:	b480      	push	{r7}
 8002782:	b083      	sub	sp, #12
 8002784:	af00      	add	r7, sp, #0
 8002786:	6078      	str	r0, [r7, #4]
  UNUSED(hadc);

  /* NOTE : This function should not be modified. When the callback is needed,
            function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
  */
}
 8002788:	bf00      	nop
 800278a:	370c      	adds	r7, #12
 800278c:	46bd      	mov	sp, r7
 800278e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002792:	4770      	bx	lr

08002794 <HAL_ADC_ErrorCallback>:
  *           (this function is also clearing overrun flag)
  * @param hadc ADC handle
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002794:	b480      	push	{r7}
 8002796:	b083      	sub	sp, #12
 8002798:	af00      	add	r7, sp, #0
 800279a:	6078      	str	r0, [r7, #4]
  UNUSED(hadc);

  /* NOTE : This function should not be modified. When the callback is needed,
            function HAL_ADC_ErrorCallback must be implemented in the user file.
  */
}
 800279c:	bf00      	nop
 800279e:	370c      	adds	r7, #12
 80027a0:	46bd      	mov	sp, r7
 80027a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a6:	4770      	bx	lr

080027a8 <HAL_ADC_ConfigChannel>:
  * @param hadc ADC handle
  * @param sConfig Structure of ADC channel assigned to ADC group regular.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 80027a8:	b580      	push	{r7, lr}
 80027aa:	b0b6      	sub	sp, #216	; 0xd8
 80027ac:	af00      	add	r7, sp, #0
 80027ae:	6078      	str	r0, [r7, #4]
 80027b0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 80027b2:	2300      	movs	r3, #0
 80027b4:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
  uint32_t tmpOffsetShifted;
  uint32_t tmp_config_internal_channel;
  __IO uint32_t wait_loop_index = 0UL;
 80027b8:	2300      	movs	r3, #0
 80027ba:	60fb      	str	r3, [r7, #12]
  {
    assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 80027c2:	2b01      	cmp	r3, #1
 80027c4:	d102      	bne.n	80027cc <HAL_ADC_ConfigChannel+0x24>
 80027c6:	2302      	movs	r3, #2
 80027c8:	f000 bc13 	b.w	8002ff2 <HAL_ADC_ConfigChannel+0x84a>
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	2201      	movs	r2, #1
 80027d0:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Channel number                                                        */
  /*  - Channel rank                                                          */
  if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	4618      	mov	r0, r3
 80027da:	f7ff fd14 	bl	8002206 <LL_ADC_REG_IsConversionOngoing>
 80027de:	4603      	mov	r3, r0
 80027e0:	2b00      	cmp	r3, #0
 80027e2:	f040 83f3 	bne.w	8002fcc <HAL_ADC_ConfigChannel+0x824>
  {
    /* Set ADC group regular sequence: channel on the selected scan sequence rank */
    LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
 80027e6:	687b      	ldr	r3, [r7, #4]
 80027e8:	6818      	ldr	r0, [r3, #0]
 80027ea:	683b      	ldr	r3, [r7, #0]
 80027ec:	6859      	ldr	r1, [r3, #4]
 80027ee:	683b      	ldr	r3, [r7, #0]
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	461a      	mov	r2, r3
 80027f4:	f7ff fbf1 	bl	8001fda <LL_ADC_REG_SetSequencerRanks>
    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated when ADC is disabled or enabled without   */
    /* conversion on going on regular group:                                    */
    /*  - Channel sampling time                                                 */
    /*  - Channel offset                                                        */
    tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	681b      	ldr	r3, [r3, #0]
 80027fc:	4618      	mov	r0, r3
 80027fe:	f7ff fd02 	bl	8002206 <LL_ADC_REG_IsConversionOngoing>
 8002802:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
    tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	681b      	ldr	r3, [r3, #0]
 800280a:	4618      	mov	r0, r3
 800280c:	f7ff fd0e 	bl	800222c <LL_ADC_INJ_IsConversionOngoing>
 8002810:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc
    if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 8002814:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 8002818:	2b00      	cmp	r3, #0
 800281a:	f040 81d9 	bne.w	8002bd0 <HAL_ADC_ConfigChannel+0x428>
        && (tmp_adc_is_conversion_on_going_injected == 0UL)
 800281e:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8002822:	2b00      	cmp	r3, #0
 8002824:	f040 81d4 	bne.w	8002bd0 <HAL_ADC_ConfigChannel+0x428>
       )
    {
      /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
      if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
 8002828:	683b      	ldr	r3, [r7, #0]
 800282a:	689b      	ldr	r3, [r3, #8]
 800282c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8002830:	d10f      	bne.n	8002852 <HAL_ADC_ConfigChannel+0xaa>
      {
        /* Set sampling time of the selected ADC channel */
        LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES_5);
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	6818      	ldr	r0, [r3, #0]
 8002836:	683b      	ldr	r3, [r7, #0]
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	2200      	movs	r2, #0
 800283c:	4619      	mov	r1, r3
 800283e:	f7ff fbf8 	bl	8002032 <LL_ADC_SetChannelSamplingTime>

        /* Set ADC sampling time common configuration */
        LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5);
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 800284a:	4618      	mov	r0, r3
 800284c:	f7ff fb9f 	bl	8001f8e <LL_ADC_SetSamplingTimeCommonConfig>
 8002850:	e00e      	b.n	8002870 <HAL_ADC_ConfigChannel+0xc8>
      }
      else
      {
        /* Set sampling time of the selected ADC channel */
        LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	6818      	ldr	r0, [r3, #0]
 8002856:	683b      	ldr	r3, [r7, #0]
 8002858:	6819      	ldr	r1, [r3, #0]
 800285a:	683b      	ldr	r3, [r7, #0]
 800285c:	689b      	ldr	r3, [r3, #8]
 800285e:	461a      	mov	r2, r3
 8002860:	f7ff fbe7 	bl	8002032 <LL_ADC_SetChannelSamplingTime>

        /* Set ADC sampling time common configuration */
        LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
 8002864:	687b      	ldr	r3, [r7, #4]
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	2100      	movs	r1, #0
 800286a:	4618      	mov	r0, r3
 800286c:	f7ff fb8f 	bl	8001f8e <LL_ADC_SetSamplingTimeCommonConfig>

      /* Configure the offset: offset enable/disable, channel, offset value */

      /* Shift the offset with respect to the selected ADC resolution. */
      /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
      tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
 8002870:	683b      	ldr	r3, [r7, #0]
 8002872:	695a      	ldr	r2, [r3, #20]
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	68db      	ldr	r3, [r3, #12]
 800287a:	08db      	lsrs	r3, r3, #3
 800287c:	f003 0303 	and.w	r3, r3, #3
 8002880:	005b      	lsls	r3, r3, #1
 8002882:	fa02 f303 	lsl.w	r3, r2, r3
 8002886:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8

      if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
 800288a:	683b      	ldr	r3, [r7, #0]
 800288c:	691b      	ldr	r3, [r3, #16]
 800288e:	2b04      	cmp	r3, #4
 8002890:	d022      	beq.n	80028d8 <HAL_ADC_ConfigChannel+0x130>
      {
        /* Set ADC selected offset number */
        LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted);
 8002892:	687b      	ldr	r3, [r7, #4]
 8002894:	6818      	ldr	r0, [r3, #0]
 8002896:	683b      	ldr	r3, [r7, #0]
 8002898:	6919      	ldr	r1, [r3, #16]
 800289a:	683b      	ldr	r3, [r7, #0]
 800289c:	681a      	ldr	r2, [r3, #0]
 800289e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80028a2:	f7ff fae9 	bl	8001e78 <LL_ADC_SetOffset>

        assert_param(IS_ADC_OFFSET_SIGN(sConfig->OffsetSign));
        assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
        /* Set ADC selected offset sign & saturation */
        LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	6818      	ldr	r0, [r3, #0]
 80028aa:	683b      	ldr	r3, [r7, #0]
 80028ac:	6919      	ldr	r1, [r3, #16]
 80028ae:	683b      	ldr	r3, [r7, #0]
 80028b0:	699b      	ldr	r3, [r3, #24]
 80028b2:	461a      	mov	r2, r3
 80028b4:	f7ff fb35 	bl	8001f22 <LL_ADC_SetOffsetSign>
        LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturation == ENABLE) ? LL_ADC_OFFSET_SATURATION_ENABLE : LL_ADC_OFFSET_SATURATION_DISABLE);
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	6818      	ldr	r0, [r3, #0]
 80028bc:	683b      	ldr	r3, [r7, #0]
 80028be:	6919      	ldr	r1, [r3, #16]
 80028c0:	683b      	ldr	r3, [r7, #0]
 80028c2:	7f1b      	ldrb	r3, [r3, #28]
 80028c4:	2b01      	cmp	r3, #1
 80028c6:	d102      	bne.n	80028ce <HAL_ADC_ConfigChannel+0x126>
 80028c8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80028cc:	e000      	b.n	80028d0 <HAL_ADC_ConfigChannel+0x128>
 80028ce:	2300      	movs	r3, #0
 80028d0:	461a      	mov	r2, r3
 80028d2:	f7ff fb41 	bl	8001f58 <LL_ADC_SetOffsetSaturation>
 80028d6:	e17b      	b.n	8002bd0 <HAL_ADC_ConfigChannel+0x428>
      }
      else
      {
        /* Scan each offset register to check if the selected channel is targeted. */
        /* If this is the case, the corresponding offset number is disabled.       */
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	2100      	movs	r1, #0
 80028de:	4618      	mov	r0, r3
 80028e0:	f7ff faee 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 80028e4:	4603      	mov	r3, r0
 80028e6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d10a      	bne.n	8002904 <HAL_ADC_ConfigChannel+0x15c>
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	2100      	movs	r1, #0
 80028f4:	4618      	mov	r0, r3
 80028f6:	f7ff fae3 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 80028fa:	4603      	mov	r3, r0
 80028fc:	0e9b      	lsrs	r3, r3, #26
 80028fe:	f003 021f 	and.w	r2, r3, #31
 8002902:	e01e      	b.n	8002942 <HAL_ADC_ConfigChannel+0x19a>
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	2100      	movs	r1, #0
 800290a:	4618      	mov	r0, r3
 800290c:	f7ff fad8 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 8002910:	4603      	mov	r3, r0
 8002912:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002916:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800291a:	fa93 f3a3 	rbit	r3, r3
 800291e:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 8002922:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8002926:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 800292a:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800292e:	2b00      	cmp	r3, #0
 8002930:	d101      	bne.n	8002936 <HAL_ADC_ConfigChannel+0x18e>
  {
    return 32U;
 8002932:	2320      	movs	r3, #32
 8002934:	e004      	b.n	8002940 <HAL_ADC_ConfigChannel+0x198>
  }
  return __builtin_clz(value);
 8002936:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800293a:	fab3 f383 	clz	r3, r3
 800293e:	b2db      	uxtb	r3, r3
 8002940:	461a      	mov	r2, r3
            == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002942:	683b      	ldr	r3, [r7, #0]
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800294a:	2b00      	cmp	r3, #0
 800294c:	d105      	bne.n	800295a <HAL_ADC_ConfigChannel+0x1b2>
 800294e:	683b      	ldr	r3, [r7, #0]
 8002950:	681b      	ldr	r3, [r3, #0]
 8002952:	0e9b      	lsrs	r3, r3, #26
 8002954:	f003 031f 	and.w	r3, r3, #31
 8002958:	e018      	b.n	800298c <HAL_ADC_ConfigChannel+0x1e4>
 800295a:	683b      	ldr	r3, [r7, #0]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002962:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8002966:	fa93 f3a3 	rbit	r3, r3
 800296a:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  return result;
 800296e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002972:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  if (value == 0U)
 8002976:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800297a:	2b00      	cmp	r3, #0
 800297c:	d101      	bne.n	8002982 <HAL_ADC_ConfigChannel+0x1da>
    return 32U;
 800297e:	2320      	movs	r3, #32
 8002980:	e004      	b.n	800298c <HAL_ADC_ConfigChannel+0x1e4>
  return __builtin_clz(value);
 8002982:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8002986:	fab3 f383 	clz	r3, r3
 800298a:	b2db      	uxtb	r3, r3
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
 800298c:	429a      	cmp	r2, r3
 800298e:	d106      	bne.n	800299e <HAL_ADC_ConfigChannel+0x1f6>
        {
          LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
 8002990:	687b      	ldr	r3, [r7, #4]
 8002992:	681b      	ldr	r3, [r3, #0]
 8002994:	2200      	movs	r2, #0
 8002996:	2100      	movs	r1, #0
 8002998:	4618      	mov	r0, r3
 800299a:	f7ff faa7 	bl	8001eec <LL_ADC_SetOffsetState>
        }
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
 800299e:	687b      	ldr	r3, [r7, #4]
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	2101      	movs	r1, #1
 80029a4:	4618      	mov	r0, r3
 80029a6:	f7ff fa8b 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 80029aa:	4603      	mov	r3, r0
 80029ac:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80029b0:	2b00      	cmp	r3, #0
 80029b2:	d10a      	bne.n	80029ca <HAL_ADC_ConfigChannel+0x222>
 80029b4:	687b      	ldr	r3, [r7, #4]
 80029b6:	681b      	ldr	r3, [r3, #0]
 80029b8:	2101      	movs	r1, #1
 80029ba:	4618      	mov	r0, r3
 80029bc:	f7ff fa80 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 80029c0:	4603      	mov	r3, r0
 80029c2:	0e9b      	lsrs	r3, r3, #26
 80029c4:	f003 021f 	and.w	r2, r3, #31
 80029c8:	e01e      	b.n	8002a08 <HAL_ADC_ConfigChannel+0x260>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	2101      	movs	r1, #1
 80029d0:	4618      	mov	r0, r3
 80029d2:	f7ff fa75 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 80029d6:	4603      	mov	r3, r0
 80029d8:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80029dc:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80029e0:	fa93 f3a3 	rbit	r3, r3
 80029e4:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  return result;
 80029e8:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80029ec:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
  if (value == 0U)
 80029f0:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d101      	bne.n	80029fc <HAL_ADC_ConfigChannel+0x254>
    return 32U;
 80029f8:	2320      	movs	r3, #32
 80029fa:	e004      	b.n	8002a06 <HAL_ADC_ConfigChannel+0x25e>
  return __builtin_clz(value);
 80029fc:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8002a00:	fab3 f383 	clz	r3, r3
 8002a04:	b2db      	uxtb	r3, r3
 8002a06:	461a      	mov	r2, r3
            == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002a10:	2b00      	cmp	r3, #0
 8002a12:	d105      	bne.n	8002a20 <HAL_ADC_ConfigChannel+0x278>
 8002a14:	683b      	ldr	r3, [r7, #0]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	0e9b      	lsrs	r3, r3, #26
 8002a1a:	f003 031f 	and.w	r3, r3, #31
 8002a1e:	e018      	b.n	8002a52 <HAL_ADC_ConfigChannel+0x2aa>
 8002a20:	683b      	ldr	r3, [r7, #0]
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002a28:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8002a2c:	fa93 f3a3 	rbit	r3, r3
 8002a30:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  return result;
 8002a34:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002a38:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  if (value == 0U)
 8002a3c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8002a40:	2b00      	cmp	r3, #0
 8002a42:	d101      	bne.n	8002a48 <HAL_ADC_ConfigChannel+0x2a0>
    return 32U;
 8002a44:	2320      	movs	r3, #32
 8002a46:	e004      	b.n	8002a52 <HAL_ADC_ConfigChannel+0x2aa>
  return __builtin_clz(value);
 8002a48:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8002a4c:	fab3 f383 	clz	r3, r3
 8002a50:	b2db      	uxtb	r3, r3
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
 8002a52:	429a      	cmp	r2, r3
 8002a54:	d106      	bne.n	8002a64 <HAL_ADC_ConfigChannel+0x2bc>
        {
          LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
 8002a56:	687b      	ldr	r3, [r7, #4]
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	2200      	movs	r2, #0
 8002a5c:	2101      	movs	r1, #1
 8002a5e:	4618      	mov	r0, r3
 8002a60:	f7ff fa44 	bl	8001eec <LL_ADC_SetOffsetState>
        }
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	681b      	ldr	r3, [r3, #0]
 8002a68:	2102      	movs	r1, #2
 8002a6a:	4618      	mov	r0, r3
 8002a6c:	f7ff fa28 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 8002a70:	4603      	mov	r3, r0
 8002a72:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d10a      	bne.n	8002a90 <HAL_ADC_ConfigChannel+0x2e8>
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	681b      	ldr	r3, [r3, #0]
 8002a7e:	2102      	movs	r1, #2
 8002a80:	4618      	mov	r0, r3
 8002a82:	f7ff fa1d 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 8002a86:	4603      	mov	r3, r0
 8002a88:	0e9b      	lsrs	r3, r3, #26
 8002a8a:	f003 021f 	and.w	r2, r3, #31
 8002a8e:	e01e      	b.n	8002ace <HAL_ADC_ConfigChannel+0x326>
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	2102      	movs	r1, #2
 8002a96:	4618      	mov	r0, r3
 8002a98:	f7ff fa12 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 8002a9c:	4603      	mov	r3, r0
 8002a9e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002aa2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8002aa6:	fa93 f3a3 	rbit	r3, r3
 8002aaa:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  return result;
 8002aae:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8002ab2:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  if (value == 0U)
 8002ab6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002aba:	2b00      	cmp	r3, #0
 8002abc:	d101      	bne.n	8002ac2 <HAL_ADC_ConfigChannel+0x31a>
    return 32U;
 8002abe:	2320      	movs	r3, #32
 8002ac0:	e004      	b.n	8002acc <HAL_ADC_ConfigChannel+0x324>
  return __builtin_clz(value);
 8002ac2:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002ac6:	fab3 f383 	clz	r3, r3
 8002aca:	b2db      	uxtb	r3, r3
 8002acc:	461a      	mov	r2, r3
            == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002ace:	683b      	ldr	r3, [r7, #0]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d105      	bne.n	8002ae6 <HAL_ADC_ConfigChannel+0x33e>
 8002ada:	683b      	ldr	r3, [r7, #0]
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	0e9b      	lsrs	r3, r3, #26
 8002ae0:	f003 031f 	and.w	r3, r3, #31
 8002ae4:	e016      	b.n	8002b14 <HAL_ADC_ConfigChannel+0x36c>
 8002ae6:	683b      	ldr	r3, [r7, #0]
 8002ae8:	681b      	ldr	r3, [r3, #0]
 8002aea:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002aee:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002af2:	fa93 f3a3 	rbit	r3, r3
 8002af6:	67fb      	str	r3, [r7, #124]	; 0x7c
  return result;
 8002af8:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002afa:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  if (value == 0U)
 8002afe:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8002b02:	2b00      	cmp	r3, #0
 8002b04:	d101      	bne.n	8002b0a <HAL_ADC_ConfigChannel+0x362>
    return 32U;
 8002b06:	2320      	movs	r3, #32
 8002b08:	e004      	b.n	8002b14 <HAL_ADC_ConfigChannel+0x36c>
  return __builtin_clz(value);
 8002b0a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8002b0e:	fab3 f383 	clz	r3, r3
 8002b12:	b2db      	uxtb	r3, r3
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
 8002b14:	429a      	cmp	r2, r3
 8002b16:	d106      	bne.n	8002b26 <HAL_ADC_ConfigChannel+0x37e>
        {
          LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	2200      	movs	r2, #0
 8002b1e:	2102      	movs	r1, #2
 8002b20:	4618      	mov	r0, r3
 8002b22:	f7ff f9e3 	bl	8001eec <LL_ADC_SetOffsetState>
        }
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	2103      	movs	r1, #3
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	f7ff f9c7 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 8002b32:	4603      	mov	r3, r0
 8002b34:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002b38:	2b00      	cmp	r3, #0
 8002b3a:	d10a      	bne.n	8002b52 <HAL_ADC_ConfigChannel+0x3aa>
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	2103      	movs	r1, #3
 8002b42:	4618      	mov	r0, r3
 8002b44:	f7ff f9bc 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 8002b48:	4603      	mov	r3, r0
 8002b4a:	0e9b      	lsrs	r3, r3, #26
 8002b4c:	f003 021f 	and.w	r2, r3, #31
 8002b50:	e017      	b.n	8002b82 <HAL_ADC_ConfigChannel+0x3da>
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	2103      	movs	r1, #3
 8002b58:	4618      	mov	r0, r3
 8002b5a:	f7ff f9b1 	bl	8001ec0 <LL_ADC_GetOffsetChannel>
 8002b5e:	4603      	mov	r3, r0
 8002b60:	677b      	str	r3, [r7, #116]	; 0x74
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002b62:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002b64:	fa93 f3a3 	rbit	r3, r3
 8002b68:	673b      	str	r3, [r7, #112]	; 0x70
  return result;
 8002b6a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002b6c:	67bb      	str	r3, [r7, #120]	; 0x78
  if (value == 0U)
 8002b6e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	d101      	bne.n	8002b78 <HAL_ADC_ConfigChannel+0x3d0>
    return 32U;
 8002b74:	2320      	movs	r3, #32
 8002b76:	e003      	b.n	8002b80 <HAL_ADC_ConfigChannel+0x3d8>
  return __builtin_clz(value);
 8002b78:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002b7a:	fab3 f383 	clz	r3, r3
 8002b7e:	b2db      	uxtb	r3, r3
 8002b80:	461a      	mov	r2, r3
            == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel))
 8002b82:	683b      	ldr	r3, [r7, #0]
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d105      	bne.n	8002b9a <HAL_ADC_ConfigChannel+0x3f2>
 8002b8e:	683b      	ldr	r3, [r7, #0]
 8002b90:	681b      	ldr	r3, [r3, #0]
 8002b92:	0e9b      	lsrs	r3, r3, #26
 8002b94:	f003 031f 	and.w	r3, r3, #31
 8002b98:	e011      	b.n	8002bbe <HAL_ADC_ConfigChannel+0x416>
 8002b9a:	683b      	ldr	r3, [r7, #0]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	66bb      	str	r3, [r7, #104]	; 0x68
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002ba0:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002ba2:	fa93 f3a3 	rbit	r3, r3
 8002ba6:	667b      	str	r3, [r7, #100]	; 0x64
  return result;
 8002ba8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002baa:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (value == 0U)
 8002bac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002bae:	2b00      	cmp	r3, #0
 8002bb0:	d101      	bne.n	8002bb6 <HAL_ADC_ConfigChannel+0x40e>
    return 32U;
 8002bb2:	2320      	movs	r3, #32
 8002bb4:	e003      	b.n	8002bbe <HAL_ADC_ConfigChannel+0x416>
  return __builtin_clz(value);
 8002bb6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002bb8:	fab3 f383 	clz	r3, r3
 8002bbc:	b2db      	uxtb	r3, r3
        if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
 8002bbe:	429a      	cmp	r2, r3
 8002bc0:	d106      	bne.n	8002bd0 <HAL_ADC_ConfigChannel+0x428>
        {
          LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 8002bc2:	687b      	ldr	r3, [r7, #4]
 8002bc4:	681b      	ldr	r3, [r3, #0]
 8002bc6:	2200      	movs	r2, #0
 8002bc8:	2103      	movs	r1, #3
 8002bca:	4618      	mov	r0, r3
 8002bcc:	f7ff f98e 	bl	8001eec <LL_ADC_SetOffsetState>
    }

    /* Parameters update conditioned to ADC state:                              */
    /* Parameters that can be updated only when ADC is disabled:                */
    /*  - Single or differential mode                                           */
    if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	4618      	mov	r0, r3
 8002bd6:	f7ff faef 	bl	80021b8 <LL_ADC_IsEnabled>
 8002bda:	4603      	mov	r3, r0
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	f040 813d 	bne.w	8002e5c <HAL_ADC_ConfigChannel+0x6b4>
    {
      /* Set mode single-ended or differential input of the selected ADC channel */
      LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	6818      	ldr	r0, [r3, #0]
 8002be6:	683b      	ldr	r3, [r7, #0]
 8002be8:	6819      	ldr	r1, [r3, #0]
 8002bea:	683b      	ldr	r3, [r7, #0]
 8002bec:	68db      	ldr	r3, [r3, #12]
 8002bee:	461a      	mov	r2, r3
 8002bf0:	f7ff fa4a 	bl	8002088 <LL_ADC_SetChannelSingleDiff>

      /* Configuration of differential mode */
      if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
 8002bf4:	683b      	ldr	r3, [r7, #0]
 8002bf6:	68db      	ldr	r3, [r3, #12]
 8002bf8:	4aa2      	ldr	r2, [pc, #648]	; (8002e84 <HAL_ADC_ConfigChannel+0x6dc>)
 8002bfa:	4293      	cmp	r3, r2
 8002bfc:	f040 812e 	bne.w	8002e5c <HAL_ADC_ConfigChannel+0x6b4>
      {
        /* Set sampling time of the selected ADC channel */
        /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range */
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	6818      	ldr	r0, [r3, #0]
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002c04:	683b      	ldr	r3, [r7, #0]
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d10b      	bne.n	8002c28 <HAL_ADC_ConfigChannel+0x480>
 8002c10:	683b      	ldr	r3, [r7, #0]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	0e9b      	lsrs	r3, r3, #26
 8002c16:	3301      	adds	r3, #1
 8002c18:	f003 031f 	and.w	r3, r3, #31
 8002c1c:	2b09      	cmp	r3, #9
 8002c1e:	bf94      	ite	ls
 8002c20:	2301      	movls	r3, #1
 8002c22:	2300      	movhi	r3, #0
 8002c24:	b2db      	uxtb	r3, r3
 8002c26:	e019      	b.n	8002c5c <HAL_ADC_ConfigChannel+0x4b4>
 8002c28:	683b      	ldr	r3, [r7, #0]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	65fb      	str	r3, [r7, #92]	; 0x5c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002c2e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8002c30:	fa93 f3a3 	rbit	r3, r3
 8002c34:	65bb      	str	r3, [r7, #88]	; 0x58
  return result;
 8002c36:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002c38:	663b      	str	r3, [r7, #96]	; 0x60
  if (value == 0U)
 8002c3a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002c3c:	2b00      	cmp	r3, #0
 8002c3e:	d101      	bne.n	8002c44 <HAL_ADC_ConfigChannel+0x49c>
    return 32U;
 8002c40:	2320      	movs	r3, #32
 8002c42:	e003      	b.n	8002c4c <HAL_ADC_ConfigChannel+0x4a4>
  return __builtin_clz(value);
 8002c44:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002c46:	fab3 f383 	clz	r3, r3
 8002c4a:	b2db      	uxtb	r3, r3
 8002c4c:	3301      	adds	r3, #1
 8002c4e:	f003 031f 	and.w	r3, r3, #31
 8002c52:	2b09      	cmp	r3, #9
 8002c54:	bf94      	ite	ls
 8002c56:	2301      	movls	r3, #1
 8002c58:	2300      	movhi	r3, #0
 8002c5a:	b2db      	uxtb	r3, r3
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d079      	beq.n	8002d54 <HAL_ADC_ConfigChannel+0x5ac>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002c60:	683b      	ldr	r3, [r7, #0]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d107      	bne.n	8002c7c <HAL_ADC_ConfigChannel+0x4d4>
 8002c6c:	683b      	ldr	r3, [r7, #0]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	0e9b      	lsrs	r3, r3, #26
 8002c72:	3301      	adds	r3, #1
 8002c74:	069b      	lsls	r3, r3, #26
 8002c76:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002c7a:	e015      	b.n	8002ca8 <HAL_ADC_ConfigChannel+0x500>
 8002c7c:	683b      	ldr	r3, [r7, #0]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	653b      	str	r3, [r7, #80]	; 0x50
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002c82:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002c84:	fa93 f3a3 	rbit	r3, r3
 8002c88:	64fb      	str	r3, [r7, #76]	; 0x4c
  return result;
 8002c8a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002c8c:	657b      	str	r3, [r7, #84]	; 0x54
  if (value == 0U)
 8002c8e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	d101      	bne.n	8002c98 <HAL_ADC_ConfigChannel+0x4f0>
    return 32U;
 8002c94:	2320      	movs	r3, #32
 8002c96:	e003      	b.n	8002ca0 <HAL_ADC_ConfigChannel+0x4f8>
  return __builtin_clz(value);
 8002c98:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002c9a:	fab3 f383 	clz	r3, r3
 8002c9e:	b2db      	uxtb	r3, r3
 8002ca0:	3301      	adds	r3, #1
 8002ca2:	069b      	lsls	r3, r3, #26
 8002ca4:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002ca8:	683b      	ldr	r3, [r7, #0]
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d109      	bne.n	8002cc8 <HAL_ADC_ConfigChannel+0x520>
 8002cb4:	683b      	ldr	r3, [r7, #0]
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	0e9b      	lsrs	r3, r3, #26
 8002cba:	3301      	adds	r3, #1
 8002cbc:	f003 031f 	and.w	r3, r3, #31
 8002cc0:	2101      	movs	r1, #1
 8002cc2:	fa01 f303 	lsl.w	r3, r1, r3
 8002cc6:	e017      	b.n	8002cf8 <HAL_ADC_ConfigChannel+0x550>
 8002cc8:	683b      	ldr	r3, [r7, #0]
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	647b      	str	r3, [r7, #68]	; 0x44
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002cce:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002cd0:	fa93 f3a3 	rbit	r3, r3
 8002cd4:	643b      	str	r3, [r7, #64]	; 0x40
  return result;
 8002cd6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002cd8:	64bb      	str	r3, [r7, #72]	; 0x48
  if (value == 0U)
 8002cda:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	d101      	bne.n	8002ce4 <HAL_ADC_ConfigChannel+0x53c>
    return 32U;
 8002ce0:	2320      	movs	r3, #32
 8002ce2:	e003      	b.n	8002cec <HAL_ADC_ConfigChannel+0x544>
  return __builtin_clz(value);
 8002ce4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002ce6:	fab3 f383 	clz	r3, r3
 8002cea:	b2db      	uxtb	r3, r3
 8002cec:	3301      	adds	r3, #1
 8002cee:	f003 031f 	and.w	r3, r3, #31
 8002cf2:	2101      	movs	r1, #1
 8002cf4:	fa01 f303 	lsl.w	r3, r1, r3
 8002cf8:	ea42 0103 	orr.w	r1, r2, r3
 8002cfc:	683b      	ldr	r3, [r7, #0]
 8002cfe:	681b      	ldr	r3, [r3, #0]
 8002d00:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002d04:	2b00      	cmp	r3, #0
 8002d06:	d10a      	bne.n	8002d1e <HAL_ADC_ConfigChannel+0x576>
 8002d08:	683b      	ldr	r3, [r7, #0]
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	0e9b      	lsrs	r3, r3, #26
 8002d0e:	3301      	adds	r3, #1
 8002d10:	f003 021f 	and.w	r2, r3, #31
 8002d14:	4613      	mov	r3, r2
 8002d16:	005b      	lsls	r3, r3, #1
 8002d18:	4413      	add	r3, r2
 8002d1a:	051b      	lsls	r3, r3, #20
 8002d1c:	e018      	b.n	8002d50 <HAL_ADC_ConfigChannel+0x5a8>
 8002d1e:	683b      	ldr	r3, [r7, #0]
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	63bb      	str	r3, [r7, #56]	; 0x38
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002d24:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002d26:	fa93 f3a3 	rbit	r3, r3
 8002d2a:	637b      	str	r3, [r7, #52]	; 0x34
  return result;
 8002d2c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002d2e:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (value == 0U)
 8002d30:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002d32:	2b00      	cmp	r3, #0
 8002d34:	d101      	bne.n	8002d3a <HAL_ADC_ConfigChannel+0x592>
    return 32U;
 8002d36:	2320      	movs	r3, #32
 8002d38:	e003      	b.n	8002d42 <HAL_ADC_ConfigChannel+0x59a>
  return __builtin_clz(value);
 8002d3a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002d3c:	fab3 f383 	clz	r3, r3
 8002d40:	b2db      	uxtb	r3, r3
 8002d42:	3301      	adds	r3, #1
 8002d44:	f003 021f 	and.w	r2, r3, #31
 8002d48:	4613      	mov	r3, r2
 8002d4a:	005b      	lsls	r3, r3, #1
 8002d4c:	4413      	add	r3, r2
 8002d4e:	051b      	lsls	r3, r3, #20
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002d50:	430b      	orrs	r3, r1
 8002d52:	e07e      	b.n	8002e52 <HAL_ADC_ConfigChannel+0x6aa>
                                      (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) + 1UL) & 0x1FUL)),
 8002d54:	683b      	ldr	r3, [r7, #0]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	d107      	bne.n	8002d70 <HAL_ADC_ConfigChannel+0x5c8>
 8002d60:	683b      	ldr	r3, [r7, #0]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	0e9b      	lsrs	r3, r3, #26
 8002d66:	3301      	adds	r3, #1
 8002d68:	069b      	lsls	r3, r3, #26
 8002d6a:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002d6e:	e015      	b.n	8002d9c <HAL_ADC_ConfigChannel+0x5f4>
 8002d70:	683b      	ldr	r3, [r7, #0]
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002d76:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002d78:	fa93 f3a3 	rbit	r3, r3
 8002d7c:	62bb      	str	r3, [r7, #40]	; 0x28
  return result;
 8002d7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d80:	633b      	str	r3, [r7, #48]	; 0x30
  if (value == 0U)
 8002d82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d101      	bne.n	8002d8c <HAL_ADC_ConfigChannel+0x5e4>
    return 32U;
 8002d88:	2320      	movs	r3, #32
 8002d8a:	e003      	b.n	8002d94 <HAL_ADC_ConfigChannel+0x5ec>
  return __builtin_clz(value);
 8002d8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d8e:	fab3 f383 	clz	r3, r3
 8002d92:	b2db      	uxtb	r3, r3
 8002d94:	3301      	adds	r3, #1
 8002d96:	069b      	lsls	r3, r3, #26
 8002d98:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8002d9c:	683b      	ldr	r3, [r7, #0]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d109      	bne.n	8002dbc <HAL_ADC_ConfigChannel+0x614>
 8002da8:	683b      	ldr	r3, [r7, #0]
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	0e9b      	lsrs	r3, r3, #26
 8002dae:	3301      	adds	r3, #1
 8002db0:	f003 031f 	and.w	r3, r3, #31
 8002db4:	2101      	movs	r1, #1
 8002db6:	fa01 f303 	lsl.w	r3, r1, r3
 8002dba:	e017      	b.n	8002dec <HAL_ADC_ConfigChannel+0x644>
 8002dbc:	683b      	ldr	r3, [r7, #0]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	623b      	str	r3, [r7, #32]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002dc2:	6a3b      	ldr	r3, [r7, #32]
 8002dc4:	fa93 f3a3 	rbit	r3, r3
 8002dc8:	61fb      	str	r3, [r7, #28]
  return result;
 8002dca:	69fb      	ldr	r3, [r7, #28]
 8002dcc:	627b      	str	r3, [r7, #36]	; 0x24
  if (value == 0U)
 8002dce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002dd0:	2b00      	cmp	r3, #0
 8002dd2:	d101      	bne.n	8002dd8 <HAL_ADC_ConfigChannel+0x630>
    return 32U;
 8002dd4:	2320      	movs	r3, #32
 8002dd6:	e003      	b.n	8002de0 <HAL_ADC_ConfigChannel+0x638>
  return __builtin_clz(value);
 8002dd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002dda:	fab3 f383 	clz	r3, r3
 8002dde:	b2db      	uxtb	r3, r3
 8002de0:	3301      	adds	r3, #1
 8002de2:	f003 031f 	and.w	r3, r3, #31
 8002de6:	2101      	movs	r1, #1
 8002de8:	fa01 f303 	lsl.w	r3, r1, r3
 8002dec:	ea42 0103 	orr.w	r1, r2, r3
 8002df0:	683b      	ldr	r3, [r7, #0]
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002df8:	2b00      	cmp	r3, #0
 8002dfa:	d10d      	bne.n	8002e18 <HAL_ADC_ConfigChannel+0x670>
 8002dfc:	683b      	ldr	r3, [r7, #0]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	0e9b      	lsrs	r3, r3, #26
 8002e02:	3301      	adds	r3, #1
 8002e04:	f003 021f 	and.w	r2, r3, #31
 8002e08:	4613      	mov	r3, r2
 8002e0a:	005b      	lsls	r3, r3, #1
 8002e0c:	4413      	add	r3, r2
 8002e0e:	3b1e      	subs	r3, #30
 8002e10:	051b      	lsls	r3, r3, #20
 8002e12:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002e16:	e01b      	b.n	8002e50 <HAL_ADC_ConfigChannel+0x6a8>
 8002e18:	683b      	ldr	r3, [r7, #0]
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	617b      	str	r3, [r7, #20]
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002e1e:	697b      	ldr	r3, [r7, #20]
 8002e20:	fa93 f3a3 	rbit	r3, r3
 8002e24:	613b      	str	r3, [r7, #16]
  return result;
 8002e26:	693b      	ldr	r3, [r7, #16]
 8002e28:	61bb      	str	r3, [r7, #24]
  if (value == 0U)
 8002e2a:	69bb      	ldr	r3, [r7, #24]
 8002e2c:	2b00      	cmp	r3, #0
 8002e2e:	d101      	bne.n	8002e34 <HAL_ADC_ConfigChannel+0x68c>
    return 32U;
 8002e30:	2320      	movs	r3, #32
 8002e32:	e003      	b.n	8002e3c <HAL_ADC_ConfigChannel+0x694>
  return __builtin_clz(value);
 8002e34:	69bb      	ldr	r3, [r7, #24]
 8002e36:	fab3 f383 	clz	r3, r3
 8002e3a:	b2db      	uxtb	r3, r3
 8002e3c:	3301      	adds	r3, #1
 8002e3e:	f003 021f 	and.w	r2, r3, #31
 8002e42:	4613      	mov	r3, r2
 8002e44:	005b      	lsls	r3, r3, #1
 8002e46:	4413      	add	r3, r2
 8002e48:	3b1e      	subs	r3, #30
 8002e4a:	051b      	lsls	r3, r3, #20
 8002e4c:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
        LL_ADC_SetChannelSamplingTime(hadc->Instance,
 8002e50:	430b      	orrs	r3, r1
 8002e52:	683a      	ldr	r2, [r7, #0]
 8002e54:	6892      	ldr	r2, [r2, #8]
 8002e56:	4619      	mov	r1, r3
 8002e58:	f7ff f8eb 	bl	8002032 <LL_ADC_SetChannelSamplingTime>
    /* If internal channel selected, enable dedicated internal buffers and    */
    /* paths.                                                                 */
    /* Note: these internal measurement paths can be disabled using           */
    /* HAL_ADC_DeInit().                                                      */

    if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
 8002e5c:	683b      	ldr	r3, [r7, #0]
 8002e5e:	681a      	ldr	r2, [r3, #0]
 8002e60:	4b09      	ldr	r3, [pc, #36]	; (8002e88 <HAL_ADC_ConfigChannel+0x6e0>)
 8002e62:	4013      	ands	r3, r2
 8002e64:	2b00      	cmp	r3, #0
 8002e66:	f000 80be 	beq.w	8002fe6 <HAL_ADC_ConfigChannel+0x83e>
    {
      tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 8002e6a:	687b      	ldr	r3, [r7, #4]
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8002e72:	d004      	beq.n	8002e7e <HAL_ADC_ConfigChannel+0x6d6>
 8002e74:	687b      	ldr	r3, [r7, #4]
 8002e76:	681b      	ldr	r3, [r3, #0]
 8002e78:	4a04      	ldr	r2, [pc, #16]	; (8002e8c <HAL_ADC_ConfigChannel+0x6e4>)
 8002e7a:	4293      	cmp	r3, r2
 8002e7c:	d10a      	bne.n	8002e94 <HAL_ADC_ConfigChannel+0x6ec>
 8002e7e:	4b04      	ldr	r3, [pc, #16]	; (8002e90 <HAL_ADC_ConfigChannel+0x6e8>)
 8002e80:	e009      	b.n	8002e96 <HAL_ADC_ConfigChannel+0x6ee>
 8002e82:	bf00      	nop
 8002e84:	407f0000 	.word	0x407f0000
 8002e88:	80080000 	.word	0x80080000
 8002e8c:	50000100 	.word	0x50000100
 8002e90:	50000300 	.word	0x50000300
 8002e94:	4b59      	ldr	r3, [pc, #356]	; (8002ffc <HAL_ADC_ConfigChannel+0x854>)
 8002e96:	4618      	mov	r0, r3
 8002e98:	f7fe ffe0 	bl	8001e5c <LL_ADC_GetCommonPathInternalCh>
 8002e9c:	f8c7 00c4 	str.w	r0, [r7, #196]	; 0xc4

      /* If the requested internal measurement path has already been enabled, */
      /* bypass the configuration processing.                                 */
      if (((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR_ADC1) || (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR_ADC5))
 8002ea0:	683b      	ldr	r3, [r7, #0]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	4a56      	ldr	r2, [pc, #344]	; (8003000 <HAL_ADC_ConfigChannel+0x858>)
 8002ea6:	4293      	cmp	r3, r2
 8002ea8:	d004      	beq.n	8002eb4 <HAL_ADC_ConfigChannel+0x70c>
 8002eaa:	683b      	ldr	r3, [r7, #0]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	4a55      	ldr	r2, [pc, #340]	; (8003004 <HAL_ADC_ConfigChannel+0x85c>)
 8002eb0:	4293      	cmp	r3, r2
 8002eb2:	d13a      	bne.n	8002f2a <HAL_ADC_ConfigChannel+0x782>
          && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 8002eb4:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002eb8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002ebc:	2b00      	cmp	r3, #0
 8002ebe:	d134      	bne.n	8002f2a <HAL_ADC_ConfigChannel+0x782>
      {
        if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8002ec8:	d005      	beq.n	8002ed6 <HAL_ADC_ConfigChannel+0x72e>
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	4a4e      	ldr	r2, [pc, #312]	; (8003008 <HAL_ADC_ConfigChannel+0x860>)
 8002ed0:	4293      	cmp	r3, r2
 8002ed2:	f040 8085 	bne.w	8002fe0 <HAL_ADC_ConfigChannel+0x838>
        {
          LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8002ede:	d004      	beq.n	8002eea <HAL_ADC_ConfigChannel+0x742>
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	4a49      	ldr	r2, [pc, #292]	; (800300c <HAL_ADC_ConfigChannel+0x864>)
 8002ee6:	4293      	cmp	r3, r2
 8002ee8:	d101      	bne.n	8002eee <HAL_ADC_ConfigChannel+0x746>
 8002eea:	4a49      	ldr	r2, [pc, #292]	; (8003010 <HAL_ADC_ConfigChannel+0x868>)
 8002eec:	e000      	b.n	8002ef0 <HAL_ADC_ConfigChannel+0x748>
 8002eee:	4a43      	ldr	r2, [pc, #268]	; (8002ffc <HAL_ADC_ConfigChannel+0x854>)
 8002ef0:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002ef4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002ef8:	4619      	mov	r1, r3
 8002efa:	4610      	mov	r0, r2
 8002efc:	f7fe ff9b 	bl	8001e36 <LL_ADC_SetCommonPathInternalCh>
          /* Delay for temperature sensor stabilization time */
          /* Wait loop initialization and execution */
          /* Note: Variable divided by 2 to compensate partially              */
          /*       CPU processing cycles, scaling in us split to not          */
          /*       exceed 32 bits register capacity and handle low frequency. */
          wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 8002f00:	4b44      	ldr	r3, [pc, #272]	; (8003014 <HAL_ADC_ConfigChannel+0x86c>)
 8002f02:	681b      	ldr	r3, [r3, #0]
 8002f04:	099b      	lsrs	r3, r3, #6
 8002f06:	4a44      	ldr	r2, [pc, #272]	; (8003018 <HAL_ADC_ConfigChannel+0x870>)
 8002f08:	fba2 2303 	umull	r2, r3, r2, r3
 8002f0c:	099b      	lsrs	r3, r3, #6
 8002f0e:	1c5a      	adds	r2, r3, #1
 8002f10:	4613      	mov	r3, r2
 8002f12:	005b      	lsls	r3, r3, #1
 8002f14:	4413      	add	r3, r2
 8002f16:	009b      	lsls	r3, r3, #2
 8002f18:	60fb      	str	r3, [r7, #12]
          while (wait_loop_index != 0UL)
 8002f1a:	e002      	b.n	8002f22 <HAL_ADC_ConfigChannel+0x77a>
          {
            wait_loop_index--;
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	3b01      	subs	r3, #1
 8002f20:	60fb      	str	r3, [r7, #12]
          while (wait_loop_index != 0UL)
 8002f22:	68fb      	ldr	r3, [r7, #12]
 8002f24:	2b00      	cmp	r3, #0
 8002f26:	d1f9      	bne.n	8002f1c <HAL_ADC_ConfigChannel+0x774>
        if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002f28:	e05a      	b.n	8002fe0 <HAL_ADC_ConfigChannel+0x838>
          }
        }
      }
      else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 8002f2a:	683b      	ldr	r3, [r7, #0]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	4a3b      	ldr	r2, [pc, #236]	; (800301c <HAL_ADC_ConfigChannel+0x874>)
 8002f30:	4293      	cmp	r3, r2
 8002f32:	d125      	bne.n	8002f80 <HAL_ADC_ConfigChannel+0x7d8>
 8002f34:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002f38:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002f3c:	2b00      	cmp	r3, #0
 8002f3e:	d11f      	bne.n	8002f80 <HAL_ADC_ConfigChannel+0x7d8>
      {
        if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	4a31      	ldr	r2, [pc, #196]	; (800300c <HAL_ADC_ConfigChannel+0x864>)
 8002f46:	4293      	cmp	r3, r2
 8002f48:	d104      	bne.n	8002f54 <HAL_ADC_ConfigChannel+0x7ac>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	4a34      	ldr	r2, [pc, #208]	; (8003020 <HAL_ADC_ConfigChannel+0x878>)
 8002f50:	4293      	cmp	r3, r2
 8002f52:	d047      	beq.n	8002fe4 <HAL_ADC_ConfigChannel+0x83c>
        {
          LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 8002f54:	687b      	ldr	r3, [r7, #4]
 8002f56:	681b      	ldr	r3, [r3, #0]
 8002f58:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8002f5c:	d004      	beq.n	8002f68 <HAL_ADC_ConfigChannel+0x7c0>
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	681b      	ldr	r3, [r3, #0]
 8002f62:	4a2a      	ldr	r2, [pc, #168]	; (800300c <HAL_ADC_ConfigChannel+0x864>)
 8002f64:	4293      	cmp	r3, r2
 8002f66:	d101      	bne.n	8002f6c <HAL_ADC_ConfigChannel+0x7c4>
 8002f68:	4a29      	ldr	r2, [pc, #164]	; (8003010 <HAL_ADC_ConfigChannel+0x868>)
 8002f6a:	e000      	b.n	8002f6e <HAL_ADC_ConfigChannel+0x7c6>
 8002f6c:	4a23      	ldr	r2, [pc, #140]	; (8002ffc <HAL_ADC_ConfigChannel+0x854>)
 8002f6e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002f72:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002f76:	4619      	mov	r1, r3
 8002f78:	4610      	mov	r0, r2
 8002f7a:	f7fe ff5c 	bl	8001e36 <LL_ADC_SetCommonPathInternalCh>
        if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002f7e:	e031      	b.n	8002fe4 <HAL_ADC_ConfigChannel+0x83c>
                                         LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
        }
      }
      else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
 8002f80:	683b      	ldr	r3, [r7, #0]
 8002f82:	681b      	ldr	r3, [r3, #0]
 8002f84:	4a27      	ldr	r2, [pc, #156]	; (8003024 <HAL_ADC_ConfigChannel+0x87c>)
 8002f86:	4293      	cmp	r3, r2
 8002f88:	d12d      	bne.n	8002fe6 <HAL_ADC_ConfigChannel+0x83e>
               && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 8002f8a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002f8e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002f92:	2b00      	cmp	r3, #0
 8002f94:	d127      	bne.n	8002fe6 <HAL_ADC_ConfigChannel+0x83e>
      {
        if (ADC_VREFINT_INSTANCE(hadc))
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	681b      	ldr	r3, [r3, #0]
 8002f9a:	4a1c      	ldr	r2, [pc, #112]	; (800300c <HAL_ADC_ConfigChannel+0x864>)
 8002f9c:	4293      	cmp	r3, r2
 8002f9e:	d022      	beq.n	8002fe6 <HAL_ADC_ConfigChannel+0x83e>
        {
          LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	681b      	ldr	r3, [r3, #0]
 8002fa4:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8002fa8:	d004      	beq.n	8002fb4 <HAL_ADC_ConfigChannel+0x80c>
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	4a17      	ldr	r2, [pc, #92]	; (800300c <HAL_ADC_ConfigChannel+0x864>)
 8002fb0:	4293      	cmp	r3, r2
 8002fb2:	d101      	bne.n	8002fb8 <HAL_ADC_ConfigChannel+0x810>
 8002fb4:	4a16      	ldr	r2, [pc, #88]	; (8003010 <HAL_ADC_ConfigChannel+0x868>)
 8002fb6:	e000      	b.n	8002fba <HAL_ADC_ConfigChannel+0x812>
 8002fb8:	4a10      	ldr	r2, [pc, #64]	; (8002ffc <HAL_ADC_ConfigChannel+0x854>)
 8002fba:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8002fbe:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002fc2:	4619      	mov	r1, r3
 8002fc4:	4610      	mov	r0, r2
 8002fc6:	f7fe ff36 	bl	8001e36 <LL_ADC_SetCommonPathInternalCh>
 8002fca:	e00c      	b.n	8002fe6 <HAL_ADC_ConfigChannel+0x83e>
  /* channel could be done on neither of the channel configuration structure  */
  /* parameters.                                                              */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002fd0:	f043 0220 	orr.w	r2, r3, #32
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	65da      	str	r2, [r3, #92]	; 0x5c

    tmp_hal_status = HAL_ERROR;
 8002fd8:	2301      	movs	r3, #1
 8002fda:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 8002fde:	e002      	b.n	8002fe6 <HAL_ADC_ConfigChannel+0x83e>
        if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
 8002fe0:	bf00      	nop
 8002fe2:	e000      	b.n	8002fe6 <HAL_ADC_ConfigChannel+0x83e>
        if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
 8002fe4:	bf00      	nop
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	2200      	movs	r2, #0
 8002fea:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58

  /* Return function status */
  return tmp_hal_status;
 8002fee:	f897 30d7 	ldrb.w	r3, [r7, #215]	; 0xd7
}
 8002ff2:	4618      	mov	r0, r3
 8002ff4:	37d8      	adds	r7, #216	; 0xd8
 8002ff6:	46bd      	mov	sp, r7
 8002ff8:	bd80      	pop	{r7, pc}
 8002ffa:	bf00      	nop
 8002ffc:	50000700 	.word	0x50000700
 8003000:	c3210000 	.word	0xc3210000
 8003004:	90c00010 	.word	0x90c00010
 8003008:	50000600 	.word	0x50000600
 800300c:	50000100 	.word	0x50000100
 8003010:	50000300 	.word	0x50000300
 8003014:	200001c4 	.word	0x200001c4
 8003018:	053e2d63 	.word	0x053e2d63
 800301c:	c7520000 	.word	0xc7520000
 8003020:	50000500 	.word	0x50000500
 8003024:	cb840000 	.word	0xcb840000

08003028 <ADC_Enable>:
  *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
  * @param hadc ADC handle
  * @retval HAL status.
  */
HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
{
 8003028:	b580      	push	{r7, lr}
 800302a:	b084      	sub	sp, #16
 800302c:	af00      	add	r7, sp, #0
 800302e:	6078      	str	r0, [r7, #4]

  /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
  /* enabling phase not yet completed: flag ADC ready not yet set).           */
  /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
  /* causes: ADC clock not running, ...).                                     */
  if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	681b      	ldr	r3, [r3, #0]
 8003034:	4618      	mov	r0, r3
 8003036:	f7ff f8bf 	bl	80021b8 <LL_ADC_IsEnabled>
 800303a:	4603      	mov	r3, r0
 800303c:	2b00      	cmp	r3, #0
 800303e:	d14d      	bne.n	80030dc <ADC_Enable+0xb4>
  {
    /* Check if conditions to enable the ADC are fulfilled */
    if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_CR_ADSTART
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	681b      	ldr	r3, [r3, #0]
 8003044:	689a      	ldr	r2, [r3, #8]
 8003046:	4b28      	ldr	r3, [pc, #160]	; (80030e8 <ADC_Enable+0xc0>)
 8003048:	4013      	ands	r3, r2
 800304a:	2b00      	cmp	r3, #0
 800304c:	d00d      	beq.n	800306a <ADC_Enable+0x42>
                               | ADC_CR_ADDIS | ADC_CR_ADEN)) != 0UL)
    {
      /* Update ADC state machine to error */
      SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003052:	f043 0210 	orr.w	r2, r3, #16
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	65da      	str	r2, [r3, #92]	; 0x5c

      /* Set ADC error code to ADC peripheral internal error */
      SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800305e:	f043 0201 	orr.w	r2, r3, #1
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	661a      	str	r2, [r3, #96]	; 0x60

      return HAL_ERROR;
 8003066:	2301      	movs	r3, #1
 8003068:	e039      	b.n	80030de <ADC_Enable+0xb6>
    }

    /* Enable the ADC peripheral */
    LL_ADC_Enable(hadc->Instance);
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	681b      	ldr	r3, [r3, #0]
 800306e:	4618      	mov	r0, r3
 8003070:	f7ff f88e 	bl	8002190 <LL_ADC_Enable>

    /* Wait for ADC effectively enabled */
    tickstart = HAL_GetTick();
 8003074:	f7fe fe9e 	bl	8001db4 <HAL_GetTick>
 8003078:	60f8      	str	r0, [r7, #12]

    while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
 800307a:	e028      	b.n	80030ce <ADC_Enable+0xa6>
          The workaround is to continue setting ADEN until ADRDY is becomes 1.
          Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
          4 ADC clock cycle duration */
      /* Note: Test of ADC enabled required due to hardware constraint to     */
      /*       not enable ADC if already enabled.                             */
      if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 800307c:	687b      	ldr	r3, [r7, #4]
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	4618      	mov	r0, r3
 8003082:	f7ff f899 	bl	80021b8 <LL_ADC_IsEnabled>
 8003086:	4603      	mov	r3, r0
 8003088:	2b00      	cmp	r3, #0
 800308a:	d104      	bne.n	8003096 <ADC_Enable+0x6e>
      {
        LL_ADC_Enable(hadc->Instance);
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	4618      	mov	r0, r3
 8003092:	f7ff f87d 	bl	8002190 <LL_ADC_Enable>
      }

      if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
 8003096:	f7fe fe8d 	bl	8001db4 <HAL_GetTick>
 800309a:	4602      	mov	r2, r0
 800309c:	68fb      	ldr	r3, [r7, #12]
 800309e:	1ad3      	subs	r3, r2, r3
 80030a0:	2b02      	cmp	r3, #2
 80030a2:	d914      	bls.n	80030ce <ADC_Enable+0xa6>
      {
        /* New check to avoid false timeout detection in case of preemption */
        if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	f003 0301 	and.w	r3, r3, #1
 80030ae:	2b01      	cmp	r3, #1
 80030b0:	d00d      	beq.n	80030ce <ADC_Enable+0xa6>
        {
          /* Update ADC state machine to error */
          SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030b6:	f043 0210 	orr.w	r2, r3, #16
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	65da      	str	r2, [r3, #92]	; 0x5c

          /* Set ADC error code to ADC peripheral internal error */
          SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80030c2:	f043 0201 	orr.w	r2, r3, #1
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	661a      	str	r2, [r3, #96]	; 0x60

          return HAL_ERROR;
 80030ca:	2301      	movs	r3, #1
 80030cc:	e007      	b.n	80030de <ADC_Enable+0xb6>
    while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	f003 0301 	and.w	r3, r3, #1
 80030d8:	2b01      	cmp	r3, #1
 80030da:	d1cf      	bne.n	800307c <ADC_Enable+0x54>
      }
    }
  }

  /* Return HAL status */
  return HAL_OK;
 80030dc:	2300      	movs	r3, #0
}
 80030de:	4618      	mov	r0, r3
 80030e0:	3710      	adds	r7, #16
 80030e2:	46bd      	mov	sp, r7
 80030e4:	bd80      	pop	{r7, pc}
 80030e6:	bf00      	nop
 80030e8:	8000003f 	.word	0x8000003f

080030ec <ADC_DMAConvCplt>:
  * @brief  DMA transfer complete callback.
  * @param hdma pointer to DMA handle.
  * @retval None
  */
void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 80030ec:	b580      	push	{r7, lr}
 80030ee:	b084      	sub	sp, #16
 80030f0:	af00      	add	r7, sp, #0
 80030f2:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80030f8:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80030fe:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8003102:	2b00      	cmp	r3, #0
 8003104:	d14b      	bne.n	800319e <ADC_DMAConvCplt+0xb2>
  {
    /* Set ADC state */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8003106:	68fb      	ldr	r3, [r7, #12]
 8003108:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800310a:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800310e:	68fb      	ldr	r3, [r7, #12]
 8003110:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Determine whether any further conversion upcoming on group regular     */
    /* by external trigger, continuous mode or scan sequence on going         */
    /* to disable interruption.                                               */
    /* Is it the end of the regular sequence ? */
    if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	681b      	ldr	r3, [r3, #0]
 8003118:	f003 0308 	and.w	r3, r3, #8
 800311c:	2b00      	cmp	r3, #0
 800311e:	d021      	beq.n	8003164 <ADC_DMAConvCplt+0x78>
    {
      /* Are conversions software-triggered ? */
      if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 8003120:	68fb      	ldr	r3, [r7, #12]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	4618      	mov	r0, r3
 8003126:	f7fe ff45 	bl	8001fb4 <LL_ADC_REG_IsTriggerSourceSWStart>
 800312a:	4603      	mov	r3, r0
 800312c:	2b00      	cmp	r3, #0
 800312e:	d032      	beq.n	8003196 <ADC_DMAConvCplt+0xaa>
      {
        /* Is CONT bit set ? */
        if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	68db      	ldr	r3, [r3, #12]
 8003136:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800313a:	2b00      	cmp	r3, #0
 800313c:	d12b      	bne.n	8003196 <ADC_DMAConvCplt+0xaa>
        {
          /* CONT bit is not set, no more conversions expected */
          CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 800313e:	68fb      	ldr	r3, [r7, #12]
 8003140:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003142:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8003146:	68fb      	ldr	r3, [r7, #12]
 8003148:	65da      	str	r2, [r3, #92]	; 0x5c
          if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800314e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003152:	2b00      	cmp	r3, #0
 8003154:	d11f      	bne.n	8003196 <ADC_DMAConvCplt+0xaa>
          {
            SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8003156:	68fb      	ldr	r3, [r7, #12]
 8003158:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800315a:	f043 0201 	orr.w	r2, r3, #1
 800315e:	68fb      	ldr	r3, [r7, #12]
 8003160:	65da      	str	r2, [r3, #92]	; 0x5c
 8003162:	e018      	b.n	8003196 <ADC_DMAConvCplt+0xaa>
    }
    else
    {
      /* DMA End of Transfer interrupt was triggered but conversions sequence
         is not over. If DMACFG is set to 0, conversions are stopped. */
      if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	68db      	ldr	r3, [r3, #12]
 800316a:	f003 0302 	and.w	r3, r3, #2
 800316e:	2b00      	cmp	r3, #0
 8003170:	d111      	bne.n	8003196 <ADC_DMAConvCplt+0xaa>
      {
        /* DMACFG bit is not set, conversions are stopped. */
        CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8003172:	68fb      	ldr	r3, [r7, #12]
 8003174:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003176:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800317a:	68fb      	ldr	r3, [r7, #12]
 800317c:	65da      	str	r2, [r3, #92]	; 0x5c
        if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 800317e:	68fb      	ldr	r3, [r7, #12]
 8003180:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003182:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003186:	2b00      	cmp	r3, #0
 8003188:	d105      	bne.n	8003196 <ADC_DMAConvCplt+0xaa>
        {
          SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800318a:	68fb      	ldr	r3, [r7, #12]
 800318c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800318e:	f043 0201 	orr.w	r2, r3, #1
 8003192:	68fb      	ldr	r3, [r7, #12]
 8003194:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8003196:	68f8      	ldr	r0, [r7, #12]
 8003198:	f7fe fa34 	bl	8001604 <HAL_ADC_ConvCpltCallback>
    {
      /* Call ADC DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 800319c:	e00e      	b.n	80031bc <ADC_DMAConvCplt+0xd0>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80031a2:	f003 0310 	and.w	r3, r3, #16
 80031a6:	2b00      	cmp	r3, #0
 80031a8:	d003      	beq.n	80031b2 <ADC_DMAConvCplt+0xc6>
      HAL_ADC_ErrorCallback(hadc);
 80031aa:	68f8      	ldr	r0, [r7, #12]
 80031ac:	f7ff faf2 	bl	8002794 <HAL_ADC_ErrorCallback>
}
 80031b0:	e004      	b.n	80031bc <ADC_DMAConvCplt+0xd0>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 80031b2:	68fb      	ldr	r3, [r7, #12]
 80031b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80031b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80031b8:	6878      	ldr	r0, [r7, #4]
 80031ba:	4798      	blx	r3
}
 80031bc:	bf00      	nop
 80031be:	3710      	adds	r7, #16
 80031c0:	46bd      	mov	sp, r7
 80031c2:	bd80      	pop	{r7, pc}

080031c4 <ADC_DMAHalfConvCplt>:
  * @brief  DMA half transfer complete callback.
  * @param hdma pointer to DMA handle.
  * @retval None
  */
void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 80031c4:	b580      	push	{r7, lr}
 80031c6:	b084      	sub	sp, #16
 80031c8:	af00      	add	r7, sp, #0
 80031ca:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031d0:	60fb      	str	r3, [r7, #12]

  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80031d2:	68f8      	ldr	r0, [r7, #12]
 80031d4:	f7ff fad4 	bl	8002780 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80031d8:	bf00      	nop
 80031da:	3710      	adds	r7, #16
 80031dc:	46bd      	mov	sp, r7
 80031de:	bd80      	pop	{r7, pc}

080031e0 <ADC_DMAError>:
  * @brief  DMA error callback.
  * @param hdma pointer to DMA handle.
  * @retval None
  */
void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 80031e0:	b580      	push	{r7, lr}
 80031e2:	b084      	sub	sp, #16
 80031e4:	af00      	add	r7, sp, #0
 80031e6:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80031ec:	60fb      	str	r3, [r7, #12]

  /* Set ADC state */
  SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 80031ee:	68fb      	ldr	r3, [r7, #12]
 80031f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80031f2:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	65da      	str	r2, [r3, #92]	; 0x5c

  /* Set ADC error code to DMA error */
  SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 80031fa:	68fb      	ldr	r3, [r7, #12]
 80031fc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80031fe:	f043 0204 	orr.w	r2, r3, #4
 8003202:	68fb      	ldr	r3, [r7, #12]
 8003204:	661a      	str	r2, [r3, #96]	; 0x60

  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 8003206:	68f8      	ldr	r0, [r7, #12]
 8003208:	f7ff fac4 	bl	8002794 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800320c:	bf00      	nop
 800320e:	3710      	adds	r7, #16
 8003210:	46bd      	mov	sp, r7
 8003212:	bd80      	pop	{r7, pc}

08003214 <LL_ADC_IsEnabled>:
{
 8003214:	b480      	push	{r7}
 8003216:	b083      	sub	sp, #12
 8003218:	af00      	add	r7, sp, #0
 800321a:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	689b      	ldr	r3, [r3, #8]
 8003220:	f003 0301 	and.w	r3, r3, #1
 8003224:	2b01      	cmp	r3, #1
 8003226:	d101      	bne.n	800322c <LL_ADC_IsEnabled+0x18>
 8003228:	2301      	movs	r3, #1
 800322a:	e000      	b.n	800322e <LL_ADC_IsEnabled+0x1a>
 800322c:	2300      	movs	r3, #0
}
 800322e:	4618      	mov	r0, r3
 8003230:	370c      	adds	r7, #12
 8003232:	46bd      	mov	sp, r7
 8003234:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003238:	4770      	bx	lr

0800323a <LL_ADC_REG_IsConversionOngoing>:
{
 800323a:	b480      	push	{r7}
 800323c:	b083      	sub	sp, #12
 800323e:	af00      	add	r7, sp, #0
 8003240:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	689b      	ldr	r3, [r3, #8]
 8003246:	f003 0304 	and.w	r3, r3, #4
 800324a:	2b04      	cmp	r3, #4
 800324c:	d101      	bne.n	8003252 <LL_ADC_REG_IsConversionOngoing+0x18>
 800324e:	2301      	movs	r3, #1
 8003250:	e000      	b.n	8003254 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003252:	2300      	movs	r3, #0
}
 8003254:	4618      	mov	r0, r3
 8003256:	370c      	adds	r7, #12
 8003258:	46bd      	mov	sp, r7
 800325a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800325e:	4770      	bx	lr

08003260 <HAL_ADCEx_MultiModeConfigChannel>:
  * @param hadc Master ADC handle
  * @param multimode Structure of ADC multimode configuration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *multimode)
{
 8003260:	b590      	push	{r4, r7, lr}
 8003262:	b0a1      	sub	sp, #132	; 0x84
 8003264:	af00      	add	r7, sp, #0
 8003266:	6078      	str	r0, [r7, #4]
 8003268:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 800326a:	2300      	movs	r3, #0
 800326c:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
    assert_param(IS_ADC_DMA_ACCESS_MULTIMODE(multimode->DMAAccessMode));
    assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
  }

  /* Process locked */
  __HAL_LOCK(hadc);
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 8003276:	2b01      	cmp	r3, #1
 8003278:	d101      	bne.n	800327e <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 800327a:	2302      	movs	r3, #2
 800327c:	e0e7      	b.n	800344e <HAL_ADCEx_MultiModeConfigChannel+0x1ee>
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	2201      	movs	r2, #1
 8003282:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58

  /* Temporary handle minimum initialization */
  __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 8003286:	2300      	movs	r3, #0
 8003288:	667b      	str	r3, [r7, #100]	; 0x64
  ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 800328a:	2300      	movs	r3, #0
 800328c:	66bb      	str	r3, [r7, #104]	; 0x68

  ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8003296:	d102      	bne.n	800329e <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 8003298:	4b6f      	ldr	r3, [pc, #444]	; (8003458 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 800329a:	60bb      	str	r3, [r7, #8]
 800329c:	e009      	b.n	80032b2 <HAL_ADCEx_MultiModeConfigChannel+0x52>
 800329e:	687b      	ldr	r3, [r7, #4]
 80032a0:	681b      	ldr	r3, [r3, #0]
 80032a2:	4a6e      	ldr	r2, [pc, #440]	; (800345c <HAL_ADCEx_MultiModeConfigChannel+0x1fc>)
 80032a4:	4293      	cmp	r3, r2
 80032a6:	d102      	bne.n	80032ae <HAL_ADCEx_MultiModeConfigChannel+0x4e>
 80032a8:	4b6d      	ldr	r3, [pc, #436]	; (8003460 <HAL_ADCEx_MultiModeConfigChannel+0x200>)
 80032aa:	60bb      	str	r3, [r7, #8]
 80032ac:	e001      	b.n	80032b2 <HAL_ADCEx_MultiModeConfigChannel+0x52>
 80032ae:	2300      	movs	r3, #0
 80032b0:	60bb      	str	r3, [r7, #8]

  if (tmphadcSlave.Instance == NULL)
 80032b2:	68bb      	ldr	r3, [r7, #8]
 80032b4:	2b00      	cmp	r3, #0
 80032b6:	d10b      	bne.n	80032d0 <HAL_ADCEx_MultiModeConfigChannel+0x70>
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80032bc:	f043 0220 	orr.w	r2, r3, #32
 80032c0:	687b      	ldr	r3, [r7, #4]
 80032c2:	65da      	str	r2, [r3, #92]	; 0x5c

    /* Process unlocked */
    __HAL_UNLOCK(hadc);
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	2200      	movs	r2, #0
 80032c8:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58

    return HAL_ERROR;
 80032cc:	2301      	movs	r3, #1
 80032ce:	e0be      	b.n	800344e <HAL_ADCEx_MultiModeConfigChannel+0x1ee>
  /* Parameters update conditioned to ADC state:                              */
  /* Parameters that can be updated when ADC is disabled or enabled without   */
  /* conversion on going on regular group:                                    */
  /*  - Multimode DMA configuration                                           */
  /*  - Multimode DMA mode                                                    */
  tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
 80032d0:	68bb      	ldr	r3, [r7, #8]
 80032d2:	4618      	mov	r0, r3
 80032d4:	f7ff ffb1 	bl	800323a <LL_ADC_REG_IsConversionOngoing>
 80032d8:	67b8      	str	r0, [r7, #120]	; 0x78
  if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	4618      	mov	r0, r3
 80032e0:	f7ff ffab 	bl	800323a <LL_ADC_REG_IsConversionOngoing>
 80032e4:	4603      	mov	r3, r0
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	f040 80a0 	bne.w	800342c <HAL_ADCEx_MultiModeConfigChannel+0x1cc>
      && (tmphadcSlave_conversion_on_going == 0UL))
 80032ec:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80032ee:	2b00      	cmp	r3, #0
 80032f0:	f040 809c 	bne.w	800342c <HAL_ADCEx_MultiModeConfigChannel+0x1cc>
  {
    /* Pointer to the common control register */
    tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	681b      	ldr	r3, [r3, #0]
 80032f8:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80032fc:	d004      	beq.n	8003308 <HAL_ADCEx_MultiModeConfigChannel+0xa8>
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	681b      	ldr	r3, [r3, #0]
 8003302:	4a55      	ldr	r2, [pc, #340]	; (8003458 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 8003304:	4293      	cmp	r3, r2
 8003306:	d101      	bne.n	800330c <HAL_ADCEx_MultiModeConfigChannel+0xac>
 8003308:	4b56      	ldr	r3, [pc, #344]	; (8003464 <HAL_ADCEx_MultiModeConfigChannel+0x204>)
 800330a:	e000      	b.n	800330e <HAL_ADCEx_MultiModeConfigChannel+0xae>
 800330c:	4b56      	ldr	r3, [pc, #344]	; (8003468 <HAL_ADCEx_MultiModeConfigChannel+0x208>)
 800330e:	677b      	str	r3, [r7, #116]	; 0x74

    /* If multimode is selected, configure all multimode parameters.          */
    /* Otherwise, reset multimode parameters (can be used in case of          */
    /* transition from multimode to independent mode).                        */
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003310:	683b      	ldr	r3, [r7, #0]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	2b00      	cmp	r3, #0
 8003316:	d04b      	beq.n	80033b0 <HAL_ADCEx_MultiModeConfigChannel+0x150>
    {
      MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG,
 8003318:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800331a:	689b      	ldr	r3, [r3, #8]
 800331c:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003320:	683b      	ldr	r3, [r7, #0]
 8003322:	6859      	ldr	r1, [r3, #4]
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800332a:	035b      	lsls	r3, r3, #13
 800332c:	430b      	orrs	r3, r1
 800332e:	431a      	orrs	r2, r3
 8003330:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003332:	609a      	str	r2, [r3, #8]
      /*      from 1 to 10 clock cycles for 10 bits,                              */
      /*      from 1 to 8 clock cycles for 8 bits                                 */
      /*      from 1 to 6 clock cycles for 6 bits                                 */
      /*    If a higher delay is selected, it will be clipped to maximum delay    */
      /*    range                                                                 */
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800333c:	d004      	beq.n	8003348 <HAL_ADCEx_MultiModeConfigChannel+0xe8>
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	4a45      	ldr	r2, [pc, #276]	; (8003458 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 8003344:	4293      	cmp	r3, r2
 8003346:	d10f      	bne.n	8003368 <HAL_ADCEx_MultiModeConfigChannel+0x108>
 8003348:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 800334c:	f7ff ff62 	bl	8003214 <LL_ADC_IsEnabled>
 8003350:	4604      	mov	r4, r0
 8003352:	4841      	ldr	r0, [pc, #260]	; (8003458 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 8003354:	f7ff ff5e 	bl	8003214 <LL_ADC_IsEnabled>
 8003358:	4603      	mov	r3, r0
 800335a:	4323      	orrs	r3, r4
 800335c:	2b00      	cmp	r3, #0
 800335e:	bf0c      	ite	eq
 8003360:	2301      	moveq	r3, #1
 8003362:	2300      	movne	r3, #0
 8003364:	b2db      	uxtb	r3, r3
 8003366:	e012      	b.n	800338e <HAL_ADCEx_MultiModeConfigChannel+0x12e>
 8003368:	483c      	ldr	r0, [pc, #240]	; (800345c <HAL_ADCEx_MultiModeConfigChannel+0x1fc>)
 800336a:	f7ff ff53 	bl	8003214 <LL_ADC_IsEnabled>
 800336e:	4604      	mov	r4, r0
 8003370:	483b      	ldr	r0, [pc, #236]	; (8003460 <HAL_ADCEx_MultiModeConfigChannel+0x200>)
 8003372:	f7ff ff4f 	bl	8003214 <LL_ADC_IsEnabled>
 8003376:	4603      	mov	r3, r0
 8003378:	431c      	orrs	r4, r3
 800337a:	483c      	ldr	r0, [pc, #240]	; (800346c <HAL_ADCEx_MultiModeConfigChannel+0x20c>)
 800337c:	f7ff ff4a 	bl	8003214 <LL_ADC_IsEnabled>
 8003380:	4603      	mov	r3, r0
 8003382:	4323      	orrs	r3, r4
 8003384:	2b00      	cmp	r3, #0
 8003386:	bf0c      	ite	eq
 8003388:	2301      	moveq	r3, #1
 800338a:	2300      	movne	r3, #0
 800338c:	b2db      	uxtb	r3, r3
 800338e:	2b00      	cmp	r3, #0
 8003390:	d056      	beq.n	8003440 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
      {
        MODIFY_REG(tmpADC_Common->CCR,
 8003392:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003394:	689b      	ldr	r3, [r3, #8]
 8003396:	f423 6371 	bic.w	r3, r3, #3856	; 0xf10
 800339a:	f023 030f 	bic.w	r3, r3, #15
 800339e:	683a      	ldr	r2, [r7, #0]
 80033a0:	6811      	ldr	r1, [r2, #0]
 80033a2:	683a      	ldr	r2, [r7, #0]
 80033a4:	6892      	ldr	r2, [r2, #8]
 80033a6:	430a      	orrs	r2, r1
 80033a8:	431a      	orrs	r2, r3
 80033aa:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80033ac:	609a      	str	r2, [r3, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 80033ae:	e047      	b.n	8003440 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
                  );
      }
    }
    else /* ADC_MODE_INDEPENDENT */
    {
      CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
 80033b0:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80033b2:	689b      	ldr	r3, [r3, #8]
 80033b4:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80033b8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80033ba:	609a      	str	r2, [r3, #8]

      /* Parameters that can be updated only when ADC is disabled:                */
      /*  - Multimode mode selection                                              */
      /*  - Multimode delay                                                       */
      if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 80033bc:	687b      	ldr	r3, [r7, #4]
 80033be:	681b      	ldr	r3, [r3, #0]
 80033c0:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80033c4:	d004      	beq.n	80033d0 <HAL_ADCEx_MultiModeConfigChannel+0x170>
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	4a23      	ldr	r2, [pc, #140]	; (8003458 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 80033cc:	4293      	cmp	r3, r2
 80033ce:	d10f      	bne.n	80033f0 <HAL_ADCEx_MultiModeConfigChannel+0x190>
 80033d0:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 80033d4:	f7ff ff1e 	bl	8003214 <LL_ADC_IsEnabled>
 80033d8:	4604      	mov	r4, r0
 80033da:	481f      	ldr	r0, [pc, #124]	; (8003458 <HAL_ADCEx_MultiModeConfigChannel+0x1f8>)
 80033dc:	f7ff ff1a 	bl	8003214 <LL_ADC_IsEnabled>
 80033e0:	4603      	mov	r3, r0
 80033e2:	4323      	orrs	r3, r4
 80033e4:	2b00      	cmp	r3, #0
 80033e6:	bf0c      	ite	eq
 80033e8:	2301      	moveq	r3, #1
 80033ea:	2300      	movne	r3, #0
 80033ec:	b2db      	uxtb	r3, r3
 80033ee:	e012      	b.n	8003416 <HAL_ADCEx_MultiModeConfigChannel+0x1b6>
 80033f0:	481a      	ldr	r0, [pc, #104]	; (800345c <HAL_ADCEx_MultiModeConfigChannel+0x1fc>)
 80033f2:	f7ff ff0f 	bl	8003214 <LL_ADC_IsEnabled>
 80033f6:	4604      	mov	r4, r0
 80033f8:	4819      	ldr	r0, [pc, #100]	; (8003460 <HAL_ADCEx_MultiModeConfigChannel+0x200>)
 80033fa:	f7ff ff0b 	bl	8003214 <LL_ADC_IsEnabled>
 80033fe:	4603      	mov	r3, r0
 8003400:	431c      	orrs	r4, r3
 8003402:	481a      	ldr	r0, [pc, #104]	; (800346c <HAL_ADCEx_MultiModeConfigChannel+0x20c>)
 8003404:	f7ff ff06 	bl	8003214 <LL_ADC_IsEnabled>
 8003408:	4603      	mov	r3, r0
 800340a:	4323      	orrs	r3, r4
 800340c:	2b00      	cmp	r3, #0
 800340e:	bf0c      	ite	eq
 8003410:	2301      	moveq	r3, #1
 8003412:	2300      	movne	r3, #0
 8003414:	b2db      	uxtb	r3, r3
 8003416:	2b00      	cmp	r3, #0
 8003418:	d012      	beq.n	8003440 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
      {
        CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
 800341a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800341c:	689b      	ldr	r3, [r3, #8]
 800341e:	f423 6371 	bic.w	r3, r3, #3856	; 0xf10
 8003422:	f023 030f 	bic.w	r3, r3, #15
 8003426:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 8003428:	6093      	str	r3, [r2, #8]
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 800342a:	e009      	b.n	8003440 <HAL_ADCEx_MultiModeConfigChannel+0x1e0>
  /* If one of the ADC sharing the same common group is enabled, no update    */
  /* could be done on neither of the multimode structure parameters.          */
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 800342c:	687b      	ldr	r3, [r7, #4]
 800342e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003430:	f043 0220 	orr.w	r2, r3, #32
 8003434:	687b      	ldr	r3, [r7, #4]
 8003436:	65da      	str	r2, [r3, #92]	; 0x5c

    tmp_hal_status = HAL_ERROR;
 8003438:	2301      	movs	r3, #1
 800343a:	f887 307f 	strb.w	r3, [r7, #127]	; 0x7f
 800343e:	e000      	b.n	8003442 <HAL_ADCEx_MultiModeConfigChannel+0x1e2>
    if (multimode->Mode != ADC_MODE_INDEPENDENT)
 8003440:	bf00      	nop
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	2200      	movs	r2, #0
 8003446:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58

  /* Return function status */
  return tmp_hal_status;
 800344a:	f897 307f 	ldrb.w	r3, [r7, #127]	; 0x7f
}
 800344e:	4618      	mov	r0, r3
 8003450:	3784      	adds	r7, #132	; 0x84
 8003452:	46bd      	mov	sp, r7
 8003454:	bd90      	pop	{r4, r7, pc}
 8003456:	bf00      	nop
 8003458:	50000100 	.word	0x50000100
 800345c:	50000400 	.word	0x50000400
 8003460:	50000500 	.word	0x50000500
 8003464:	50000300 	.word	0x50000300
 8003468:	50000700 	.word	0x50000700
 800346c:	50000600 	.word	0x50000600

08003470 <__NVIC_SetPriorityGrouping>:
 8003470:	b480      	push	{r7}
 8003472:	b085      	sub	sp, #20
 8003474:	af00      	add	r7, sp, #0
 8003476:	6078      	str	r0, [r7, #4]
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	f003 0307 	and.w	r3, r3, #7
 800347e:	60fb      	str	r3, [r7, #12]
 8003480:	4b0c      	ldr	r3, [pc, #48]	; (80034b4 <__NVIC_SetPriorityGrouping+0x44>)
 8003482:	68db      	ldr	r3, [r3, #12]
 8003484:	60bb      	str	r3, [r7, #8]
 8003486:	68ba      	ldr	r2, [r7, #8]
 8003488:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800348c:	4013      	ands	r3, r2
 800348e:	60bb      	str	r3, [r7, #8]
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	021a      	lsls	r2, r3, #8
 8003494:	68bb      	ldr	r3, [r7, #8]
 8003496:	4313      	orrs	r3, r2
 8003498:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800349c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80034a0:	60bb      	str	r3, [r7, #8]
 80034a2:	4a04      	ldr	r2, [pc, #16]	; (80034b4 <__NVIC_SetPriorityGrouping+0x44>)
 80034a4:	68bb      	ldr	r3, [r7, #8]
 80034a6:	60d3      	str	r3, [r2, #12]
 80034a8:	bf00      	nop
 80034aa:	3714      	adds	r7, #20
 80034ac:	46bd      	mov	sp, r7
 80034ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034b2:	4770      	bx	lr
 80034b4:	e000ed00 	.word	0xe000ed00

080034b8 <__NVIC_GetPriorityGrouping>:
 80034b8:	b480      	push	{r7}
 80034ba:	af00      	add	r7, sp, #0
 80034bc:	4b04      	ldr	r3, [pc, #16]	; (80034d0 <__NVIC_GetPriorityGrouping+0x18>)
 80034be:	68db      	ldr	r3, [r3, #12]
 80034c0:	0a1b      	lsrs	r3, r3, #8
 80034c2:	f003 0307 	and.w	r3, r3, #7
 80034c6:	4618      	mov	r0, r3
 80034c8:	46bd      	mov	sp, r7
 80034ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ce:	4770      	bx	lr
 80034d0:	e000ed00 	.word	0xe000ed00

080034d4 <__NVIC_EnableIRQ>:
 80034d4:	b480      	push	{r7}
 80034d6:	b083      	sub	sp, #12
 80034d8:	af00      	add	r7, sp, #0
 80034da:	4603      	mov	r3, r0
 80034dc:	71fb      	strb	r3, [r7, #7]
 80034de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	db0b      	blt.n	80034fe <__NVIC_EnableIRQ+0x2a>
 80034e6:	79fb      	ldrb	r3, [r7, #7]
 80034e8:	f003 021f 	and.w	r2, r3, #31
 80034ec:	4907      	ldr	r1, [pc, #28]	; (800350c <__NVIC_EnableIRQ+0x38>)
 80034ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80034f2:	095b      	lsrs	r3, r3, #5
 80034f4:	2001      	movs	r0, #1
 80034f6:	fa00 f202 	lsl.w	r2, r0, r2
 80034fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80034fe:	bf00      	nop
 8003500:	370c      	adds	r7, #12
 8003502:	46bd      	mov	sp, r7
 8003504:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003508:	4770      	bx	lr
 800350a:	bf00      	nop
 800350c:	e000e100 	.word	0xe000e100

08003510 <__NVIC_SetPriority>:
 8003510:	b480      	push	{r7}
 8003512:	b083      	sub	sp, #12
 8003514:	af00      	add	r7, sp, #0
 8003516:	4603      	mov	r3, r0
 8003518:	6039      	str	r1, [r7, #0]
 800351a:	71fb      	strb	r3, [r7, #7]
 800351c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003520:	2b00      	cmp	r3, #0
 8003522:	db0a      	blt.n	800353a <__NVIC_SetPriority+0x2a>
 8003524:	683b      	ldr	r3, [r7, #0]
 8003526:	b2da      	uxtb	r2, r3
 8003528:	490c      	ldr	r1, [pc, #48]	; (800355c <__NVIC_SetPriority+0x4c>)
 800352a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800352e:	0112      	lsls	r2, r2, #4
 8003530:	b2d2      	uxtb	r2, r2
 8003532:	440b      	add	r3, r1
 8003534:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8003538:	e00a      	b.n	8003550 <__NVIC_SetPriority+0x40>
 800353a:	683b      	ldr	r3, [r7, #0]
 800353c:	b2da      	uxtb	r2, r3
 800353e:	4908      	ldr	r1, [pc, #32]	; (8003560 <__NVIC_SetPriority+0x50>)
 8003540:	79fb      	ldrb	r3, [r7, #7]
 8003542:	f003 030f 	and.w	r3, r3, #15
 8003546:	3b04      	subs	r3, #4
 8003548:	0112      	lsls	r2, r2, #4
 800354a:	b2d2      	uxtb	r2, r2
 800354c:	440b      	add	r3, r1
 800354e:	761a      	strb	r2, [r3, #24]
 8003550:	bf00      	nop
 8003552:	370c      	adds	r7, #12
 8003554:	46bd      	mov	sp, r7
 8003556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800355a:	4770      	bx	lr
 800355c:	e000e100 	.word	0xe000e100
 8003560:	e000ed00 	.word	0xe000ed00

08003564 <NVIC_EncodePriority>:
 8003564:	b480      	push	{r7}
 8003566:	b089      	sub	sp, #36	; 0x24
 8003568:	af00      	add	r7, sp, #0
 800356a:	60f8      	str	r0, [r7, #12]
 800356c:	60b9      	str	r1, [r7, #8]
 800356e:	607a      	str	r2, [r7, #4]
 8003570:	68fb      	ldr	r3, [r7, #12]
 8003572:	f003 0307 	and.w	r3, r3, #7
 8003576:	61fb      	str	r3, [r7, #28]
 8003578:	69fb      	ldr	r3, [r7, #28]
 800357a:	f1c3 0307 	rsb	r3, r3, #7
 800357e:	2b04      	cmp	r3, #4
 8003580:	bf28      	it	cs
 8003582:	2304      	movcs	r3, #4
 8003584:	61bb      	str	r3, [r7, #24]
 8003586:	69fb      	ldr	r3, [r7, #28]
 8003588:	3304      	adds	r3, #4
 800358a:	2b06      	cmp	r3, #6
 800358c:	d902      	bls.n	8003594 <NVIC_EncodePriority+0x30>
 800358e:	69fb      	ldr	r3, [r7, #28]
 8003590:	3b03      	subs	r3, #3
 8003592:	e000      	b.n	8003596 <NVIC_EncodePriority+0x32>
 8003594:	2300      	movs	r3, #0
 8003596:	617b      	str	r3, [r7, #20]
 8003598:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800359c:	69bb      	ldr	r3, [r7, #24]
 800359e:	fa02 f303 	lsl.w	r3, r2, r3
 80035a2:	43da      	mvns	r2, r3
 80035a4:	68bb      	ldr	r3, [r7, #8]
 80035a6:	401a      	ands	r2, r3
 80035a8:	697b      	ldr	r3, [r7, #20]
 80035aa:	409a      	lsls	r2, r3
 80035ac:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80035b0:	697b      	ldr	r3, [r7, #20]
 80035b2:	fa01 f303 	lsl.w	r3, r1, r3
 80035b6:	43d9      	mvns	r1, r3
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	400b      	ands	r3, r1
 80035bc:	4313      	orrs	r3, r2
 80035be:	4618      	mov	r0, r3
 80035c0:	3724      	adds	r7, #36	; 0x24
 80035c2:	46bd      	mov	sp, r7
 80035c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035c8:	4770      	bx	lr
	...

080035cc <SysTick_Config>:
 80035cc:	b580      	push	{r7, lr}
 80035ce:	b082      	sub	sp, #8
 80035d0:	af00      	add	r7, sp, #0
 80035d2:	6078      	str	r0, [r7, #4]
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	3b01      	subs	r3, #1
 80035d8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80035dc:	d301      	bcc.n	80035e2 <SysTick_Config+0x16>
 80035de:	2301      	movs	r3, #1
 80035e0:	e00f      	b.n	8003602 <SysTick_Config+0x36>
 80035e2:	4a0a      	ldr	r2, [pc, #40]	; (800360c <SysTick_Config+0x40>)
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	3b01      	subs	r3, #1
 80035e8:	6053      	str	r3, [r2, #4]
 80035ea:	210f      	movs	r1, #15
 80035ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80035f0:	f7ff ff8e 	bl	8003510 <__NVIC_SetPriority>
 80035f4:	4b05      	ldr	r3, [pc, #20]	; (800360c <SysTick_Config+0x40>)
 80035f6:	2200      	movs	r2, #0
 80035f8:	609a      	str	r2, [r3, #8]
 80035fa:	4b04      	ldr	r3, [pc, #16]	; (800360c <SysTick_Config+0x40>)
 80035fc:	2207      	movs	r2, #7
 80035fe:	601a      	str	r2, [r3, #0]
 8003600:	2300      	movs	r3, #0
 8003602:	4618      	mov	r0, r3
 8003604:	3708      	adds	r7, #8
 8003606:	46bd      	mov	sp, r7
 8003608:	bd80      	pop	{r7, pc}
 800360a:	bf00      	nop
 800360c:	e000e010 	.word	0xe000e010

08003610 <HAL_NVIC_SetPriorityGrouping>:
 8003610:	b580      	push	{r7, lr}
 8003612:	b082      	sub	sp, #8
 8003614:	af00      	add	r7, sp, #0
 8003616:	6078      	str	r0, [r7, #4]
 8003618:	6878      	ldr	r0, [r7, #4]
 800361a:	f7ff ff29 	bl	8003470 <__NVIC_SetPriorityGrouping>
 800361e:	bf00      	nop
 8003620:	3708      	adds	r7, #8
 8003622:	46bd      	mov	sp, r7
 8003624:	bd80      	pop	{r7, pc}

08003626 <HAL_NVIC_SetPriority>:
 8003626:	b580      	push	{r7, lr}
 8003628:	b086      	sub	sp, #24
 800362a:	af00      	add	r7, sp, #0
 800362c:	4603      	mov	r3, r0
 800362e:	60b9      	str	r1, [r7, #8]
 8003630:	607a      	str	r2, [r7, #4]
 8003632:	73fb      	strb	r3, [r7, #15]
 8003634:	f7ff ff40 	bl	80034b8 <__NVIC_GetPriorityGrouping>
 8003638:	6178      	str	r0, [r7, #20]
 800363a:	687a      	ldr	r2, [r7, #4]
 800363c:	68b9      	ldr	r1, [r7, #8]
 800363e:	6978      	ldr	r0, [r7, #20]
 8003640:	f7ff ff90 	bl	8003564 <NVIC_EncodePriority>
 8003644:	4602      	mov	r2, r0
 8003646:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800364a:	4611      	mov	r1, r2
 800364c:	4618      	mov	r0, r3
 800364e:	f7ff ff5f 	bl	8003510 <__NVIC_SetPriority>
 8003652:	bf00      	nop
 8003654:	3718      	adds	r7, #24
 8003656:	46bd      	mov	sp, r7
 8003658:	bd80      	pop	{r7, pc}

0800365a <HAL_NVIC_EnableIRQ>:
 800365a:	b580      	push	{r7, lr}
 800365c:	b082      	sub	sp, #8
 800365e:	af00      	add	r7, sp, #0
 8003660:	4603      	mov	r3, r0
 8003662:	71fb      	strb	r3, [r7, #7]
 8003664:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003668:	4618      	mov	r0, r3
 800366a:	f7ff ff33 	bl	80034d4 <__NVIC_EnableIRQ>
 800366e:	bf00      	nop
 8003670:	3708      	adds	r7, #8
 8003672:	46bd      	mov	sp, r7
 8003674:	bd80      	pop	{r7, pc}

08003676 <HAL_SYSTICK_Config>:
 8003676:	b580      	push	{r7, lr}
 8003678:	b082      	sub	sp, #8
 800367a:	af00      	add	r7, sp, #0
 800367c:	6078      	str	r0, [r7, #4]
 800367e:	6878      	ldr	r0, [r7, #4]
 8003680:	f7ff ffa4 	bl	80035cc <SysTick_Config>
 8003684:	4603      	mov	r3, r0
 8003686:	4618      	mov	r0, r3
 8003688:	3708      	adds	r7, #8
 800368a:	46bd      	mov	sp, r7
 800368c:	bd80      	pop	{r7, pc}
	...

08003690 <HAL_DMA_Init>:
 8003690:	b580      	push	{r7, lr}
 8003692:	b084      	sub	sp, #16
 8003694:	af00      	add	r7, sp, #0
 8003696:	6078      	str	r0, [r7, #4]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	2b00      	cmp	r3, #0
 800369c:	d101      	bne.n	80036a2 <HAL_DMA_Init+0x12>
 800369e:	2301      	movs	r3, #1
 80036a0:	e08d      	b.n	80037be <HAL_DMA_Init+0x12e>
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	681b      	ldr	r3, [r3, #0]
 80036a6:	461a      	mov	r2, r3
 80036a8:	4b47      	ldr	r3, [pc, #284]	; (80037c8 <HAL_DMA_Init+0x138>)
 80036aa:	429a      	cmp	r2, r3
 80036ac:	d80f      	bhi.n	80036ce <HAL_DMA_Init+0x3e>
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	461a      	mov	r2, r3
 80036b4:	4b45      	ldr	r3, [pc, #276]	; (80037cc <HAL_DMA_Init+0x13c>)
 80036b6:	4413      	add	r3, r2
 80036b8:	4a45      	ldr	r2, [pc, #276]	; (80037d0 <HAL_DMA_Init+0x140>)
 80036ba:	fba2 2303 	umull	r2, r3, r2, r3
 80036be:	091b      	lsrs	r3, r3, #4
 80036c0:	009a      	lsls	r2, r3, #2
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	645a      	str	r2, [r3, #68]	; 0x44
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	4a42      	ldr	r2, [pc, #264]	; (80037d4 <HAL_DMA_Init+0x144>)
 80036ca:	641a      	str	r2, [r3, #64]	; 0x40
 80036cc:	e00e      	b.n	80036ec <HAL_DMA_Init+0x5c>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	461a      	mov	r2, r3
 80036d4:	4b40      	ldr	r3, [pc, #256]	; (80037d8 <HAL_DMA_Init+0x148>)
 80036d6:	4413      	add	r3, r2
 80036d8:	4a3d      	ldr	r2, [pc, #244]	; (80037d0 <HAL_DMA_Init+0x140>)
 80036da:	fba2 2303 	umull	r2, r3, r2, r3
 80036de:	091b      	lsrs	r3, r3, #4
 80036e0:	009a      	lsls	r2, r3, #2
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	645a      	str	r2, [r3, #68]	; 0x44
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	4a3c      	ldr	r2, [pc, #240]	; (80037dc <HAL_DMA_Init+0x14c>)
 80036ea:	641a      	str	r2, [r3, #64]	; 0x40
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	2202      	movs	r2, #2
 80036f0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	60fb      	str	r3, [r7, #12]
 80036fc:	68fb      	ldr	r3, [r7, #12]
 80036fe:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8003702:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003706:	60fb      	str	r3, [r7, #12]
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	689a      	ldr	r2, [r3, #8]
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	68db      	ldr	r3, [r3, #12]
 8003710:	431a      	orrs	r2, r3
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	691b      	ldr	r3, [r3, #16]
 8003716:	431a      	orrs	r2, r3
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	695b      	ldr	r3, [r3, #20]
 800371c:	431a      	orrs	r2, r3
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	699b      	ldr	r3, [r3, #24]
 8003722:	431a      	orrs	r2, r3
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	69db      	ldr	r3, [r3, #28]
 8003728:	431a      	orrs	r2, r3
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	6a1b      	ldr	r3, [r3, #32]
 800372e:	4313      	orrs	r3, r2
 8003730:	68fa      	ldr	r2, [r7, #12]
 8003732:	4313      	orrs	r3, r2
 8003734:	60fb      	str	r3, [r7, #12]
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	68fa      	ldr	r2, [r7, #12]
 800373c:	601a      	str	r2, [r3, #0]
 800373e:	6878      	ldr	r0, [r7, #4]
 8003740:	f000 fa76 	bl	8003c30 <DMA_CalcDMAMUXChannelBaseAndMask>
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	689b      	ldr	r3, [r3, #8]
 8003748:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800374c:	d102      	bne.n	8003754 <HAL_DMA_Init+0xc4>
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	2200      	movs	r2, #0
 8003752:	605a      	str	r2, [r3, #4]
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	685a      	ldr	r2, [r3, #4]
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800375c:	b2d2      	uxtb	r2, r2
 800375e:	601a      	str	r2, [r3, #0]
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003764:	687a      	ldr	r2, [r7, #4]
 8003766:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8003768:	605a      	str	r2, [r3, #4]
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	685b      	ldr	r3, [r3, #4]
 800376e:	2b00      	cmp	r3, #0
 8003770:	d010      	beq.n	8003794 <HAL_DMA_Init+0x104>
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	685b      	ldr	r3, [r3, #4]
 8003776:	2b04      	cmp	r3, #4
 8003778:	d80c      	bhi.n	8003794 <HAL_DMA_Init+0x104>
 800377a:	6878      	ldr	r0, [r7, #4]
 800377c:	f000 fa96 	bl	8003cac <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003784:	2200      	movs	r2, #0
 8003786:	601a      	str	r2, [r3, #0]
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800378c:	687a      	ldr	r2, [r7, #4]
 800378e:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8003790:	605a      	str	r2, [r3, #4]
 8003792:	e008      	b.n	80037a6 <HAL_DMA_Init+0x116>
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	2200      	movs	r2, #0
 8003798:	655a      	str	r2, [r3, #84]	; 0x54
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	2200      	movs	r2, #0
 800379e:	659a      	str	r2, [r3, #88]	; 0x58
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	2200      	movs	r2, #0
 80037a4:	65da      	str	r2, [r3, #92]	; 0x5c
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	2200      	movs	r2, #0
 80037aa:	63da      	str	r2, [r3, #60]	; 0x3c
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	2201      	movs	r2, #1
 80037b0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	2200      	movs	r2, #0
 80037b8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80037bc:	2300      	movs	r3, #0
 80037be:	4618      	mov	r0, r3
 80037c0:	3710      	adds	r7, #16
 80037c2:	46bd      	mov	sp, r7
 80037c4:	bd80      	pop	{r7, pc}
 80037c6:	bf00      	nop
 80037c8:	40020407 	.word	0x40020407
 80037cc:	bffdfff8 	.word	0xbffdfff8
 80037d0:	cccccccd 	.word	0xcccccccd
 80037d4:	40020000 	.word	0x40020000
 80037d8:	bffdfbf8 	.word	0xbffdfbf8
 80037dc:	40020400 	.word	0x40020400

080037e0 <HAL_DMA_Start_IT>:
 80037e0:	b580      	push	{r7, lr}
 80037e2:	b086      	sub	sp, #24
 80037e4:	af00      	add	r7, sp, #0
 80037e6:	60f8      	str	r0, [r7, #12]
 80037e8:	60b9      	str	r1, [r7, #8]
 80037ea:	607a      	str	r2, [r7, #4]
 80037ec:	603b      	str	r3, [r7, #0]
 80037ee:	2300      	movs	r3, #0
 80037f0:	75fb      	strb	r3, [r7, #23]
 80037f2:	68fb      	ldr	r3, [r7, #12]
 80037f4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80037f8:	2b01      	cmp	r3, #1
 80037fa:	d101      	bne.n	8003800 <HAL_DMA_Start_IT+0x20>
 80037fc:	2302      	movs	r3, #2
 80037fe:	e066      	b.n	80038ce <HAL_DMA_Start_IT+0xee>
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	2201      	movs	r2, #1
 8003804:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003808:	68fb      	ldr	r3, [r7, #12]
 800380a:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800380e:	b2db      	uxtb	r3, r3
 8003810:	2b01      	cmp	r3, #1
 8003812:	d155      	bne.n	80038c0 <HAL_DMA_Start_IT+0xe0>
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	2202      	movs	r2, #2
 8003818:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800381c:	68fb      	ldr	r3, [r7, #12]
 800381e:	2200      	movs	r2, #0
 8003820:	63da      	str	r2, [r3, #60]	; 0x3c
 8003822:	68fb      	ldr	r3, [r7, #12]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	681a      	ldr	r2, [r3, #0]
 8003828:	68fb      	ldr	r3, [r7, #12]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	f022 0201 	bic.w	r2, r2, #1
 8003830:	601a      	str	r2, [r3, #0]
 8003832:	683b      	ldr	r3, [r7, #0]
 8003834:	687a      	ldr	r2, [r7, #4]
 8003836:	68b9      	ldr	r1, [r7, #8]
 8003838:	68f8      	ldr	r0, [r7, #12]
 800383a:	f000 f9bb 	bl	8003bb4 <DMA_SetConfig>
 800383e:	68fb      	ldr	r3, [r7, #12]
 8003840:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003842:	2b00      	cmp	r3, #0
 8003844:	d008      	beq.n	8003858 <HAL_DMA_Start_IT+0x78>
 8003846:	68fb      	ldr	r3, [r7, #12]
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	681a      	ldr	r2, [r3, #0]
 800384c:	68fb      	ldr	r3, [r7, #12]
 800384e:	681b      	ldr	r3, [r3, #0]
 8003850:	f042 020e 	orr.w	r2, r2, #14
 8003854:	601a      	str	r2, [r3, #0]
 8003856:	e00f      	b.n	8003878 <HAL_DMA_Start_IT+0x98>
 8003858:	68fb      	ldr	r3, [r7, #12]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	681a      	ldr	r2, [r3, #0]
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	f022 0204 	bic.w	r2, r2, #4
 8003866:	601a      	str	r2, [r3, #0]
 8003868:	68fb      	ldr	r3, [r7, #12]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	681a      	ldr	r2, [r3, #0]
 800386e:	68fb      	ldr	r3, [r7, #12]
 8003870:	681b      	ldr	r3, [r3, #0]
 8003872:	f042 020a 	orr.w	r2, r2, #10
 8003876:	601a      	str	r2, [r3, #0]
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003882:	2b00      	cmp	r3, #0
 8003884:	d007      	beq.n	8003896 <HAL_DMA_Start_IT+0xb6>
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800388a:	681a      	ldr	r2, [r3, #0]
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003890:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003894:	601a      	str	r2, [r3, #0]
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800389a:	2b00      	cmp	r3, #0
 800389c:	d007      	beq.n	80038ae <HAL_DMA_Start_IT+0xce>
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80038a2:	681a      	ldr	r2, [r3, #0]
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80038a8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80038ac:	601a      	str	r2, [r3, #0]
 80038ae:	68fb      	ldr	r3, [r7, #12]
 80038b0:	681b      	ldr	r3, [r3, #0]
 80038b2:	681a      	ldr	r2, [r3, #0]
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	681b      	ldr	r3, [r3, #0]
 80038b8:	f042 0201 	orr.w	r2, r2, #1
 80038bc:	601a      	str	r2, [r3, #0]
 80038be:	e005      	b.n	80038cc <HAL_DMA_Start_IT+0xec>
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	2200      	movs	r2, #0
 80038c4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80038c8:	2302      	movs	r3, #2
 80038ca:	75fb      	strb	r3, [r7, #23]
 80038cc:	7dfb      	ldrb	r3, [r7, #23]
 80038ce:	4618      	mov	r0, r3
 80038d0:	3718      	adds	r7, #24
 80038d2:	46bd      	mov	sp, r7
 80038d4:	bd80      	pop	{r7, pc}

080038d6 <HAL_DMA_Abort>:
 80038d6:	b480      	push	{r7}
 80038d8:	b085      	sub	sp, #20
 80038da:	af00      	add	r7, sp, #0
 80038dc:	6078      	str	r0, [r7, #4]
 80038de:	2300      	movs	r3, #0
 80038e0:	73fb      	strb	r3, [r7, #15]
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80038e8:	b2db      	uxtb	r3, r3
 80038ea:	2b02      	cmp	r3, #2
 80038ec:	d005      	beq.n	80038fa <HAL_DMA_Abort+0x24>
 80038ee:	687b      	ldr	r3, [r7, #4]
 80038f0:	2204      	movs	r2, #4
 80038f2:	63da      	str	r2, [r3, #60]	; 0x3c
 80038f4:	2301      	movs	r3, #1
 80038f6:	73fb      	strb	r3, [r7, #15]
 80038f8:	e037      	b.n	800396a <HAL_DMA_Abort+0x94>
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	681a      	ldr	r2, [r3, #0]
 8003900:	687b      	ldr	r3, [r7, #4]
 8003902:	681b      	ldr	r3, [r3, #0]
 8003904:	f022 020e 	bic.w	r2, r2, #14
 8003908:	601a      	str	r2, [r3, #0]
 800390a:	687b      	ldr	r3, [r7, #4]
 800390c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800390e:	681a      	ldr	r2, [r3, #0]
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003914:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003918:	601a      	str	r2, [r3, #0]
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	681a      	ldr	r2, [r3, #0]
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	f022 0201 	bic.w	r2, r2, #1
 8003928:	601a      	str	r2, [r3, #0]
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800392e:	f003 021f 	and.w	r2, r3, #31
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003936:	2101      	movs	r1, #1
 8003938:	fa01 f202 	lsl.w	r2, r1, r2
 800393c:	605a      	str	r2, [r3, #4]
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003942:	687a      	ldr	r2, [r7, #4]
 8003944:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8003946:	605a      	str	r2, [r3, #4]
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800394c:	2b00      	cmp	r3, #0
 800394e:	d00c      	beq.n	800396a <HAL_DMA_Abort+0x94>
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003954:	681a      	ldr	r2, [r3, #0]
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800395a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800395e:	601a      	str	r2, [r3, #0]
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003964:	687a      	ldr	r2, [r7, #4]
 8003966:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8003968:	605a      	str	r2, [r3, #4]
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	2201      	movs	r2, #1
 800396e:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	2200      	movs	r2, #0
 8003976:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800397a:	7bfb      	ldrb	r3, [r7, #15]
 800397c:	4618      	mov	r0, r3
 800397e:	3714      	adds	r7, #20
 8003980:	46bd      	mov	sp, r7
 8003982:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003986:	4770      	bx	lr

08003988 <HAL_DMA_Abort_IT>:
 8003988:	b580      	push	{r7, lr}
 800398a:	b084      	sub	sp, #16
 800398c:	af00      	add	r7, sp, #0
 800398e:	6078      	str	r0, [r7, #4]
 8003990:	2300      	movs	r3, #0
 8003992:	73fb      	strb	r3, [r7, #15]
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 800399a:	b2db      	uxtb	r3, r3
 800399c:	2b02      	cmp	r3, #2
 800399e:	d00d      	beq.n	80039bc <HAL_DMA_Abort_IT+0x34>
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	2204      	movs	r2, #4
 80039a4:	63da      	str	r2, [r3, #60]	; 0x3c
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	2201      	movs	r2, #1
 80039aa:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80039ae:	687b      	ldr	r3, [r7, #4]
 80039b0:	2200      	movs	r2, #0
 80039b2:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80039b6:	2301      	movs	r3, #1
 80039b8:	73fb      	strb	r3, [r7, #15]
 80039ba:	e047      	b.n	8003a4c <HAL_DMA_Abort_IT+0xc4>
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	681b      	ldr	r3, [r3, #0]
 80039c0:	681a      	ldr	r2, [r3, #0]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	f022 020e 	bic.w	r2, r2, #14
 80039ca:	601a      	str	r2, [r3, #0]
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	681a      	ldr	r2, [r3, #0]
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	f022 0201 	bic.w	r2, r2, #1
 80039da:	601a      	str	r2, [r3, #0]
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80039e0:	681a      	ldr	r2, [r3, #0]
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80039e6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80039ea:	601a      	str	r2, [r3, #0]
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80039f0:	f003 021f 	and.w	r2, r3, #31
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039f8:	2101      	movs	r1, #1
 80039fa:	fa01 f202 	lsl.w	r2, r1, r2
 80039fe:	605a      	str	r2, [r3, #4]
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003a04:	687a      	ldr	r2, [r7, #4]
 8003a06:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8003a08:	605a      	str	r2, [r3, #4]
 8003a0a:	687b      	ldr	r3, [r7, #4]
 8003a0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d00c      	beq.n	8003a2c <HAL_DMA_Abort_IT+0xa4>
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003a16:	681a      	ldr	r2, [r3, #0]
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003a1c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003a20:	601a      	str	r2, [r3, #0]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003a26:	687a      	ldr	r2, [r7, #4]
 8003a28:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8003a2a:	605a      	str	r2, [r3, #4]
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	2201      	movs	r2, #1
 8003a30:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	2200      	movs	r2, #0
 8003a38:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	d003      	beq.n	8003a4c <HAL_DMA_Abort_IT+0xc4>
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003a48:	6878      	ldr	r0, [r7, #4]
 8003a4a:	4798      	blx	r3
 8003a4c:	7bfb      	ldrb	r3, [r7, #15]
 8003a4e:	4618      	mov	r0, r3
 8003a50:	3710      	adds	r7, #16
 8003a52:	46bd      	mov	sp, r7
 8003a54:	bd80      	pop	{r7, pc}

08003a56 <HAL_DMA_IRQHandler>:
 8003a56:	b580      	push	{r7, lr}
 8003a58:	b084      	sub	sp, #16
 8003a5a:	af00      	add	r7, sp, #0
 8003a5c:	6078      	str	r0, [r7, #4]
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a62:	681b      	ldr	r3, [r3, #0]
 8003a64:	60fb      	str	r3, [r7, #12]
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	681b      	ldr	r3, [r3, #0]
 8003a6c:	60bb      	str	r3, [r7, #8]
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a72:	f003 031f 	and.w	r3, r3, #31
 8003a76:	2204      	movs	r2, #4
 8003a78:	409a      	lsls	r2, r3
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	4013      	ands	r3, r2
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d026      	beq.n	8003ad0 <HAL_DMA_IRQHandler+0x7a>
 8003a82:	68bb      	ldr	r3, [r7, #8]
 8003a84:	f003 0304 	and.w	r3, r3, #4
 8003a88:	2b00      	cmp	r3, #0
 8003a8a:	d021      	beq.n	8003ad0 <HAL_DMA_IRQHandler+0x7a>
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	681b      	ldr	r3, [r3, #0]
 8003a90:	681b      	ldr	r3, [r3, #0]
 8003a92:	f003 0320 	and.w	r3, r3, #32
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d107      	bne.n	8003aaa <HAL_DMA_IRQHandler+0x54>
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	681a      	ldr	r2, [r3, #0]
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	f022 0204 	bic.w	r2, r2, #4
 8003aa8:	601a      	str	r2, [r3, #0]
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003aae:	f003 021f 	and.w	r2, r3, #31
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ab6:	2104      	movs	r1, #4
 8003ab8:	fa01 f202 	lsl.w	r2, r1, r2
 8003abc:	605a      	str	r2, [r3, #4]
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	d071      	beq.n	8003baa <HAL_DMA_IRQHandler+0x154>
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003aca:	6878      	ldr	r0, [r7, #4]
 8003acc:	4798      	blx	r3
 8003ace:	e06c      	b.n	8003baa <HAL_DMA_IRQHandler+0x154>
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003ad4:	f003 031f 	and.w	r3, r3, #31
 8003ad8:	2202      	movs	r2, #2
 8003ada:	409a      	lsls	r2, r3
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	4013      	ands	r3, r2
 8003ae0:	2b00      	cmp	r3, #0
 8003ae2:	d02e      	beq.n	8003b42 <HAL_DMA_IRQHandler+0xec>
 8003ae4:	68bb      	ldr	r3, [r7, #8]
 8003ae6:	f003 0302 	and.w	r3, r3, #2
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d029      	beq.n	8003b42 <HAL_DMA_IRQHandler+0xec>
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	f003 0320 	and.w	r3, r3, #32
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d10b      	bne.n	8003b14 <HAL_DMA_IRQHandler+0xbe>
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	681a      	ldr	r2, [r3, #0]
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	f022 020a 	bic.w	r2, r2, #10
 8003b0a:	601a      	str	r2, [r3, #0]
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	2201      	movs	r2, #1
 8003b10:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003b18:	f003 021f 	and.w	r2, r3, #31
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b20:	2102      	movs	r1, #2
 8003b22:	fa01 f202 	lsl.w	r2, r1, r2
 8003b26:	605a      	str	r2, [r3, #4]
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	2200      	movs	r2, #0
 8003b2c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	d038      	beq.n	8003baa <HAL_DMA_IRQHandler+0x154>
 8003b38:	687b      	ldr	r3, [r7, #4]
 8003b3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b3c:	6878      	ldr	r0, [r7, #4]
 8003b3e:	4798      	blx	r3
 8003b40:	e033      	b.n	8003baa <HAL_DMA_IRQHandler+0x154>
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003b46:	f003 031f 	and.w	r3, r3, #31
 8003b4a:	2208      	movs	r2, #8
 8003b4c:	409a      	lsls	r2, r3
 8003b4e:	68fb      	ldr	r3, [r7, #12]
 8003b50:	4013      	ands	r3, r2
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	d02a      	beq.n	8003bac <HAL_DMA_IRQHandler+0x156>
 8003b56:	68bb      	ldr	r3, [r7, #8]
 8003b58:	f003 0308 	and.w	r3, r3, #8
 8003b5c:	2b00      	cmp	r3, #0
 8003b5e:	d025      	beq.n	8003bac <HAL_DMA_IRQHandler+0x156>
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	681a      	ldr	r2, [r3, #0]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f022 020e 	bic.w	r2, r2, #14
 8003b6e:	601a      	str	r2, [r3, #0]
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003b74:	f003 021f 	and.w	r2, r3, #31
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b7c:	2101      	movs	r1, #1
 8003b7e:	fa01 f202 	lsl.w	r2, r1, r2
 8003b82:	605a      	str	r2, [r3, #4]
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	2201      	movs	r2, #1
 8003b88:	63da      	str	r2, [r3, #60]	; 0x3c
 8003b8a:	687b      	ldr	r3, [r7, #4]
 8003b8c:	2201      	movs	r2, #1
 8003b8e:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	2200      	movs	r2, #0
 8003b96:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003b9e:	2b00      	cmp	r3, #0
 8003ba0:	d004      	beq.n	8003bac <HAL_DMA_IRQHandler+0x156>
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003ba6:	6878      	ldr	r0, [r7, #4]
 8003ba8:	4798      	blx	r3
 8003baa:	bf00      	nop
 8003bac:	bf00      	nop
 8003bae:	3710      	adds	r7, #16
 8003bb0:	46bd      	mov	sp, r7
 8003bb2:	bd80      	pop	{r7, pc}

08003bb4 <DMA_SetConfig>:
 8003bb4:	b480      	push	{r7}
 8003bb6:	b085      	sub	sp, #20
 8003bb8:	af00      	add	r7, sp, #0
 8003bba:	60f8      	str	r0, [r7, #12]
 8003bbc:	60b9      	str	r1, [r7, #8]
 8003bbe:	607a      	str	r2, [r7, #4]
 8003bc0:	603b      	str	r3, [r7, #0]
 8003bc2:	68fb      	ldr	r3, [r7, #12]
 8003bc4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003bc6:	68fa      	ldr	r2, [r7, #12]
 8003bc8:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8003bca:	605a      	str	r2, [r3, #4]
 8003bcc:	68fb      	ldr	r3, [r7, #12]
 8003bce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003bd0:	2b00      	cmp	r3, #0
 8003bd2:	d004      	beq.n	8003bde <DMA_SetConfig+0x2a>
 8003bd4:	68fb      	ldr	r3, [r7, #12]
 8003bd6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003bd8:	68fa      	ldr	r2, [r7, #12]
 8003bda:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8003bdc:	605a      	str	r2, [r3, #4]
 8003bde:	68fb      	ldr	r3, [r7, #12]
 8003be0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003be2:	f003 021f 	and.w	r2, r3, #31
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bea:	2101      	movs	r1, #1
 8003bec:	fa01 f202 	lsl.w	r2, r1, r2
 8003bf0:	605a      	str	r2, [r3, #4]
 8003bf2:	68fb      	ldr	r3, [r7, #12]
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	683a      	ldr	r2, [r7, #0]
 8003bf8:	605a      	str	r2, [r3, #4]
 8003bfa:	68fb      	ldr	r3, [r7, #12]
 8003bfc:	689b      	ldr	r3, [r3, #8]
 8003bfe:	2b10      	cmp	r3, #16
 8003c00:	d108      	bne.n	8003c14 <DMA_SetConfig+0x60>
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	687a      	ldr	r2, [r7, #4]
 8003c08:	609a      	str	r2, [r3, #8]
 8003c0a:	68fb      	ldr	r3, [r7, #12]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	68ba      	ldr	r2, [r7, #8]
 8003c10:	60da      	str	r2, [r3, #12]
 8003c12:	e007      	b.n	8003c24 <DMA_SetConfig+0x70>
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	681b      	ldr	r3, [r3, #0]
 8003c18:	68ba      	ldr	r2, [r7, #8]
 8003c1a:	609a      	str	r2, [r3, #8]
 8003c1c:	68fb      	ldr	r3, [r7, #12]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	687a      	ldr	r2, [r7, #4]
 8003c22:	60da      	str	r2, [r3, #12]
 8003c24:	bf00      	nop
 8003c26:	3714      	adds	r7, #20
 8003c28:	46bd      	mov	sp, r7
 8003c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c2e:	4770      	bx	lr

08003c30 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8003c30:	b480      	push	{r7}
 8003c32:	b087      	sub	sp, #28
 8003c34:	af00      	add	r7, sp, #0
 8003c36:	6078      	str	r0, [r7, #4]
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	461a      	mov	r2, r3
 8003c3e:	4b16      	ldr	r3, [pc, #88]	; (8003c98 <DMA_CalcDMAMUXChannelBaseAndMask+0x68>)
 8003c40:	429a      	cmp	r2, r3
 8003c42:	d802      	bhi.n	8003c4a <DMA_CalcDMAMUXChannelBaseAndMask+0x1a>
 8003c44:	4b15      	ldr	r3, [pc, #84]	; (8003c9c <DMA_CalcDMAMUXChannelBaseAndMask+0x6c>)
 8003c46:	617b      	str	r3, [r7, #20]
 8003c48:	e001      	b.n	8003c4e <DMA_CalcDMAMUXChannelBaseAndMask+0x1e>
 8003c4a:	4b15      	ldr	r3, [pc, #84]	; (8003ca0 <DMA_CalcDMAMUXChannelBaseAndMask+0x70>)
 8003c4c:	617b      	str	r3, [r7, #20]
 8003c4e:	697b      	ldr	r3, [r7, #20]
 8003c50:	613b      	str	r3, [r7, #16]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	681b      	ldr	r3, [r3, #0]
 8003c56:	b2db      	uxtb	r3, r3
 8003c58:	3b08      	subs	r3, #8
 8003c5a:	4a12      	ldr	r2, [pc, #72]	; (8003ca4 <DMA_CalcDMAMUXChannelBaseAndMask+0x74>)
 8003c5c:	fba2 2303 	umull	r2, r3, r2, r3
 8003c60:	091b      	lsrs	r3, r3, #4
 8003c62:	60fb      	str	r3, [r7, #12]
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c68:	089b      	lsrs	r3, r3, #2
 8003c6a:	009a      	lsls	r2, r3, #2
 8003c6c:	693b      	ldr	r3, [r7, #16]
 8003c6e:	4413      	add	r3, r2
 8003c70:	461a      	mov	r2, r3
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	649a      	str	r2, [r3, #72]	; 0x48
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	4a0b      	ldr	r2, [pc, #44]	; (8003ca8 <DMA_CalcDMAMUXChannelBaseAndMask+0x78>)
 8003c7a:	64da      	str	r2, [r3, #76]	; 0x4c
 8003c7c:	68fb      	ldr	r3, [r7, #12]
 8003c7e:	f003 031f 	and.w	r3, r3, #31
 8003c82:	2201      	movs	r2, #1
 8003c84:	409a      	lsls	r2, r3
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	651a      	str	r2, [r3, #80]	; 0x50
 8003c8a:	bf00      	nop
 8003c8c:	371c      	adds	r7, #28
 8003c8e:	46bd      	mov	sp, r7
 8003c90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c94:	4770      	bx	lr
 8003c96:	bf00      	nop
 8003c98:	40020407 	.word	0x40020407
 8003c9c:	40020800 	.word	0x40020800
 8003ca0:	40020820 	.word	0x40020820
 8003ca4:	cccccccd 	.word	0xcccccccd
 8003ca8:	40020880 	.word	0x40020880

08003cac <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8003cac:	b480      	push	{r7}
 8003cae:	b085      	sub	sp, #20
 8003cb0:	af00      	add	r7, sp, #0
 8003cb2:	6078      	str	r0, [r7, #4]
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	685b      	ldr	r3, [r3, #4]
 8003cb8:	b2db      	uxtb	r3, r3
 8003cba:	60fb      	str	r3, [r7, #12]
 8003cbc:	68fa      	ldr	r2, [r7, #12]
 8003cbe:	4b0b      	ldr	r3, [pc, #44]	; (8003cec <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 8003cc0:	4413      	add	r3, r2
 8003cc2:	009b      	lsls	r3, r3, #2
 8003cc4:	461a      	mov	r2, r3
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	655a      	str	r2, [r3, #84]	; 0x54
 8003cca:	687b      	ldr	r3, [r7, #4]
 8003ccc:	4a08      	ldr	r2, [pc, #32]	; (8003cf0 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8003cce:	659a      	str	r2, [r3, #88]	; 0x58
 8003cd0:	68fb      	ldr	r3, [r7, #12]
 8003cd2:	3b01      	subs	r3, #1
 8003cd4:	f003 031f 	and.w	r3, r3, #31
 8003cd8:	2201      	movs	r2, #1
 8003cda:	409a      	lsls	r2, r3
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	65da      	str	r2, [r3, #92]	; 0x5c
 8003ce0:	bf00      	nop
 8003ce2:	3714      	adds	r7, #20
 8003ce4:	46bd      	mov	sp, r7
 8003ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cea:	4770      	bx	lr
 8003cec:	1000823f 	.word	0x1000823f
 8003cf0:	40020940 	.word	0x40020940

08003cf4 <HAL_GPIO_Init>:
 8003cf4:	b480      	push	{r7}
 8003cf6:	b087      	sub	sp, #28
 8003cf8:	af00      	add	r7, sp, #0
 8003cfa:	6078      	str	r0, [r7, #4]
 8003cfc:	6039      	str	r1, [r7, #0]
 8003cfe:	2300      	movs	r3, #0
 8003d00:	617b      	str	r3, [r7, #20]
 8003d02:	e15a      	b.n	8003fba <HAL_GPIO_Init+0x2c6>
 8003d04:	683b      	ldr	r3, [r7, #0]
 8003d06:	681a      	ldr	r2, [r3, #0]
 8003d08:	2101      	movs	r1, #1
 8003d0a:	697b      	ldr	r3, [r7, #20]
 8003d0c:	fa01 f303 	lsl.w	r3, r1, r3
 8003d10:	4013      	ands	r3, r2
 8003d12:	60fb      	str	r3, [r7, #12]
 8003d14:	68fb      	ldr	r3, [r7, #12]
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	f000 814c 	beq.w	8003fb4 <HAL_GPIO_Init+0x2c0>
 8003d1c:	683b      	ldr	r3, [r7, #0]
 8003d1e:	685b      	ldr	r3, [r3, #4]
 8003d20:	f003 0303 	and.w	r3, r3, #3
 8003d24:	2b01      	cmp	r3, #1
 8003d26:	d005      	beq.n	8003d34 <HAL_GPIO_Init+0x40>
 8003d28:	683b      	ldr	r3, [r7, #0]
 8003d2a:	685b      	ldr	r3, [r3, #4]
 8003d2c:	f003 0303 	and.w	r3, r3, #3
 8003d30:	2b02      	cmp	r3, #2
 8003d32:	d130      	bne.n	8003d96 <HAL_GPIO_Init+0xa2>
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	689b      	ldr	r3, [r3, #8]
 8003d38:	613b      	str	r3, [r7, #16]
 8003d3a:	697b      	ldr	r3, [r7, #20]
 8003d3c:	005b      	lsls	r3, r3, #1
 8003d3e:	2203      	movs	r2, #3
 8003d40:	fa02 f303 	lsl.w	r3, r2, r3
 8003d44:	43db      	mvns	r3, r3
 8003d46:	693a      	ldr	r2, [r7, #16]
 8003d48:	4013      	ands	r3, r2
 8003d4a:	613b      	str	r3, [r7, #16]
 8003d4c:	683b      	ldr	r3, [r7, #0]
 8003d4e:	68da      	ldr	r2, [r3, #12]
 8003d50:	697b      	ldr	r3, [r7, #20]
 8003d52:	005b      	lsls	r3, r3, #1
 8003d54:	fa02 f303 	lsl.w	r3, r2, r3
 8003d58:	693a      	ldr	r2, [r7, #16]
 8003d5a:	4313      	orrs	r3, r2
 8003d5c:	613b      	str	r3, [r7, #16]
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	693a      	ldr	r2, [r7, #16]
 8003d62:	609a      	str	r2, [r3, #8]
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	685b      	ldr	r3, [r3, #4]
 8003d68:	613b      	str	r3, [r7, #16]
 8003d6a:	2201      	movs	r2, #1
 8003d6c:	697b      	ldr	r3, [r7, #20]
 8003d6e:	fa02 f303 	lsl.w	r3, r2, r3
 8003d72:	43db      	mvns	r3, r3
 8003d74:	693a      	ldr	r2, [r7, #16]
 8003d76:	4013      	ands	r3, r2
 8003d78:	613b      	str	r3, [r7, #16]
 8003d7a:	683b      	ldr	r3, [r7, #0]
 8003d7c:	685b      	ldr	r3, [r3, #4]
 8003d7e:	091b      	lsrs	r3, r3, #4
 8003d80:	f003 0201 	and.w	r2, r3, #1
 8003d84:	697b      	ldr	r3, [r7, #20]
 8003d86:	fa02 f303 	lsl.w	r3, r2, r3
 8003d8a:	693a      	ldr	r2, [r7, #16]
 8003d8c:	4313      	orrs	r3, r2
 8003d8e:	613b      	str	r3, [r7, #16]
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	693a      	ldr	r2, [r7, #16]
 8003d94:	605a      	str	r2, [r3, #4]
 8003d96:	683b      	ldr	r3, [r7, #0]
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	f003 0303 	and.w	r3, r3, #3
 8003d9e:	2b03      	cmp	r3, #3
 8003da0:	d017      	beq.n	8003dd2 <HAL_GPIO_Init+0xde>
 8003da2:	687b      	ldr	r3, [r7, #4]
 8003da4:	68db      	ldr	r3, [r3, #12]
 8003da6:	613b      	str	r3, [r7, #16]
 8003da8:	697b      	ldr	r3, [r7, #20]
 8003daa:	005b      	lsls	r3, r3, #1
 8003dac:	2203      	movs	r2, #3
 8003dae:	fa02 f303 	lsl.w	r3, r2, r3
 8003db2:	43db      	mvns	r3, r3
 8003db4:	693a      	ldr	r2, [r7, #16]
 8003db6:	4013      	ands	r3, r2
 8003db8:	613b      	str	r3, [r7, #16]
 8003dba:	683b      	ldr	r3, [r7, #0]
 8003dbc:	689a      	ldr	r2, [r3, #8]
 8003dbe:	697b      	ldr	r3, [r7, #20]
 8003dc0:	005b      	lsls	r3, r3, #1
 8003dc2:	fa02 f303 	lsl.w	r3, r2, r3
 8003dc6:	693a      	ldr	r2, [r7, #16]
 8003dc8:	4313      	orrs	r3, r2
 8003dca:	613b      	str	r3, [r7, #16]
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	693a      	ldr	r2, [r7, #16]
 8003dd0:	60da      	str	r2, [r3, #12]
 8003dd2:	683b      	ldr	r3, [r7, #0]
 8003dd4:	685b      	ldr	r3, [r3, #4]
 8003dd6:	f003 0303 	and.w	r3, r3, #3
 8003dda:	2b02      	cmp	r3, #2
 8003ddc:	d123      	bne.n	8003e26 <HAL_GPIO_Init+0x132>
 8003dde:	697b      	ldr	r3, [r7, #20]
 8003de0:	08da      	lsrs	r2, r3, #3
 8003de2:	687b      	ldr	r3, [r7, #4]
 8003de4:	3208      	adds	r2, #8
 8003de6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003dea:	613b      	str	r3, [r7, #16]
 8003dec:	697b      	ldr	r3, [r7, #20]
 8003dee:	f003 0307 	and.w	r3, r3, #7
 8003df2:	009b      	lsls	r3, r3, #2
 8003df4:	220f      	movs	r2, #15
 8003df6:	fa02 f303 	lsl.w	r3, r2, r3
 8003dfa:	43db      	mvns	r3, r3
 8003dfc:	693a      	ldr	r2, [r7, #16]
 8003dfe:	4013      	ands	r3, r2
 8003e00:	613b      	str	r3, [r7, #16]
 8003e02:	683b      	ldr	r3, [r7, #0]
 8003e04:	691a      	ldr	r2, [r3, #16]
 8003e06:	697b      	ldr	r3, [r7, #20]
 8003e08:	f003 0307 	and.w	r3, r3, #7
 8003e0c:	009b      	lsls	r3, r3, #2
 8003e0e:	fa02 f303 	lsl.w	r3, r2, r3
 8003e12:	693a      	ldr	r2, [r7, #16]
 8003e14:	4313      	orrs	r3, r2
 8003e16:	613b      	str	r3, [r7, #16]
 8003e18:	697b      	ldr	r3, [r7, #20]
 8003e1a:	08da      	lsrs	r2, r3, #3
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	3208      	adds	r2, #8
 8003e20:	6939      	ldr	r1, [r7, #16]
 8003e22:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003e26:	687b      	ldr	r3, [r7, #4]
 8003e28:	681b      	ldr	r3, [r3, #0]
 8003e2a:	613b      	str	r3, [r7, #16]
 8003e2c:	697b      	ldr	r3, [r7, #20]
 8003e2e:	005b      	lsls	r3, r3, #1
 8003e30:	2203      	movs	r2, #3
 8003e32:	fa02 f303 	lsl.w	r3, r2, r3
 8003e36:	43db      	mvns	r3, r3
 8003e38:	693a      	ldr	r2, [r7, #16]
 8003e3a:	4013      	ands	r3, r2
 8003e3c:	613b      	str	r3, [r7, #16]
 8003e3e:	683b      	ldr	r3, [r7, #0]
 8003e40:	685b      	ldr	r3, [r3, #4]
 8003e42:	f003 0203 	and.w	r2, r3, #3
 8003e46:	697b      	ldr	r3, [r7, #20]
 8003e48:	005b      	lsls	r3, r3, #1
 8003e4a:	fa02 f303 	lsl.w	r3, r2, r3
 8003e4e:	693a      	ldr	r2, [r7, #16]
 8003e50:	4313      	orrs	r3, r2
 8003e52:	613b      	str	r3, [r7, #16]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	693a      	ldr	r2, [r7, #16]
 8003e58:	601a      	str	r2, [r3, #0]
 8003e5a:	683b      	ldr	r3, [r7, #0]
 8003e5c:	685b      	ldr	r3, [r3, #4]
 8003e5e:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003e62:	2b00      	cmp	r3, #0
 8003e64:	f000 80a6 	beq.w	8003fb4 <HAL_GPIO_Init+0x2c0>
 8003e68:	4b5b      	ldr	r3, [pc, #364]	; (8003fd8 <HAL_GPIO_Init+0x2e4>)
 8003e6a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003e6c:	4a5a      	ldr	r2, [pc, #360]	; (8003fd8 <HAL_GPIO_Init+0x2e4>)
 8003e6e:	f043 0301 	orr.w	r3, r3, #1
 8003e72:	6613      	str	r3, [r2, #96]	; 0x60
 8003e74:	4b58      	ldr	r3, [pc, #352]	; (8003fd8 <HAL_GPIO_Init+0x2e4>)
 8003e76:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003e78:	f003 0301 	and.w	r3, r3, #1
 8003e7c:	60bb      	str	r3, [r7, #8]
 8003e7e:	68bb      	ldr	r3, [r7, #8]
 8003e80:	4a56      	ldr	r2, [pc, #344]	; (8003fdc <HAL_GPIO_Init+0x2e8>)
 8003e82:	697b      	ldr	r3, [r7, #20]
 8003e84:	089b      	lsrs	r3, r3, #2
 8003e86:	3302      	adds	r3, #2
 8003e88:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003e8c:	613b      	str	r3, [r7, #16]
 8003e8e:	697b      	ldr	r3, [r7, #20]
 8003e90:	f003 0303 	and.w	r3, r3, #3
 8003e94:	009b      	lsls	r3, r3, #2
 8003e96:	220f      	movs	r2, #15
 8003e98:	fa02 f303 	lsl.w	r3, r2, r3
 8003e9c:	43db      	mvns	r3, r3
 8003e9e:	693a      	ldr	r2, [r7, #16]
 8003ea0:	4013      	ands	r3, r2
 8003ea2:	613b      	str	r3, [r7, #16]
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8003eaa:	d01f      	beq.n	8003eec <HAL_GPIO_Init+0x1f8>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	4a4c      	ldr	r2, [pc, #304]	; (8003fe0 <HAL_GPIO_Init+0x2ec>)
 8003eb0:	4293      	cmp	r3, r2
 8003eb2:	d019      	beq.n	8003ee8 <HAL_GPIO_Init+0x1f4>
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	4a4b      	ldr	r2, [pc, #300]	; (8003fe4 <HAL_GPIO_Init+0x2f0>)
 8003eb8:	4293      	cmp	r3, r2
 8003eba:	d013      	beq.n	8003ee4 <HAL_GPIO_Init+0x1f0>
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	4a4a      	ldr	r2, [pc, #296]	; (8003fe8 <HAL_GPIO_Init+0x2f4>)
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d00d      	beq.n	8003ee0 <HAL_GPIO_Init+0x1ec>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	4a49      	ldr	r2, [pc, #292]	; (8003fec <HAL_GPIO_Init+0x2f8>)
 8003ec8:	4293      	cmp	r3, r2
 8003eca:	d007      	beq.n	8003edc <HAL_GPIO_Init+0x1e8>
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	4a48      	ldr	r2, [pc, #288]	; (8003ff0 <HAL_GPIO_Init+0x2fc>)
 8003ed0:	4293      	cmp	r3, r2
 8003ed2:	d101      	bne.n	8003ed8 <HAL_GPIO_Init+0x1e4>
 8003ed4:	2305      	movs	r3, #5
 8003ed6:	e00a      	b.n	8003eee <HAL_GPIO_Init+0x1fa>
 8003ed8:	2306      	movs	r3, #6
 8003eda:	e008      	b.n	8003eee <HAL_GPIO_Init+0x1fa>
 8003edc:	2304      	movs	r3, #4
 8003ede:	e006      	b.n	8003eee <HAL_GPIO_Init+0x1fa>
 8003ee0:	2303      	movs	r3, #3
 8003ee2:	e004      	b.n	8003eee <HAL_GPIO_Init+0x1fa>
 8003ee4:	2302      	movs	r3, #2
 8003ee6:	e002      	b.n	8003eee <HAL_GPIO_Init+0x1fa>
 8003ee8:	2301      	movs	r3, #1
 8003eea:	e000      	b.n	8003eee <HAL_GPIO_Init+0x1fa>
 8003eec:	2300      	movs	r3, #0
 8003eee:	697a      	ldr	r2, [r7, #20]
 8003ef0:	f002 0203 	and.w	r2, r2, #3
 8003ef4:	0092      	lsls	r2, r2, #2
 8003ef6:	4093      	lsls	r3, r2
 8003ef8:	693a      	ldr	r2, [r7, #16]
 8003efa:	4313      	orrs	r3, r2
 8003efc:	613b      	str	r3, [r7, #16]
 8003efe:	4937      	ldr	r1, [pc, #220]	; (8003fdc <HAL_GPIO_Init+0x2e8>)
 8003f00:	697b      	ldr	r3, [r7, #20]
 8003f02:	089b      	lsrs	r3, r3, #2
 8003f04:	3302      	adds	r3, #2
 8003f06:	693a      	ldr	r2, [r7, #16]
 8003f08:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003f0c:	4b39      	ldr	r3, [pc, #228]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003f0e:	689b      	ldr	r3, [r3, #8]
 8003f10:	613b      	str	r3, [r7, #16]
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	43db      	mvns	r3, r3
 8003f16:	693a      	ldr	r2, [r7, #16]
 8003f18:	4013      	ands	r3, r2
 8003f1a:	613b      	str	r3, [r7, #16]
 8003f1c:	683b      	ldr	r3, [r7, #0]
 8003f1e:	685b      	ldr	r3, [r3, #4]
 8003f20:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003f24:	2b00      	cmp	r3, #0
 8003f26:	d003      	beq.n	8003f30 <HAL_GPIO_Init+0x23c>
 8003f28:	693a      	ldr	r2, [r7, #16]
 8003f2a:	68fb      	ldr	r3, [r7, #12]
 8003f2c:	4313      	orrs	r3, r2
 8003f2e:	613b      	str	r3, [r7, #16]
 8003f30:	4a30      	ldr	r2, [pc, #192]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003f32:	693b      	ldr	r3, [r7, #16]
 8003f34:	6093      	str	r3, [r2, #8]
 8003f36:	4b2f      	ldr	r3, [pc, #188]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003f38:	68db      	ldr	r3, [r3, #12]
 8003f3a:	613b      	str	r3, [r7, #16]
 8003f3c:	68fb      	ldr	r3, [r7, #12]
 8003f3e:	43db      	mvns	r3, r3
 8003f40:	693a      	ldr	r2, [r7, #16]
 8003f42:	4013      	ands	r3, r2
 8003f44:	613b      	str	r3, [r7, #16]
 8003f46:	683b      	ldr	r3, [r7, #0]
 8003f48:	685b      	ldr	r3, [r3, #4]
 8003f4a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003f4e:	2b00      	cmp	r3, #0
 8003f50:	d003      	beq.n	8003f5a <HAL_GPIO_Init+0x266>
 8003f52:	693a      	ldr	r2, [r7, #16]
 8003f54:	68fb      	ldr	r3, [r7, #12]
 8003f56:	4313      	orrs	r3, r2
 8003f58:	613b      	str	r3, [r7, #16]
 8003f5a:	4a26      	ldr	r2, [pc, #152]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003f5c:	693b      	ldr	r3, [r7, #16]
 8003f5e:	60d3      	str	r3, [r2, #12]
 8003f60:	4b24      	ldr	r3, [pc, #144]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003f62:	685b      	ldr	r3, [r3, #4]
 8003f64:	613b      	str	r3, [r7, #16]
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	43db      	mvns	r3, r3
 8003f6a:	693a      	ldr	r2, [r7, #16]
 8003f6c:	4013      	ands	r3, r2
 8003f6e:	613b      	str	r3, [r7, #16]
 8003f70:	683b      	ldr	r3, [r7, #0]
 8003f72:	685b      	ldr	r3, [r3, #4]
 8003f74:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	d003      	beq.n	8003f84 <HAL_GPIO_Init+0x290>
 8003f7c:	693a      	ldr	r2, [r7, #16]
 8003f7e:	68fb      	ldr	r3, [r7, #12]
 8003f80:	4313      	orrs	r3, r2
 8003f82:	613b      	str	r3, [r7, #16]
 8003f84:	4a1b      	ldr	r2, [pc, #108]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003f86:	693b      	ldr	r3, [r7, #16]
 8003f88:	6053      	str	r3, [r2, #4]
 8003f8a:	4b1a      	ldr	r3, [pc, #104]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	613b      	str	r3, [r7, #16]
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	43db      	mvns	r3, r3
 8003f94:	693a      	ldr	r2, [r7, #16]
 8003f96:	4013      	ands	r3, r2
 8003f98:	613b      	str	r3, [r7, #16]
 8003f9a:	683b      	ldr	r3, [r7, #0]
 8003f9c:	685b      	ldr	r3, [r3, #4]
 8003f9e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	d003      	beq.n	8003fae <HAL_GPIO_Init+0x2ba>
 8003fa6:	693a      	ldr	r2, [r7, #16]
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	4313      	orrs	r3, r2
 8003fac:	613b      	str	r3, [r7, #16]
 8003fae:	4a11      	ldr	r2, [pc, #68]	; (8003ff4 <HAL_GPIO_Init+0x300>)
 8003fb0:	693b      	ldr	r3, [r7, #16]
 8003fb2:	6013      	str	r3, [r2, #0]
 8003fb4:	697b      	ldr	r3, [r7, #20]
 8003fb6:	3301      	adds	r3, #1
 8003fb8:	617b      	str	r3, [r7, #20]
 8003fba:	683b      	ldr	r3, [r7, #0]
 8003fbc:	681a      	ldr	r2, [r3, #0]
 8003fbe:	697b      	ldr	r3, [r7, #20]
 8003fc0:	fa22 f303 	lsr.w	r3, r2, r3
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	f47f ae9d 	bne.w	8003d04 <HAL_GPIO_Init+0x10>
 8003fca:	bf00      	nop
 8003fcc:	bf00      	nop
 8003fce:	371c      	adds	r7, #28
 8003fd0:	46bd      	mov	sp, r7
 8003fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fd6:	4770      	bx	lr
 8003fd8:	40021000 	.word	0x40021000
 8003fdc:	40010000 	.word	0x40010000
 8003fe0:	48000400 	.word	0x48000400
 8003fe4:	48000800 	.word	0x48000800
 8003fe8:	48000c00 	.word	0x48000c00
 8003fec:	48001000 	.word	0x48001000
 8003ff0:	48001400 	.word	0x48001400
 8003ff4:	40010400 	.word	0x40010400

08003ff8 <HAL_GPIO_WritePin>:
 8003ff8:	b480      	push	{r7}
 8003ffa:	b083      	sub	sp, #12
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	6078      	str	r0, [r7, #4]
 8004000:	460b      	mov	r3, r1
 8004002:	807b      	strh	r3, [r7, #2]
 8004004:	4613      	mov	r3, r2
 8004006:	707b      	strb	r3, [r7, #1]
 8004008:	787b      	ldrb	r3, [r7, #1]
 800400a:	2b00      	cmp	r3, #0
 800400c:	d003      	beq.n	8004016 <HAL_GPIO_WritePin+0x1e>
 800400e:	887a      	ldrh	r2, [r7, #2]
 8004010:	687b      	ldr	r3, [r7, #4]
 8004012:	619a      	str	r2, [r3, #24]
 8004014:	e002      	b.n	800401c <HAL_GPIO_WritePin+0x24>
 8004016:	887a      	ldrh	r2, [r7, #2]
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	629a      	str	r2, [r3, #40]	; 0x28
 800401c:	bf00      	nop
 800401e:	370c      	adds	r7, #12
 8004020:	46bd      	mov	sp, r7
 8004022:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004026:	4770      	bx	lr

08004028 <HAL_GPIO_EXTI_IRQHandler>:
 8004028:	b580      	push	{r7, lr}
 800402a:	b082      	sub	sp, #8
 800402c:	af00      	add	r7, sp, #0
 800402e:	4603      	mov	r3, r0
 8004030:	80fb      	strh	r3, [r7, #6]
 8004032:	4b08      	ldr	r3, [pc, #32]	; (8004054 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004034:	695a      	ldr	r2, [r3, #20]
 8004036:	88fb      	ldrh	r3, [r7, #6]
 8004038:	4013      	ands	r3, r2
 800403a:	2b00      	cmp	r3, #0
 800403c:	d006      	beq.n	800404c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800403e:	4a05      	ldr	r2, [pc, #20]	; (8004054 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004040:	88fb      	ldrh	r3, [r7, #6]
 8004042:	6153      	str	r3, [r2, #20]
 8004044:	88fb      	ldrh	r3, [r7, #6]
 8004046:	4618      	mov	r0, r3
 8004048:	f000 f806 	bl	8004058 <HAL_GPIO_EXTI_Callback>
 800404c:	bf00      	nop
 800404e:	3708      	adds	r7, #8
 8004050:	46bd      	mov	sp, r7
 8004052:	bd80      	pop	{r7, pc}
 8004054:	40010400 	.word	0x40010400

08004058 <HAL_GPIO_EXTI_Callback>:
 8004058:	b480      	push	{r7}
 800405a:	b083      	sub	sp, #12
 800405c:	af00      	add	r7, sp, #0
 800405e:	4603      	mov	r3, r0
 8004060:	80fb      	strh	r3, [r7, #6]
 8004062:	bf00      	nop
 8004064:	370c      	adds	r7, #12
 8004066:	46bd      	mov	sp, r7
 8004068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800406c:	4770      	bx	lr
	...

08004070 <HAL_PWREx_ControlVoltageScaling>:
 8004070:	b480      	push	{r7}
 8004072:	b085      	sub	sp, #20
 8004074:	af00      	add	r7, sp, #0
 8004076:	6078      	str	r0, [r7, #4]
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d141      	bne.n	8004102 <HAL_PWREx_ControlVoltageScaling+0x92>
 800407e:	4b4b      	ldr	r3, [pc, #300]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004080:	681b      	ldr	r3, [r3, #0]
 8004082:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004086:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800408a:	d131      	bne.n	80040f0 <HAL_PWREx_ControlVoltageScaling+0x80>
 800408c:	4b47      	ldr	r3, [pc, #284]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800408e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004092:	4a46      	ldr	r2, [pc, #280]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004094:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004098:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 800409c:	4b43      	ldr	r3, [pc, #268]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80040a4:	4a41      	ldr	r2, [pc, #260]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80040a6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80040aa:	6013      	str	r3, [r2, #0]
 80040ac:	4b40      	ldr	r3, [pc, #256]	; (80041b0 <HAL_PWREx_ControlVoltageScaling+0x140>)
 80040ae:	681b      	ldr	r3, [r3, #0]
 80040b0:	2232      	movs	r2, #50	; 0x32
 80040b2:	fb02 f303 	mul.w	r3, r2, r3
 80040b6:	4a3f      	ldr	r2, [pc, #252]	; (80041b4 <HAL_PWREx_ControlVoltageScaling+0x144>)
 80040b8:	fba2 2303 	umull	r2, r3, r2, r3
 80040bc:	0c9b      	lsrs	r3, r3, #18
 80040be:	3301      	adds	r3, #1
 80040c0:	60fb      	str	r3, [r7, #12]
 80040c2:	e002      	b.n	80040ca <HAL_PWREx_ControlVoltageScaling+0x5a>
 80040c4:	68fb      	ldr	r3, [r7, #12]
 80040c6:	3b01      	subs	r3, #1
 80040c8:	60fb      	str	r3, [r7, #12]
 80040ca:	4b38      	ldr	r3, [pc, #224]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80040cc:	695b      	ldr	r3, [r3, #20]
 80040ce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80040d2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80040d6:	d102      	bne.n	80040de <HAL_PWREx_ControlVoltageScaling+0x6e>
 80040d8:	68fb      	ldr	r3, [r7, #12]
 80040da:	2b00      	cmp	r3, #0
 80040dc:	d1f2      	bne.n	80040c4 <HAL_PWREx_ControlVoltageScaling+0x54>
 80040de:	4b33      	ldr	r3, [pc, #204]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80040e0:	695b      	ldr	r3, [r3, #20]
 80040e2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80040e6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80040ea:	d158      	bne.n	800419e <HAL_PWREx_ControlVoltageScaling+0x12e>
 80040ec:	2303      	movs	r3, #3
 80040ee:	e057      	b.n	80041a0 <HAL_PWREx_ControlVoltageScaling+0x130>
 80040f0:	4b2e      	ldr	r3, [pc, #184]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80040f2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80040f6:	4a2d      	ldr	r2, [pc, #180]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 80040f8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80040fc:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8004100:	e04d      	b.n	800419e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004108:	d141      	bne.n	800418e <HAL_PWREx_ControlVoltageScaling+0x11e>
 800410a:	4b28      	ldr	r3, [pc, #160]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004112:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004116:	d131      	bne.n	800417c <HAL_PWREx_ControlVoltageScaling+0x10c>
 8004118:	4b24      	ldr	r3, [pc, #144]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800411a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800411e:	4a23      	ldr	r2, [pc, #140]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004120:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004124:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8004128:	4b20      	ldr	r3, [pc, #128]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800412a:	681b      	ldr	r3, [r3, #0]
 800412c:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004130:	4a1e      	ldr	r2, [pc, #120]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004132:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004136:	6013      	str	r3, [r2, #0]
 8004138:	4b1d      	ldr	r3, [pc, #116]	; (80041b0 <HAL_PWREx_ControlVoltageScaling+0x140>)
 800413a:	681b      	ldr	r3, [r3, #0]
 800413c:	2232      	movs	r2, #50	; 0x32
 800413e:	fb02 f303 	mul.w	r3, r2, r3
 8004142:	4a1c      	ldr	r2, [pc, #112]	; (80041b4 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8004144:	fba2 2303 	umull	r2, r3, r2, r3
 8004148:	0c9b      	lsrs	r3, r3, #18
 800414a:	3301      	adds	r3, #1
 800414c:	60fb      	str	r3, [r7, #12]
 800414e:	e002      	b.n	8004156 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8004150:	68fb      	ldr	r3, [r7, #12]
 8004152:	3b01      	subs	r3, #1
 8004154:	60fb      	str	r3, [r7, #12]
 8004156:	4b15      	ldr	r3, [pc, #84]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004158:	695b      	ldr	r3, [r3, #20]
 800415a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800415e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004162:	d102      	bne.n	800416a <HAL_PWREx_ControlVoltageScaling+0xfa>
 8004164:	68fb      	ldr	r3, [r7, #12]
 8004166:	2b00      	cmp	r3, #0
 8004168:	d1f2      	bne.n	8004150 <HAL_PWREx_ControlVoltageScaling+0xe0>
 800416a:	4b10      	ldr	r3, [pc, #64]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800416c:	695b      	ldr	r3, [r3, #20]
 800416e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004172:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004176:	d112      	bne.n	800419e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8004178:	2303      	movs	r3, #3
 800417a:	e011      	b.n	80041a0 <HAL_PWREx_ControlVoltageScaling+0x130>
 800417c:	4b0b      	ldr	r3, [pc, #44]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800417e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004182:	4a0a      	ldr	r2, [pc, #40]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004184:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004188:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 800418c:	e007      	b.n	800419e <HAL_PWREx_ControlVoltageScaling+0x12e>
 800418e:	4b07      	ldr	r3, [pc, #28]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004190:	681b      	ldr	r3, [r3, #0]
 8004192:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004196:	4a05      	ldr	r2, [pc, #20]	; (80041ac <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8004198:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800419c:	6013      	str	r3, [r2, #0]
 800419e:	2300      	movs	r3, #0
 80041a0:	4618      	mov	r0, r3
 80041a2:	3714      	adds	r7, #20
 80041a4:	46bd      	mov	sp, r7
 80041a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041aa:	4770      	bx	lr
 80041ac:	40007000 	.word	0x40007000
 80041b0:	200001c4 	.word	0x200001c4
 80041b4:	431bde83 	.word	0x431bde83

080041b8 <HAL_PWREx_DisableUCPDDeadBattery>:
 80041b8:	b480      	push	{r7}
 80041ba:	af00      	add	r7, sp, #0
 80041bc:	4b05      	ldr	r3, [pc, #20]	; (80041d4 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 80041be:	689b      	ldr	r3, [r3, #8]
 80041c0:	4a04      	ldr	r2, [pc, #16]	; (80041d4 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 80041c2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80041c6:	6093      	str	r3, [r2, #8]
 80041c8:	bf00      	nop
 80041ca:	46bd      	mov	sp, r7
 80041cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d0:	4770      	bx	lr
 80041d2:	bf00      	nop
 80041d4:	40007000 	.word	0x40007000

080041d8 <HAL_RCC_OscConfig>:
 80041d8:	b580      	push	{r7, lr}
 80041da:	b088      	sub	sp, #32
 80041dc:	af00      	add	r7, sp, #0
 80041de:	6078      	str	r0, [r7, #4]
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	2b00      	cmp	r3, #0
 80041e4:	d101      	bne.n	80041ea <HAL_RCC_OscConfig+0x12>
 80041e6:	2301      	movs	r3, #1
 80041e8:	e306      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	f003 0301 	and.w	r3, r3, #1
 80041f2:	2b00      	cmp	r3, #0
 80041f4:	d075      	beq.n	80042e2 <HAL_RCC_OscConfig+0x10a>
 80041f6:	4b97      	ldr	r3, [pc, #604]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80041f8:	689b      	ldr	r3, [r3, #8]
 80041fa:	f003 030c 	and.w	r3, r3, #12
 80041fe:	61bb      	str	r3, [r7, #24]
 8004200:	4b94      	ldr	r3, [pc, #592]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004202:	68db      	ldr	r3, [r3, #12]
 8004204:	f003 0303 	and.w	r3, r3, #3
 8004208:	617b      	str	r3, [r7, #20]
 800420a:	69bb      	ldr	r3, [r7, #24]
 800420c:	2b0c      	cmp	r3, #12
 800420e:	d102      	bne.n	8004216 <HAL_RCC_OscConfig+0x3e>
 8004210:	697b      	ldr	r3, [r7, #20]
 8004212:	2b03      	cmp	r3, #3
 8004214:	d002      	beq.n	800421c <HAL_RCC_OscConfig+0x44>
 8004216:	69bb      	ldr	r3, [r7, #24]
 8004218:	2b08      	cmp	r3, #8
 800421a:	d10b      	bne.n	8004234 <HAL_RCC_OscConfig+0x5c>
 800421c:	4b8d      	ldr	r3, [pc, #564]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004224:	2b00      	cmp	r3, #0
 8004226:	d05b      	beq.n	80042e0 <HAL_RCC_OscConfig+0x108>
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	685b      	ldr	r3, [r3, #4]
 800422c:	2b00      	cmp	r3, #0
 800422e:	d157      	bne.n	80042e0 <HAL_RCC_OscConfig+0x108>
 8004230:	2301      	movs	r3, #1
 8004232:	e2e1      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	685b      	ldr	r3, [r3, #4]
 8004238:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800423c:	d106      	bne.n	800424c <HAL_RCC_OscConfig+0x74>
 800423e:	4b85      	ldr	r3, [pc, #532]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004240:	681b      	ldr	r3, [r3, #0]
 8004242:	4a84      	ldr	r2, [pc, #528]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004244:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004248:	6013      	str	r3, [r2, #0]
 800424a:	e01d      	b.n	8004288 <HAL_RCC_OscConfig+0xb0>
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	685b      	ldr	r3, [r3, #4]
 8004250:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004254:	d10c      	bne.n	8004270 <HAL_RCC_OscConfig+0x98>
 8004256:	4b7f      	ldr	r3, [pc, #508]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	4a7e      	ldr	r2, [pc, #504]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800425c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004260:	6013      	str	r3, [r2, #0]
 8004262:	4b7c      	ldr	r3, [pc, #496]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004264:	681b      	ldr	r3, [r3, #0]
 8004266:	4a7b      	ldr	r2, [pc, #492]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004268:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800426c:	6013      	str	r3, [r2, #0]
 800426e:	e00b      	b.n	8004288 <HAL_RCC_OscConfig+0xb0>
 8004270:	4b78      	ldr	r3, [pc, #480]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	4a77      	ldr	r2, [pc, #476]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004276:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800427a:	6013      	str	r3, [r2, #0]
 800427c:	4b75      	ldr	r3, [pc, #468]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	4a74      	ldr	r2, [pc, #464]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004282:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004286:	6013      	str	r3, [r2, #0]
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	685b      	ldr	r3, [r3, #4]
 800428c:	2b00      	cmp	r3, #0
 800428e:	d013      	beq.n	80042b8 <HAL_RCC_OscConfig+0xe0>
 8004290:	f7fd fd90 	bl	8001db4 <HAL_GetTick>
 8004294:	6138      	str	r0, [r7, #16]
 8004296:	e008      	b.n	80042aa <HAL_RCC_OscConfig+0xd2>
 8004298:	f7fd fd8c 	bl	8001db4 <HAL_GetTick>
 800429c:	4602      	mov	r2, r0
 800429e:	693b      	ldr	r3, [r7, #16]
 80042a0:	1ad3      	subs	r3, r2, r3
 80042a2:	2b64      	cmp	r3, #100	; 0x64
 80042a4:	d901      	bls.n	80042aa <HAL_RCC_OscConfig+0xd2>
 80042a6:	2303      	movs	r3, #3
 80042a8:	e2a6      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 80042aa:	4b6a      	ldr	r3, [pc, #424]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80042b2:	2b00      	cmp	r3, #0
 80042b4:	d0f0      	beq.n	8004298 <HAL_RCC_OscConfig+0xc0>
 80042b6:	e014      	b.n	80042e2 <HAL_RCC_OscConfig+0x10a>
 80042b8:	f7fd fd7c 	bl	8001db4 <HAL_GetTick>
 80042bc:	6138      	str	r0, [r7, #16]
 80042be:	e008      	b.n	80042d2 <HAL_RCC_OscConfig+0xfa>
 80042c0:	f7fd fd78 	bl	8001db4 <HAL_GetTick>
 80042c4:	4602      	mov	r2, r0
 80042c6:	693b      	ldr	r3, [r7, #16]
 80042c8:	1ad3      	subs	r3, r2, r3
 80042ca:	2b64      	cmp	r3, #100	; 0x64
 80042cc:	d901      	bls.n	80042d2 <HAL_RCC_OscConfig+0xfa>
 80042ce:	2303      	movs	r3, #3
 80042d0:	e292      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 80042d2:	4b60      	ldr	r3, [pc, #384]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80042d4:	681b      	ldr	r3, [r3, #0]
 80042d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d1f0      	bne.n	80042c0 <HAL_RCC_OscConfig+0xe8>
 80042de:	e000      	b.n	80042e2 <HAL_RCC_OscConfig+0x10a>
 80042e0:	bf00      	nop
 80042e2:	687b      	ldr	r3, [r7, #4]
 80042e4:	681b      	ldr	r3, [r3, #0]
 80042e6:	f003 0302 	and.w	r3, r3, #2
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	d075      	beq.n	80043da <HAL_RCC_OscConfig+0x202>
 80042ee:	4b59      	ldr	r3, [pc, #356]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80042f0:	689b      	ldr	r3, [r3, #8]
 80042f2:	f003 030c 	and.w	r3, r3, #12
 80042f6:	61bb      	str	r3, [r7, #24]
 80042f8:	4b56      	ldr	r3, [pc, #344]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80042fa:	68db      	ldr	r3, [r3, #12]
 80042fc:	f003 0303 	and.w	r3, r3, #3
 8004300:	617b      	str	r3, [r7, #20]
 8004302:	69bb      	ldr	r3, [r7, #24]
 8004304:	2b0c      	cmp	r3, #12
 8004306:	d102      	bne.n	800430e <HAL_RCC_OscConfig+0x136>
 8004308:	697b      	ldr	r3, [r7, #20]
 800430a:	2b02      	cmp	r3, #2
 800430c:	d002      	beq.n	8004314 <HAL_RCC_OscConfig+0x13c>
 800430e:	69bb      	ldr	r3, [r7, #24]
 8004310:	2b04      	cmp	r3, #4
 8004312:	d11f      	bne.n	8004354 <HAL_RCC_OscConfig+0x17c>
 8004314:	4b4f      	ldr	r3, [pc, #316]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800431c:	2b00      	cmp	r3, #0
 800431e:	d005      	beq.n	800432c <HAL_RCC_OscConfig+0x154>
 8004320:	687b      	ldr	r3, [r7, #4]
 8004322:	68db      	ldr	r3, [r3, #12]
 8004324:	2b00      	cmp	r3, #0
 8004326:	d101      	bne.n	800432c <HAL_RCC_OscConfig+0x154>
 8004328:	2301      	movs	r3, #1
 800432a:	e265      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 800432c:	4b49      	ldr	r3, [pc, #292]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800432e:	685b      	ldr	r3, [r3, #4]
 8004330:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	691b      	ldr	r3, [r3, #16]
 8004338:	061b      	lsls	r3, r3, #24
 800433a:	4946      	ldr	r1, [pc, #280]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800433c:	4313      	orrs	r3, r2
 800433e:	604b      	str	r3, [r1, #4]
 8004340:	4b45      	ldr	r3, [pc, #276]	; (8004458 <HAL_RCC_OscConfig+0x280>)
 8004342:	681b      	ldr	r3, [r3, #0]
 8004344:	4618      	mov	r0, r3
 8004346:	f7fd fce9 	bl	8001d1c <HAL_InitTick>
 800434a:	4603      	mov	r3, r0
 800434c:	2b00      	cmp	r3, #0
 800434e:	d043      	beq.n	80043d8 <HAL_RCC_OscConfig+0x200>
 8004350:	2301      	movs	r3, #1
 8004352:	e251      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	68db      	ldr	r3, [r3, #12]
 8004358:	2b00      	cmp	r3, #0
 800435a:	d023      	beq.n	80043a4 <HAL_RCC_OscConfig+0x1cc>
 800435c:	4b3d      	ldr	r3, [pc, #244]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800435e:	681b      	ldr	r3, [r3, #0]
 8004360:	4a3c      	ldr	r2, [pc, #240]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004362:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004366:	6013      	str	r3, [r2, #0]
 8004368:	f7fd fd24 	bl	8001db4 <HAL_GetTick>
 800436c:	6138      	str	r0, [r7, #16]
 800436e:	e008      	b.n	8004382 <HAL_RCC_OscConfig+0x1aa>
 8004370:	f7fd fd20 	bl	8001db4 <HAL_GetTick>
 8004374:	4602      	mov	r2, r0
 8004376:	693b      	ldr	r3, [r7, #16]
 8004378:	1ad3      	subs	r3, r2, r3
 800437a:	2b02      	cmp	r3, #2
 800437c:	d901      	bls.n	8004382 <HAL_RCC_OscConfig+0x1aa>
 800437e:	2303      	movs	r3, #3
 8004380:	e23a      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004382:	4b34      	ldr	r3, [pc, #208]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004384:	681b      	ldr	r3, [r3, #0]
 8004386:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800438a:	2b00      	cmp	r3, #0
 800438c:	d0f0      	beq.n	8004370 <HAL_RCC_OscConfig+0x198>
 800438e:	4b31      	ldr	r3, [pc, #196]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004390:	685b      	ldr	r3, [r3, #4]
 8004392:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	691b      	ldr	r3, [r3, #16]
 800439a:	061b      	lsls	r3, r3, #24
 800439c:	492d      	ldr	r1, [pc, #180]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800439e:	4313      	orrs	r3, r2
 80043a0:	604b      	str	r3, [r1, #4]
 80043a2:	e01a      	b.n	80043da <HAL_RCC_OscConfig+0x202>
 80043a4:	4b2b      	ldr	r3, [pc, #172]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	4a2a      	ldr	r2, [pc, #168]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80043aa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80043ae:	6013      	str	r3, [r2, #0]
 80043b0:	f7fd fd00 	bl	8001db4 <HAL_GetTick>
 80043b4:	6138      	str	r0, [r7, #16]
 80043b6:	e008      	b.n	80043ca <HAL_RCC_OscConfig+0x1f2>
 80043b8:	f7fd fcfc 	bl	8001db4 <HAL_GetTick>
 80043bc:	4602      	mov	r2, r0
 80043be:	693b      	ldr	r3, [r7, #16]
 80043c0:	1ad3      	subs	r3, r2, r3
 80043c2:	2b02      	cmp	r3, #2
 80043c4:	d901      	bls.n	80043ca <HAL_RCC_OscConfig+0x1f2>
 80043c6:	2303      	movs	r3, #3
 80043c8:	e216      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 80043ca:	4b22      	ldr	r3, [pc, #136]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	d1f0      	bne.n	80043b8 <HAL_RCC_OscConfig+0x1e0>
 80043d6:	e000      	b.n	80043da <HAL_RCC_OscConfig+0x202>
 80043d8:	bf00      	nop
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	f003 0308 	and.w	r3, r3, #8
 80043e2:	2b00      	cmp	r3, #0
 80043e4:	d041      	beq.n	800446a <HAL_RCC_OscConfig+0x292>
 80043e6:	687b      	ldr	r3, [r7, #4]
 80043e8:	695b      	ldr	r3, [r3, #20]
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	d01c      	beq.n	8004428 <HAL_RCC_OscConfig+0x250>
 80043ee:	4b19      	ldr	r3, [pc, #100]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80043f0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80043f4:	4a17      	ldr	r2, [pc, #92]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 80043f6:	f043 0301 	orr.w	r3, r3, #1
 80043fa:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 80043fe:	f7fd fcd9 	bl	8001db4 <HAL_GetTick>
 8004402:	6138      	str	r0, [r7, #16]
 8004404:	e008      	b.n	8004418 <HAL_RCC_OscConfig+0x240>
 8004406:	f7fd fcd5 	bl	8001db4 <HAL_GetTick>
 800440a:	4602      	mov	r2, r0
 800440c:	693b      	ldr	r3, [r7, #16]
 800440e:	1ad3      	subs	r3, r2, r3
 8004410:	2b02      	cmp	r3, #2
 8004412:	d901      	bls.n	8004418 <HAL_RCC_OscConfig+0x240>
 8004414:	2303      	movs	r3, #3
 8004416:	e1ef      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004418:	4b0e      	ldr	r3, [pc, #56]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800441a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800441e:	f003 0302 	and.w	r3, r3, #2
 8004422:	2b00      	cmp	r3, #0
 8004424:	d0ef      	beq.n	8004406 <HAL_RCC_OscConfig+0x22e>
 8004426:	e020      	b.n	800446a <HAL_RCC_OscConfig+0x292>
 8004428:	4b0a      	ldr	r3, [pc, #40]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 800442a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800442e:	4a09      	ldr	r2, [pc, #36]	; (8004454 <HAL_RCC_OscConfig+0x27c>)
 8004430:	f023 0301 	bic.w	r3, r3, #1
 8004434:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8004438:	f7fd fcbc 	bl	8001db4 <HAL_GetTick>
 800443c:	6138      	str	r0, [r7, #16]
 800443e:	e00d      	b.n	800445c <HAL_RCC_OscConfig+0x284>
 8004440:	f7fd fcb8 	bl	8001db4 <HAL_GetTick>
 8004444:	4602      	mov	r2, r0
 8004446:	693b      	ldr	r3, [r7, #16]
 8004448:	1ad3      	subs	r3, r2, r3
 800444a:	2b02      	cmp	r3, #2
 800444c:	d906      	bls.n	800445c <HAL_RCC_OscConfig+0x284>
 800444e:	2303      	movs	r3, #3
 8004450:	e1d2      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004452:	bf00      	nop
 8004454:	40021000 	.word	0x40021000
 8004458:	200001c8 	.word	0x200001c8
 800445c:	4b8c      	ldr	r3, [pc, #560]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 800445e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004462:	f003 0302 	and.w	r3, r3, #2
 8004466:	2b00      	cmp	r3, #0
 8004468:	d1ea      	bne.n	8004440 <HAL_RCC_OscConfig+0x268>
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	681b      	ldr	r3, [r3, #0]
 800446e:	f003 0304 	and.w	r3, r3, #4
 8004472:	2b00      	cmp	r3, #0
 8004474:	f000 80a6 	beq.w	80045c4 <HAL_RCC_OscConfig+0x3ec>
 8004478:	2300      	movs	r3, #0
 800447a:	77fb      	strb	r3, [r7, #31]
 800447c:	4b84      	ldr	r3, [pc, #528]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 800447e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004480:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004484:	2b00      	cmp	r3, #0
 8004486:	d101      	bne.n	800448c <HAL_RCC_OscConfig+0x2b4>
 8004488:	2301      	movs	r3, #1
 800448a:	e000      	b.n	800448e <HAL_RCC_OscConfig+0x2b6>
 800448c:	2300      	movs	r3, #0
 800448e:	2b00      	cmp	r3, #0
 8004490:	d00d      	beq.n	80044ae <HAL_RCC_OscConfig+0x2d6>
 8004492:	4b7f      	ldr	r3, [pc, #508]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004494:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004496:	4a7e      	ldr	r2, [pc, #504]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004498:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800449c:	6593      	str	r3, [r2, #88]	; 0x58
 800449e:	4b7c      	ldr	r3, [pc, #496]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80044a0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80044a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80044a6:	60fb      	str	r3, [r7, #12]
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	2301      	movs	r3, #1
 80044ac:	77fb      	strb	r3, [r7, #31]
 80044ae:	4b79      	ldr	r3, [pc, #484]	; (8004694 <HAL_RCC_OscConfig+0x4bc>)
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044b6:	2b00      	cmp	r3, #0
 80044b8:	d118      	bne.n	80044ec <HAL_RCC_OscConfig+0x314>
 80044ba:	4b76      	ldr	r3, [pc, #472]	; (8004694 <HAL_RCC_OscConfig+0x4bc>)
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	4a75      	ldr	r2, [pc, #468]	; (8004694 <HAL_RCC_OscConfig+0x4bc>)
 80044c0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80044c4:	6013      	str	r3, [r2, #0]
 80044c6:	f7fd fc75 	bl	8001db4 <HAL_GetTick>
 80044ca:	6138      	str	r0, [r7, #16]
 80044cc:	e008      	b.n	80044e0 <HAL_RCC_OscConfig+0x308>
 80044ce:	f7fd fc71 	bl	8001db4 <HAL_GetTick>
 80044d2:	4602      	mov	r2, r0
 80044d4:	693b      	ldr	r3, [r7, #16]
 80044d6:	1ad3      	subs	r3, r2, r3
 80044d8:	2b02      	cmp	r3, #2
 80044da:	d901      	bls.n	80044e0 <HAL_RCC_OscConfig+0x308>
 80044dc:	2303      	movs	r3, #3
 80044de:	e18b      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 80044e0:	4b6c      	ldr	r3, [pc, #432]	; (8004694 <HAL_RCC_OscConfig+0x4bc>)
 80044e2:	681b      	ldr	r3, [r3, #0]
 80044e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044e8:	2b00      	cmp	r3, #0
 80044ea:	d0f0      	beq.n	80044ce <HAL_RCC_OscConfig+0x2f6>
 80044ec:	687b      	ldr	r3, [r7, #4]
 80044ee:	689b      	ldr	r3, [r3, #8]
 80044f0:	2b01      	cmp	r3, #1
 80044f2:	d108      	bne.n	8004506 <HAL_RCC_OscConfig+0x32e>
 80044f4:	4b66      	ldr	r3, [pc, #408]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80044f6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80044fa:	4a65      	ldr	r2, [pc, #404]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80044fc:	f043 0301 	orr.w	r3, r3, #1
 8004500:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004504:	e024      	b.n	8004550 <HAL_RCC_OscConfig+0x378>
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	689b      	ldr	r3, [r3, #8]
 800450a:	2b05      	cmp	r3, #5
 800450c:	d110      	bne.n	8004530 <HAL_RCC_OscConfig+0x358>
 800450e:	4b60      	ldr	r3, [pc, #384]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004510:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004514:	4a5e      	ldr	r2, [pc, #376]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004516:	f043 0304 	orr.w	r3, r3, #4
 800451a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800451e:	4b5c      	ldr	r3, [pc, #368]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004520:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004524:	4a5a      	ldr	r2, [pc, #360]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004526:	f043 0301 	orr.w	r3, r3, #1
 800452a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800452e:	e00f      	b.n	8004550 <HAL_RCC_OscConfig+0x378>
 8004530:	4b57      	ldr	r3, [pc, #348]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004532:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004536:	4a56      	ldr	r2, [pc, #344]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004538:	f023 0301 	bic.w	r3, r3, #1
 800453c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004540:	4b53      	ldr	r3, [pc, #332]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004542:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004546:	4a52      	ldr	r2, [pc, #328]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004548:	f023 0304 	bic.w	r3, r3, #4
 800454c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	689b      	ldr	r3, [r3, #8]
 8004554:	2b00      	cmp	r3, #0
 8004556:	d016      	beq.n	8004586 <HAL_RCC_OscConfig+0x3ae>
 8004558:	f7fd fc2c 	bl	8001db4 <HAL_GetTick>
 800455c:	6138      	str	r0, [r7, #16]
 800455e:	e00a      	b.n	8004576 <HAL_RCC_OscConfig+0x39e>
 8004560:	f7fd fc28 	bl	8001db4 <HAL_GetTick>
 8004564:	4602      	mov	r2, r0
 8004566:	693b      	ldr	r3, [r7, #16]
 8004568:	1ad3      	subs	r3, r2, r3
 800456a:	f241 3288 	movw	r2, #5000	; 0x1388
 800456e:	4293      	cmp	r3, r2
 8004570:	d901      	bls.n	8004576 <HAL_RCC_OscConfig+0x39e>
 8004572:	2303      	movs	r3, #3
 8004574:	e140      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004576:	4b46      	ldr	r3, [pc, #280]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004578:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800457c:	f003 0302 	and.w	r3, r3, #2
 8004580:	2b00      	cmp	r3, #0
 8004582:	d0ed      	beq.n	8004560 <HAL_RCC_OscConfig+0x388>
 8004584:	e015      	b.n	80045b2 <HAL_RCC_OscConfig+0x3da>
 8004586:	f7fd fc15 	bl	8001db4 <HAL_GetTick>
 800458a:	6138      	str	r0, [r7, #16]
 800458c:	e00a      	b.n	80045a4 <HAL_RCC_OscConfig+0x3cc>
 800458e:	f7fd fc11 	bl	8001db4 <HAL_GetTick>
 8004592:	4602      	mov	r2, r0
 8004594:	693b      	ldr	r3, [r7, #16]
 8004596:	1ad3      	subs	r3, r2, r3
 8004598:	f241 3288 	movw	r2, #5000	; 0x1388
 800459c:	4293      	cmp	r3, r2
 800459e:	d901      	bls.n	80045a4 <HAL_RCC_OscConfig+0x3cc>
 80045a0:	2303      	movs	r3, #3
 80045a2:	e129      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 80045a4:	4b3a      	ldr	r3, [pc, #232]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80045a6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80045aa:	f003 0302 	and.w	r3, r3, #2
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	d1ed      	bne.n	800458e <HAL_RCC_OscConfig+0x3b6>
 80045b2:	7ffb      	ldrb	r3, [r7, #31]
 80045b4:	2b01      	cmp	r3, #1
 80045b6:	d105      	bne.n	80045c4 <HAL_RCC_OscConfig+0x3ec>
 80045b8:	4b35      	ldr	r3, [pc, #212]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80045ba:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80045bc:	4a34      	ldr	r2, [pc, #208]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80045be:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80045c2:	6593      	str	r3, [r2, #88]	; 0x58
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	f003 0320 	and.w	r3, r3, #32
 80045cc:	2b00      	cmp	r3, #0
 80045ce:	d03c      	beq.n	800464a <HAL_RCC_OscConfig+0x472>
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	699b      	ldr	r3, [r3, #24]
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d01c      	beq.n	8004612 <HAL_RCC_OscConfig+0x43a>
 80045d8:	4b2d      	ldr	r3, [pc, #180]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80045da:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80045de:	4a2c      	ldr	r2, [pc, #176]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 80045e0:	f043 0301 	orr.w	r3, r3, #1
 80045e4:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 80045e8:	f7fd fbe4 	bl	8001db4 <HAL_GetTick>
 80045ec:	6138      	str	r0, [r7, #16]
 80045ee:	e008      	b.n	8004602 <HAL_RCC_OscConfig+0x42a>
 80045f0:	f7fd fbe0 	bl	8001db4 <HAL_GetTick>
 80045f4:	4602      	mov	r2, r0
 80045f6:	693b      	ldr	r3, [r7, #16]
 80045f8:	1ad3      	subs	r3, r2, r3
 80045fa:	2b02      	cmp	r3, #2
 80045fc:	d901      	bls.n	8004602 <HAL_RCC_OscConfig+0x42a>
 80045fe:	2303      	movs	r3, #3
 8004600:	e0fa      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004602:	4b23      	ldr	r3, [pc, #140]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004604:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004608:	f003 0302 	and.w	r3, r3, #2
 800460c:	2b00      	cmp	r3, #0
 800460e:	d0ef      	beq.n	80045f0 <HAL_RCC_OscConfig+0x418>
 8004610:	e01b      	b.n	800464a <HAL_RCC_OscConfig+0x472>
 8004612:	4b1f      	ldr	r3, [pc, #124]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004614:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004618:	4a1d      	ldr	r2, [pc, #116]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 800461a:	f023 0301 	bic.w	r3, r3, #1
 800461e:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8004622:	f7fd fbc7 	bl	8001db4 <HAL_GetTick>
 8004626:	6138      	str	r0, [r7, #16]
 8004628:	e008      	b.n	800463c <HAL_RCC_OscConfig+0x464>
 800462a:	f7fd fbc3 	bl	8001db4 <HAL_GetTick>
 800462e:	4602      	mov	r2, r0
 8004630:	693b      	ldr	r3, [r7, #16]
 8004632:	1ad3      	subs	r3, r2, r3
 8004634:	2b02      	cmp	r3, #2
 8004636:	d901      	bls.n	800463c <HAL_RCC_OscConfig+0x464>
 8004638:	2303      	movs	r3, #3
 800463a:	e0dd      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 800463c:	4b14      	ldr	r3, [pc, #80]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 800463e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004642:	f003 0302 	and.w	r3, r3, #2
 8004646:	2b00      	cmp	r3, #0
 8004648:	d1ef      	bne.n	800462a <HAL_RCC_OscConfig+0x452>
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	69db      	ldr	r3, [r3, #28]
 800464e:	2b00      	cmp	r3, #0
 8004650:	f000 80d1 	beq.w	80047f6 <HAL_RCC_OscConfig+0x61e>
 8004654:	4b0e      	ldr	r3, [pc, #56]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004656:	689b      	ldr	r3, [r3, #8]
 8004658:	f003 030c 	and.w	r3, r3, #12
 800465c:	2b0c      	cmp	r3, #12
 800465e:	f000 808b 	beq.w	8004778 <HAL_RCC_OscConfig+0x5a0>
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	69db      	ldr	r3, [r3, #28]
 8004666:	2b02      	cmp	r3, #2
 8004668:	d15e      	bne.n	8004728 <HAL_RCC_OscConfig+0x550>
 800466a:	4b09      	ldr	r3, [pc, #36]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	4a08      	ldr	r2, [pc, #32]	; (8004690 <HAL_RCC_OscConfig+0x4b8>)
 8004670:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004674:	6013      	str	r3, [r2, #0]
 8004676:	f7fd fb9d 	bl	8001db4 <HAL_GetTick>
 800467a:	6138      	str	r0, [r7, #16]
 800467c:	e00c      	b.n	8004698 <HAL_RCC_OscConfig+0x4c0>
 800467e:	f7fd fb99 	bl	8001db4 <HAL_GetTick>
 8004682:	4602      	mov	r2, r0
 8004684:	693b      	ldr	r3, [r7, #16]
 8004686:	1ad3      	subs	r3, r2, r3
 8004688:	2b02      	cmp	r3, #2
 800468a:	d905      	bls.n	8004698 <HAL_RCC_OscConfig+0x4c0>
 800468c:	2303      	movs	r3, #3
 800468e:	e0b3      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004690:	40021000 	.word	0x40021000
 8004694:	40007000 	.word	0x40007000
 8004698:	4b59      	ldr	r3, [pc, #356]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 800469a:	681b      	ldr	r3, [r3, #0]
 800469c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80046a0:	2b00      	cmp	r3, #0
 80046a2:	d1ec      	bne.n	800467e <HAL_RCC_OscConfig+0x4a6>
 80046a4:	4b56      	ldr	r3, [pc, #344]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 80046a6:	68da      	ldr	r2, [r3, #12]
 80046a8:	4b56      	ldr	r3, [pc, #344]	; (8004804 <HAL_RCC_OscConfig+0x62c>)
 80046aa:	4013      	ands	r3, r2
 80046ac:	687a      	ldr	r2, [r7, #4]
 80046ae:	6a11      	ldr	r1, [r2, #32]
 80046b0:	687a      	ldr	r2, [r7, #4]
 80046b2:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80046b4:	3a01      	subs	r2, #1
 80046b6:	0112      	lsls	r2, r2, #4
 80046b8:	4311      	orrs	r1, r2
 80046ba:	687a      	ldr	r2, [r7, #4]
 80046bc:	6a92      	ldr	r2, [r2, #40]	; 0x28
 80046be:	0212      	lsls	r2, r2, #8
 80046c0:	4311      	orrs	r1, r2
 80046c2:	687a      	ldr	r2, [r7, #4]
 80046c4:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80046c6:	0852      	lsrs	r2, r2, #1
 80046c8:	3a01      	subs	r2, #1
 80046ca:	0552      	lsls	r2, r2, #21
 80046cc:	4311      	orrs	r1, r2
 80046ce:	687a      	ldr	r2, [r7, #4]
 80046d0:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80046d2:	0852      	lsrs	r2, r2, #1
 80046d4:	3a01      	subs	r2, #1
 80046d6:	0652      	lsls	r2, r2, #25
 80046d8:	4311      	orrs	r1, r2
 80046da:	687a      	ldr	r2, [r7, #4]
 80046dc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80046de:	06d2      	lsls	r2, r2, #27
 80046e0:	430a      	orrs	r2, r1
 80046e2:	4947      	ldr	r1, [pc, #284]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 80046e4:	4313      	orrs	r3, r2
 80046e6:	60cb      	str	r3, [r1, #12]
 80046e8:	4b45      	ldr	r3, [pc, #276]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 80046ea:	681b      	ldr	r3, [r3, #0]
 80046ec:	4a44      	ldr	r2, [pc, #272]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 80046ee:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80046f2:	6013      	str	r3, [r2, #0]
 80046f4:	4b42      	ldr	r3, [pc, #264]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 80046f6:	68db      	ldr	r3, [r3, #12]
 80046f8:	4a41      	ldr	r2, [pc, #260]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 80046fa:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80046fe:	60d3      	str	r3, [r2, #12]
 8004700:	f7fd fb58 	bl	8001db4 <HAL_GetTick>
 8004704:	6138      	str	r0, [r7, #16]
 8004706:	e008      	b.n	800471a <HAL_RCC_OscConfig+0x542>
 8004708:	f7fd fb54 	bl	8001db4 <HAL_GetTick>
 800470c:	4602      	mov	r2, r0
 800470e:	693b      	ldr	r3, [r7, #16]
 8004710:	1ad3      	subs	r3, r2, r3
 8004712:	2b02      	cmp	r3, #2
 8004714:	d901      	bls.n	800471a <HAL_RCC_OscConfig+0x542>
 8004716:	2303      	movs	r3, #3
 8004718:	e06e      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 800471a:	4b39      	ldr	r3, [pc, #228]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 800471c:	681b      	ldr	r3, [r3, #0]
 800471e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004722:	2b00      	cmp	r3, #0
 8004724:	d0f0      	beq.n	8004708 <HAL_RCC_OscConfig+0x530>
 8004726:	e066      	b.n	80047f6 <HAL_RCC_OscConfig+0x61e>
 8004728:	4b35      	ldr	r3, [pc, #212]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	4a34      	ldr	r2, [pc, #208]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 800472e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004732:	6013      	str	r3, [r2, #0]
 8004734:	4b32      	ldr	r3, [pc, #200]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 8004736:	68db      	ldr	r3, [r3, #12]
 8004738:	4a31      	ldr	r2, [pc, #196]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 800473a:	f023 0303 	bic.w	r3, r3, #3
 800473e:	60d3      	str	r3, [r2, #12]
 8004740:	4b2f      	ldr	r3, [pc, #188]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 8004742:	68db      	ldr	r3, [r3, #12]
 8004744:	4a2e      	ldr	r2, [pc, #184]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 8004746:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 800474a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800474e:	60d3      	str	r3, [r2, #12]
 8004750:	f7fd fb30 	bl	8001db4 <HAL_GetTick>
 8004754:	6138      	str	r0, [r7, #16]
 8004756:	e008      	b.n	800476a <HAL_RCC_OscConfig+0x592>
 8004758:	f7fd fb2c 	bl	8001db4 <HAL_GetTick>
 800475c:	4602      	mov	r2, r0
 800475e:	693b      	ldr	r3, [r7, #16]
 8004760:	1ad3      	subs	r3, r2, r3
 8004762:	2b02      	cmp	r3, #2
 8004764:	d901      	bls.n	800476a <HAL_RCC_OscConfig+0x592>
 8004766:	2303      	movs	r3, #3
 8004768:	e046      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 800476a:	4b25      	ldr	r3, [pc, #148]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 800476c:	681b      	ldr	r3, [r3, #0]
 800476e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004772:	2b00      	cmp	r3, #0
 8004774:	d1f0      	bne.n	8004758 <HAL_RCC_OscConfig+0x580>
 8004776:	e03e      	b.n	80047f6 <HAL_RCC_OscConfig+0x61e>
 8004778:	687b      	ldr	r3, [r7, #4]
 800477a:	69db      	ldr	r3, [r3, #28]
 800477c:	2b01      	cmp	r3, #1
 800477e:	d101      	bne.n	8004784 <HAL_RCC_OscConfig+0x5ac>
 8004780:	2301      	movs	r3, #1
 8004782:	e039      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 8004784:	4b1e      	ldr	r3, [pc, #120]	; (8004800 <HAL_RCC_OscConfig+0x628>)
 8004786:	68db      	ldr	r3, [r3, #12]
 8004788:	617b      	str	r3, [r7, #20]
 800478a:	697b      	ldr	r3, [r7, #20]
 800478c:	f003 0203 	and.w	r2, r3, #3
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	6a1b      	ldr	r3, [r3, #32]
 8004794:	429a      	cmp	r2, r3
 8004796:	d12c      	bne.n	80047f2 <HAL_RCC_OscConfig+0x61a>
 8004798:	697b      	ldr	r3, [r7, #20]
 800479a:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a2:	3b01      	subs	r3, #1
 80047a4:	011b      	lsls	r3, r3, #4
 80047a6:	429a      	cmp	r2, r3
 80047a8:	d123      	bne.n	80047f2 <HAL_RCC_OscConfig+0x61a>
 80047aa:	697b      	ldr	r3, [r7, #20]
 80047ac:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80047b4:	021b      	lsls	r3, r3, #8
 80047b6:	429a      	cmp	r2, r3
 80047b8:	d11b      	bne.n	80047f2 <HAL_RCC_OscConfig+0x61a>
 80047ba:	697b      	ldr	r3, [r7, #20]
 80047bc:	f003 4278 	and.w	r2, r3, #4160749568	; 0xf8000000
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047c4:	06db      	lsls	r3, r3, #27
 80047c6:	429a      	cmp	r2, r3
 80047c8:	d113      	bne.n	80047f2 <HAL_RCC_OscConfig+0x61a>
 80047ca:	697b      	ldr	r3, [r7, #20]
 80047cc:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047d4:	085b      	lsrs	r3, r3, #1
 80047d6:	3b01      	subs	r3, #1
 80047d8:	055b      	lsls	r3, r3, #21
 80047da:	429a      	cmp	r2, r3
 80047dc:	d109      	bne.n	80047f2 <HAL_RCC_OscConfig+0x61a>
 80047de:	697b      	ldr	r3, [r7, #20]
 80047e0:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80047e8:	085b      	lsrs	r3, r3, #1
 80047ea:	3b01      	subs	r3, #1
 80047ec:	065b      	lsls	r3, r3, #25
 80047ee:	429a      	cmp	r2, r3
 80047f0:	d001      	beq.n	80047f6 <HAL_RCC_OscConfig+0x61e>
 80047f2:	2301      	movs	r3, #1
 80047f4:	e000      	b.n	80047f8 <HAL_RCC_OscConfig+0x620>
 80047f6:	2300      	movs	r3, #0
 80047f8:	4618      	mov	r0, r3
 80047fa:	3720      	adds	r7, #32
 80047fc:	46bd      	mov	sp, r7
 80047fe:	bd80      	pop	{r7, pc}
 8004800:	40021000 	.word	0x40021000
 8004804:	019f800c 	.word	0x019f800c

08004808 <HAL_RCC_ClockConfig>:
 8004808:	b580      	push	{r7, lr}
 800480a:	b086      	sub	sp, #24
 800480c:	af00      	add	r7, sp, #0
 800480e:	6078      	str	r0, [r7, #4]
 8004810:	6039      	str	r1, [r7, #0]
 8004812:	2300      	movs	r3, #0
 8004814:	617b      	str	r3, [r7, #20]
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	2b00      	cmp	r3, #0
 800481a:	d101      	bne.n	8004820 <HAL_RCC_ClockConfig+0x18>
 800481c:	2301      	movs	r3, #1
 800481e:	e11e      	b.n	8004a5e <HAL_RCC_ClockConfig+0x256>
 8004820:	4b91      	ldr	r3, [pc, #580]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	f003 030f 	and.w	r3, r3, #15
 8004828:	683a      	ldr	r2, [r7, #0]
 800482a:	429a      	cmp	r2, r3
 800482c:	d910      	bls.n	8004850 <HAL_RCC_ClockConfig+0x48>
 800482e:	4b8e      	ldr	r3, [pc, #568]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	f023 020f 	bic.w	r2, r3, #15
 8004836:	498c      	ldr	r1, [pc, #560]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 8004838:	683b      	ldr	r3, [r7, #0]
 800483a:	4313      	orrs	r3, r2
 800483c:	600b      	str	r3, [r1, #0]
 800483e:	4b8a      	ldr	r3, [pc, #552]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f003 030f 	and.w	r3, r3, #15
 8004846:	683a      	ldr	r2, [r7, #0]
 8004848:	429a      	cmp	r2, r3
 800484a:	d001      	beq.n	8004850 <HAL_RCC_ClockConfig+0x48>
 800484c:	2301      	movs	r3, #1
 800484e:	e106      	b.n	8004a5e <HAL_RCC_ClockConfig+0x256>
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	f003 0301 	and.w	r3, r3, #1
 8004858:	2b00      	cmp	r3, #0
 800485a:	d073      	beq.n	8004944 <HAL_RCC_ClockConfig+0x13c>
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	685b      	ldr	r3, [r3, #4]
 8004860:	2b03      	cmp	r3, #3
 8004862:	d129      	bne.n	80048b8 <HAL_RCC_ClockConfig+0xb0>
 8004864:	4b81      	ldr	r3, [pc, #516]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800486c:	2b00      	cmp	r3, #0
 800486e:	d101      	bne.n	8004874 <HAL_RCC_ClockConfig+0x6c>
 8004870:	2301      	movs	r3, #1
 8004872:	e0f4      	b.n	8004a5e <HAL_RCC_ClockConfig+0x256>
 8004874:	f000 f99e 	bl	8004bb4 <RCC_GetSysClockFreqFromPLLSource>
 8004878:	6138      	str	r0, [r7, #16]
 800487a:	693b      	ldr	r3, [r7, #16]
 800487c:	4a7c      	ldr	r2, [pc, #496]	; (8004a70 <HAL_RCC_ClockConfig+0x268>)
 800487e:	4293      	cmp	r3, r2
 8004880:	d93f      	bls.n	8004902 <HAL_RCC_ClockConfig+0xfa>
 8004882:	4b7a      	ldr	r3, [pc, #488]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004884:	689b      	ldr	r3, [r3, #8]
 8004886:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800488a:	2b00      	cmp	r3, #0
 800488c:	d009      	beq.n	80048a2 <HAL_RCC_ClockConfig+0x9a>
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	f003 0302 	and.w	r3, r3, #2
 8004896:	2b00      	cmp	r3, #0
 8004898:	d033      	beq.n	8004902 <HAL_RCC_ClockConfig+0xfa>
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	689b      	ldr	r3, [r3, #8]
 800489e:	2b00      	cmp	r3, #0
 80048a0:	d12f      	bne.n	8004902 <HAL_RCC_ClockConfig+0xfa>
 80048a2:	4b72      	ldr	r3, [pc, #456]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80048a4:	689b      	ldr	r3, [r3, #8]
 80048a6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80048aa:	4a70      	ldr	r2, [pc, #448]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80048ac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80048b0:	6093      	str	r3, [r2, #8]
 80048b2:	2380      	movs	r3, #128	; 0x80
 80048b4:	617b      	str	r3, [r7, #20]
 80048b6:	e024      	b.n	8004902 <HAL_RCC_ClockConfig+0xfa>
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	685b      	ldr	r3, [r3, #4]
 80048bc:	2b02      	cmp	r3, #2
 80048be:	d107      	bne.n	80048d0 <HAL_RCC_ClockConfig+0xc8>
 80048c0:	4b6a      	ldr	r3, [pc, #424]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80048c8:	2b00      	cmp	r3, #0
 80048ca:	d109      	bne.n	80048e0 <HAL_RCC_ClockConfig+0xd8>
 80048cc:	2301      	movs	r3, #1
 80048ce:	e0c6      	b.n	8004a5e <HAL_RCC_ClockConfig+0x256>
 80048d0:	4b66      	ldr	r3, [pc, #408]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80048d8:	2b00      	cmp	r3, #0
 80048da:	d101      	bne.n	80048e0 <HAL_RCC_ClockConfig+0xd8>
 80048dc:	2301      	movs	r3, #1
 80048de:	e0be      	b.n	8004a5e <HAL_RCC_ClockConfig+0x256>
 80048e0:	f000 f8ce 	bl	8004a80 <HAL_RCC_GetSysClockFreq>
 80048e4:	6138      	str	r0, [r7, #16]
 80048e6:	693b      	ldr	r3, [r7, #16]
 80048e8:	4a61      	ldr	r2, [pc, #388]	; (8004a70 <HAL_RCC_ClockConfig+0x268>)
 80048ea:	4293      	cmp	r3, r2
 80048ec:	d909      	bls.n	8004902 <HAL_RCC_ClockConfig+0xfa>
 80048ee:	4b5f      	ldr	r3, [pc, #380]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80048f0:	689b      	ldr	r3, [r3, #8]
 80048f2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80048f6:	4a5d      	ldr	r2, [pc, #372]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80048f8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80048fc:	6093      	str	r3, [r2, #8]
 80048fe:	2380      	movs	r3, #128	; 0x80
 8004900:	617b      	str	r3, [r7, #20]
 8004902:	4b5a      	ldr	r3, [pc, #360]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004904:	689b      	ldr	r3, [r3, #8]
 8004906:	f023 0203 	bic.w	r2, r3, #3
 800490a:	687b      	ldr	r3, [r7, #4]
 800490c:	685b      	ldr	r3, [r3, #4]
 800490e:	4957      	ldr	r1, [pc, #348]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004910:	4313      	orrs	r3, r2
 8004912:	608b      	str	r3, [r1, #8]
 8004914:	f7fd fa4e 	bl	8001db4 <HAL_GetTick>
 8004918:	60f8      	str	r0, [r7, #12]
 800491a:	e00a      	b.n	8004932 <HAL_RCC_ClockConfig+0x12a>
 800491c:	f7fd fa4a 	bl	8001db4 <HAL_GetTick>
 8004920:	4602      	mov	r2, r0
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	1ad3      	subs	r3, r2, r3
 8004926:	f241 3288 	movw	r2, #5000	; 0x1388
 800492a:	4293      	cmp	r3, r2
 800492c:	d901      	bls.n	8004932 <HAL_RCC_ClockConfig+0x12a>
 800492e:	2303      	movs	r3, #3
 8004930:	e095      	b.n	8004a5e <HAL_RCC_ClockConfig+0x256>
 8004932:	4b4e      	ldr	r3, [pc, #312]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004934:	689b      	ldr	r3, [r3, #8]
 8004936:	f003 020c 	and.w	r2, r3, #12
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	685b      	ldr	r3, [r3, #4]
 800493e:	009b      	lsls	r3, r3, #2
 8004940:	429a      	cmp	r2, r3
 8004942:	d1eb      	bne.n	800491c <HAL_RCC_ClockConfig+0x114>
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	681b      	ldr	r3, [r3, #0]
 8004948:	f003 0302 	and.w	r3, r3, #2
 800494c:	2b00      	cmp	r3, #0
 800494e:	d023      	beq.n	8004998 <HAL_RCC_ClockConfig+0x190>
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	f003 0304 	and.w	r3, r3, #4
 8004958:	2b00      	cmp	r3, #0
 800495a:	d005      	beq.n	8004968 <HAL_RCC_ClockConfig+0x160>
 800495c:	4b43      	ldr	r3, [pc, #268]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 800495e:	689b      	ldr	r3, [r3, #8]
 8004960:	4a42      	ldr	r2, [pc, #264]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004962:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8004966:	6093      	str	r3, [r2, #8]
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	f003 0308 	and.w	r3, r3, #8
 8004970:	2b00      	cmp	r3, #0
 8004972:	d007      	beq.n	8004984 <HAL_RCC_ClockConfig+0x17c>
 8004974:	4b3d      	ldr	r3, [pc, #244]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004976:	689b      	ldr	r3, [r3, #8]
 8004978:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 800497c:	4a3b      	ldr	r2, [pc, #236]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 800497e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8004982:	6093      	str	r3, [r2, #8]
 8004984:	4b39      	ldr	r3, [pc, #228]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004986:	689b      	ldr	r3, [r3, #8]
 8004988:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	689b      	ldr	r3, [r3, #8]
 8004990:	4936      	ldr	r1, [pc, #216]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004992:	4313      	orrs	r3, r2
 8004994:	608b      	str	r3, [r1, #8]
 8004996:	e008      	b.n	80049aa <HAL_RCC_ClockConfig+0x1a2>
 8004998:	697b      	ldr	r3, [r7, #20]
 800499a:	2b80      	cmp	r3, #128	; 0x80
 800499c:	d105      	bne.n	80049aa <HAL_RCC_ClockConfig+0x1a2>
 800499e:	4b33      	ldr	r3, [pc, #204]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80049a0:	689b      	ldr	r3, [r3, #8]
 80049a2:	4a32      	ldr	r2, [pc, #200]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 80049a4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80049a8:	6093      	str	r3, [r2, #8]
 80049aa:	4b2f      	ldr	r3, [pc, #188]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 80049ac:	681b      	ldr	r3, [r3, #0]
 80049ae:	f003 030f 	and.w	r3, r3, #15
 80049b2:	683a      	ldr	r2, [r7, #0]
 80049b4:	429a      	cmp	r2, r3
 80049b6:	d21d      	bcs.n	80049f4 <HAL_RCC_ClockConfig+0x1ec>
 80049b8:	4b2b      	ldr	r3, [pc, #172]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	f023 020f 	bic.w	r2, r3, #15
 80049c0:	4929      	ldr	r1, [pc, #164]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 80049c2:	683b      	ldr	r3, [r7, #0]
 80049c4:	4313      	orrs	r3, r2
 80049c6:	600b      	str	r3, [r1, #0]
 80049c8:	f7fd f9f4 	bl	8001db4 <HAL_GetTick>
 80049cc:	60f8      	str	r0, [r7, #12]
 80049ce:	e00a      	b.n	80049e6 <HAL_RCC_ClockConfig+0x1de>
 80049d0:	f7fd f9f0 	bl	8001db4 <HAL_GetTick>
 80049d4:	4602      	mov	r2, r0
 80049d6:	68fb      	ldr	r3, [r7, #12]
 80049d8:	1ad3      	subs	r3, r2, r3
 80049da:	f241 3288 	movw	r2, #5000	; 0x1388
 80049de:	4293      	cmp	r3, r2
 80049e0:	d901      	bls.n	80049e6 <HAL_RCC_ClockConfig+0x1de>
 80049e2:	2303      	movs	r3, #3
 80049e4:	e03b      	b.n	8004a5e <HAL_RCC_ClockConfig+0x256>
 80049e6:	4b20      	ldr	r3, [pc, #128]	; (8004a68 <HAL_RCC_ClockConfig+0x260>)
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	f003 030f 	and.w	r3, r3, #15
 80049ee:	683a      	ldr	r2, [r7, #0]
 80049f0:	429a      	cmp	r2, r3
 80049f2:	d1ed      	bne.n	80049d0 <HAL_RCC_ClockConfig+0x1c8>
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	f003 0304 	and.w	r3, r3, #4
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d008      	beq.n	8004a12 <HAL_RCC_ClockConfig+0x20a>
 8004a00:	4b1a      	ldr	r3, [pc, #104]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004a02:	689b      	ldr	r3, [r3, #8]
 8004a04:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	68db      	ldr	r3, [r3, #12]
 8004a0c:	4917      	ldr	r1, [pc, #92]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004a0e:	4313      	orrs	r3, r2
 8004a10:	608b      	str	r3, [r1, #8]
 8004a12:	687b      	ldr	r3, [r7, #4]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	f003 0308 	and.w	r3, r3, #8
 8004a1a:	2b00      	cmp	r3, #0
 8004a1c:	d009      	beq.n	8004a32 <HAL_RCC_ClockConfig+0x22a>
 8004a1e:	4b13      	ldr	r3, [pc, #76]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004a20:	689b      	ldr	r3, [r3, #8]
 8004a22:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	691b      	ldr	r3, [r3, #16]
 8004a2a:	00db      	lsls	r3, r3, #3
 8004a2c:	490f      	ldr	r1, [pc, #60]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004a2e:	4313      	orrs	r3, r2
 8004a30:	608b      	str	r3, [r1, #8]
 8004a32:	f000 f825 	bl	8004a80 <HAL_RCC_GetSysClockFreq>
 8004a36:	4602      	mov	r2, r0
 8004a38:	4b0c      	ldr	r3, [pc, #48]	; (8004a6c <HAL_RCC_ClockConfig+0x264>)
 8004a3a:	689b      	ldr	r3, [r3, #8]
 8004a3c:	091b      	lsrs	r3, r3, #4
 8004a3e:	f003 030f 	and.w	r3, r3, #15
 8004a42:	490c      	ldr	r1, [pc, #48]	; (8004a74 <HAL_RCC_ClockConfig+0x26c>)
 8004a44:	5ccb      	ldrb	r3, [r1, r3]
 8004a46:	f003 031f 	and.w	r3, r3, #31
 8004a4a:	fa22 f303 	lsr.w	r3, r2, r3
 8004a4e:	4a0a      	ldr	r2, [pc, #40]	; (8004a78 <HAL_RCC_ClockConfig+0x270>)
 8004a50:	6013      	str	r3, [r2, #0]
 8004a52:	4b0a      	ldr	r3, [pc, #40]	; (8004a7c <HAL_RCC_ClockConfig+0x274>)
 8004a54:	681b      	ldr	r3, [r3, #0]
 8004a56:	4618      	mov	r0, r3
 8004a58:	f7fd f960 	bl	8001d1c <HAL_InitTick>
 8004a5c:	4603      	mov	r3, r0
 8004a5e:	4618      	mov	r0, r3
 8004a60:	3718      	adds	r7, #24
 8004a62:	46bd      	mov	sp, r7
 8004a64:	bd80      	pop	{r7, pc}
 8004a66:	bf00      	nop
 8004a68:	40022000 	.word	0x40022000
 8004a6c:	40021000 	.word	0x40021000
 8004a70:	04c4b400 	.word	0x04c4b400
 8004a74:	08009bd0 	.word	0x08009bd0
 8004a78:	200001c4 	.word	0x200001c4
 8004a7c:	200001c8 	.word	0x200001c8

08004a80 <HAL_RCC_GetSysClockFreq>:
 8004a80:	b480      	push	{r7}
 8004a82:	b087      	sub	sp, #28
 8004a84:	af00      	add	r7, sp, #0
 8004a86:	4b2c      	ldr	r3, [pc, #176]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004a88:	689b      	ldr	r3, [r3, #8]
 8004a8a:	f003 030c 	and.w	r3, r3, #12
 8004a8e:	2b04      	cmp	r3, #4
 8004a90:	d102      	bne.n	8004a98 <HAL_RCC_GetSysClockFreq+0x18>
 8004a92:	4b2a      	ldr	r3, [pc, #168]	; (8004b3c <HAL_RCC_GetSysClockFreq+0xbc>)
 8004a94:	613b      	str	r3, [r7, #16]
 8004a96:	e047      	b.n	8004b28 <HAL_RCC_GetSysClockFreq+0xa8>
 8004a98:	4b27      	ldr	r3, [pc, #156]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004a9a:	689b      	ldr	r3, [r3, #8]
 8004a9c:	f003 030c 	and.w	r3, r3, #12
 8004aa0:	2b08      	cmp	r3, #8
 8004aa2:	d102      	bne.n	8004aaa <HAL_RCC_GetSysClockFreq+0x2a>
 8004aa4:	4b26      	ldr	r3, [pc, #152]	; (8004b40 <HAL_RCC_GetSysClockFreq+0xc0>)
 8004aa6:	613b      	str	r3, [r7, #16]
 8004aa8:	e03e      	b.n	8004b28 <HAL_RCC_GetSysClockFreq+0xa8>
 8004aaa:	4b23      	ldr	r3, [pc, #140]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004aac:	689b      	ldr	r3, [r3, #8]
 8004aae:	f003 030c 	and.w	r3, r3, #12
 8004ab2:	2b0c      	cmp	r3, #12
 8004ab4:	d136      	bne.n	8004b24 <HAL_RCC_GetSysClockFreq+0xa4>
 8004ab6:	4b20      	ldr	r3, [pc, #128]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004ab8:	68db      	ldr	r3, [r3, #12]
 8004aba:	f003 0303 	and.w	r3, r3, #3
 8004abe:	60fb      	str	r3, [r7, #12]
 8004ac0:	4b1d      	ldr	r3, [pc, #116]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004ac2:	68db      	ldr	r3, [r3, #12]
 8004ac4:	091b      	lsrs	r3, r3, #4
 8004ac6:	f003 030f 	and.w	r3, r3, #15
 8004aca:	3301      	adds	r3, #1
 8004acc:	60bb      	str	r3, [r7, #8]
 8004ace:	68fb      	ldr	r3, [r7, #12]
 8004ad0:	2b03      	cmp	r3, #3
 8004ad2:	d10c      	bne.n	8004aee <HAL_RCC_GetSysClockFreq+0x6e>
 8004ad4:	4a1a      	ldr	r2, [pc, #104]	; (8004b40 <HAL_RCC_GetSysClockFreq+0xc0>)
 8004ad6:	68bb      	ldr	r3, [r7, #8]
 8004ad8:	fbb2 f3f3 	udiv	r3, r2, r3
 8004adc:	4a16      	ldr	r2, [pc, #88]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004ade:	68d2      	ldr	r2, [r2, #12]
 8004ae0:	0a12      	lsrs	r2, r2, #8
 8004ae2:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8004ae6:	fb02 f303 	mul.w	r3, r2, r3
 8004aea:	617b      	str	r3, [r7, #20]
 8004aec:	e00c      	b.n	8004b08 <HAL_RCC_GetSysClockFreq+0x88>
 8004aee:	4a13      	ldr	r2, [pc, #76]	; (8004b3c <HAL_RCC_GetSysClockFreq+0xbc>)
 8004af0:	68bb      	ldr	r3, [r7, #8]
 8004af2:	fbb2 f3f3 	udiv	r3, r2, r3
 8004af6:	4a10      	ldr	r2, [pc, #64]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004af8:	68d2      	ldr	r2, [r2, #12]
 8004afa:	0a12      	lsrs	r2, r2, #8
 8004afc:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8004b00:	fb02 f303 	mul.w	r3, r2, r3
 8004b04:	617b      	str	r3, [r7, #20]
 8004b06:	bf00      	nop
 8004b08:	4b0b      	ldr	r3, [pc, #44]	; (8004b38 <HAL_RCC_GetSysClockFreq+0xb8>)
 8004b0a:	68db      	ldr	r3, [r3, #12]
 8004b0c:	0e5b      	lsrs	r3, r3, #25
 8004b0e:	f003 0303 	and.w	r3, r3, #3
 8004b12:	3301      	adds	r3, #1
 8004b14:	005b      	lsls	r3, r3, #1
 8004b16:	607b      	str	r3, [r7, #4]
 8004b18:	697a      	ldr	r2, [r7, #20]
 8004b1a:	687b      	ldr	r3, [r7, #4]
 8004b1c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b20:	613b      	str	r3, [r7, #16]
 8004b22:	e001      	b.n	8004b28 <HAL_RCC_GetSysClockFreq+0xa8>
 8004b24:	2300      	movs	r3, #0
 8004b26:	613b      	str	r3, [r7, #16]
 8004b28:	693b      	ldr	r3, [r7, #16]
 8004b2a:	4618      	mov	r0, r3
 8004b2c:	371c      	adds	r7, #28
 8004b2e:	46bd      	mov	sp, r7
 8004b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b34:	4770      	bx	lr
 8004b36:	bf00      	nop
 8004b38:	40021000 	.word	0x40021000
 8004b3c:	00f42400 	.word	0x00f42400
 8004b40:	016e3600 	.word	0x016e3600

08004b44 <HAL_RCC_GetHCLKFreq>:
 8004b44:	b480      	push	{r7}
 8004b46:	af00      	add	r7, sp, #0
 8004b48:	4b03      	ldr	r3, [pc, #12]	; (8004b58 <HAL_RCC_GetHCLKFreq+0x14>)
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	4618      	mov	r0, r3
 8004b4e:	46bd      	mov	sp, r7
 8004b50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b54:	4770      	bx	lr
 8004b56:	bf00      	nop
 8004b58:	200001c4 	.word	0x200001c4

08004b5c <HAL_RCC_GetPCLK1Freq>:
 8004b5c:	b580      	push	{r7, lr}
 8004b5e:	af00      	add	r7, sp, #0
 8004b60:	f7ff fff0 	bl	8004b44 <HAL_RCC_GetHCLKFreq>
 8004b64:	4602      	mov	r2, r0
 8004b66:	4b06      	ldr	r3, [pc, #24]	; (8004b80 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004b68:	689b      	ldr	r3, [r3, #8]
 8004b6a:	0a1b      	lsrs	r3, r3, #8
 8004b6c:	f003 0307 	and.w	r3, r3, #7
 8004b70:	4904      	ldr	r1, [pc, #16]	; (8004b84 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004b72:	5ccb      	ldrb	r3, [r1, r3]
 8004b74:	f003 031f 	and.w	r3, r3, #31
 8004b78:	fa22 f303 	lsr.w	r3, r2, r3
 8004b7c:	4618      	mov	r0, r3
 8004b7e:	bd80      	pop	{r7, pc}
 8004b80:	40021000 	.word	0x40021000
 8004b84:	08009be0 	.word	0x08009be0

08004b88 <HAL_RCC_GetPCLK2Freq>:
 8004b88:	b580      	push	{r7, lr}
 8004b8a:	af00      	add	r7, sp, #0
 8004b8c:	f7ff ffda 	bl	8004b44 <HAL_RCC_GetHCLKFreq>
 8004b90:	4602      	mov	r2, r0
 8004b92:	4b06      	ldr	r3, [pc, #24]	; (8004bac <HAL_RCC_GetPCLK2Freq+0x24>)
 8004b94:	689b      	ldr	r3, [r3, #8]
 8004b96:	0adb      	lsrs	r3, r3, #11
 8004b98:	f003 0307 	and.w	r3, r3, #7
 8004b9c:	4904      	ldr	r1, [pc, #16]	; (8004bb0 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004b9e:	5ccb      	ldrb	r3, [r1, r3]
 8004ba0:	f003 031f 	and.w	r3, r3, #31
 8004ba4:	fa22 f303 	lsr.w	r3, r2, r3
 8004ba8:	4618      	mov	r0, r3
 8004baa:	bd80      	pop	{r7, pc}
 8004bac:	40021000 	.word	0x40021000
 8004bb0:	08009be0 	.word	0x08009be0

08004bb4 <RCC_GetSysClockFreqFromPLLSource>:
 8004bb4:	b480      	push	{r7}
 8004bb6:	b087      	sub	sp, #28
 8004bb8:	af00      	add	r7, sp, #0
 8004bba:	4b1e      	ldr	r3, [pc, #120]	; (8004c34 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8004bbc:	68db      	ldr	r3, [r3, #12]
 8004bbe:	f003 0303 	and.w	r3, r3, #3
 8004bc2:	613b      	str	r3, [r7, #16]
 8004bc4:	4b1b      	ldr	r3, [pc, #108]	; (8004c34 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8004bc6:	68db      	ldr	r3, [r3, #12]
 8004bc8:	091b      	lsrs	r3, r3, #4
 8004bca:	f003 030f 	and.w	r3, r3, #15
 8004bce:	3301      	adds	r3, #1
 8004bd0:	60fb      	str	r3, [r7, #12]
 8004bd2:	693b      	ldr	r3, [r7, #16]
 8004bd4:	2b03      	cmp	r3, #3
 8004bd6:	d10c      	bne.n	8004bf2 <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8004bd8:	4a17      	ldr	r2, [pc, #92]	; (8004c38 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	fbb2 f3f3 	udiv	r3, r2, r3
 8004be0:	4a14      	ldr	r2, [pc, #80]	; (8004c34 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8004be2:	68d2      	ldr	r2, [r2, #12]
 8004be4:	0a12      	lsrs	r2, r2, #8
 8004be6:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8004bea:	fb02 f303 	mul.w	r3, r2, r3
 8004bee:	617b      	str	r3, [r7, #20]
 8004bf0:	e00c      	b.n	8004c0c <RCC_GetSysClockFreqFromPLLSource+0x58>
 8004bf2:	4a12      	ldr	r2, [pc, #72]	; (8004c3c <RCC_GetSysClockFreqFromPLLSource+0x88>)
 8004bf4:	68fb      	ldr	r3, [r7, #12]
 8004bf6:	fbb2 f3f3 	udiv	r3, r2, r3
 8004bfa:	4a0e      	ldr	r2, [pc, #56]	; (8004c34 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8004bfc:	68d2      	ldr	r2, [r2, #12]
 8004bfe:	0a12      	lsrs	r2, r2, #8
 8004c00:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8004c04:	fb02 f303 	mul.w	r3, r2, r3
 8004c08:	617b      	str	r3, [r7, #20]
 8004c0a:	bf00      	nop
 8004c0c:	4b09      	ldr	r3, [pc, #36]	; (8004c34 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8004c0e:	68db      	ldr	r3, [r3, #12]
 8004c10:	0e5b      	lsrs	r3, r3, #25
 8004c12:	f003 0303 	and.w	r3, r3, #3
 8004c16:	3301      	adds	r3, #1
 8004c18:	005b      	lsls	r3, r3, #1
 8004c1a:	60bb      	str	r3, [r7, #8]
 8004c1c:	697a      	ldr	r2, [r7, #20]
 8004c1e:	68bb      	ldr	r3, [r7, #8]
 8004c20:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c24:	607b      	str	r3, [r7, #4]
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	4618      	mov	r0, r3
 8004c2a:	371c      	adds	r7, #28
 8004c2c:	46bd      	mov	sp, r7
 8004c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c32:	4770      	bx	lr
 8004c34:	40021000 	.word	0x40021000
 8004c38:	016e3600 	.word	0x016e3600
 8004c3c:	00f42400 	.word	0x00f42400

08004c40 <HAL_RCCEx_PeriphCLKConfig>:
 8004c40:	b580      	push	{r7, lr}
 8004c42:	b086      	sub	sp, #24
 8004c44:	af00      	add	r7, sp, #0
 8004c46:	6078      	str	r0, [r7, #4]
 8004c48:	2300      	movs	r3, #0
 8004c4a:	74fb      	strb	r3, [r7, #19]
 8004c4c:	2300      	movs	r3, #0
 8004c4e:	74bb      	strb	r3, [r7, #18]
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004c58:	2b00      	cmp	r3, #0
 8004c5a:	f000 8098 	beq.w	8004d8e <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8004c5e:	2300      	movs	r3, #0
 8004c60:	747b      	strb	r3, [r7, #17]
 8004c62:	4b43      	ldr	r3, [pc, #268]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004c64:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c66:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004c6a:	2b00      	cmp	r3, #0
 8004c6c:	d10d      	bne.n	8004c8a <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8004c6e:	4b40      	ldr	r3, [pc, #256]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004c70:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c72:	4a3f      	ldr	r2, [pc, #252]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004c74:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004c78:	6593      	str	r3, [r2, #88]	; 0x58
 8004c7a:	4b3d      	ldr	r3, [pc, #244]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004c7c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004c7e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004c82:	60bb      	str	r3, [r7, #8]
 8004c84:	68bb      	ldr	r3, [r7, #8]
 8004c86:	2301      	movs	r3, #1
 8004c88:	747b      	strb	r3, [r7, #17]
 8004c8a:	4b3a      	ldr	r3, [pc, #232]	; (8004d74 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	4a39      	ldr	r2, [pc, #228]	; (8004d74 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004c90:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004c94:	6013      	str	r3, [r2, #0]
 8004c96:	f7fd f88d 	bl	8001db4 <HAL_GetTick>
 8004c9a:	60f8      	str	r0, [r7, #12]
 8004c9c:	e009      	b.n	8004cb2 <HAL_RCCEx_PeriphCLKConfig+0x72>
 8004c9e:	f7fd f889 	bl	8001db4 <HAL_GetTick>
 8004ca2:	4602      	mov	r2, r0
 8004ca4:	68fb      	ldr	r3, [r7, #12]
 8004ca6:	1ad3      	subs	r3, r2, r3
 8004ca8:	2b02      	cmp	r3, #2
 8004caa:	d902      	bls.n	8004cb2 <HAL_RCCEx_PeriphCLKConfig+0x72>
 8004cac:	2303      	movs	r3, #3
 8004cae:	74fb      	strb	r3, [r7, #19]
 8004cb0:	e005      	b.n	8004cbe <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004cb2:	4b30      	ldr	r3, [pc, #192]	; (8004d74 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	d0ef      	beq.n	8004c9e <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8004cbe:	7cfb      	ldrb	r3, [r7, #19]
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	d159      	bne.n	8004d78 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8004cc4:	4b2a      	ldr	r3, [pc, #168]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004cc6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004cca:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004cce:	617b      	str	r3, [r7, #20]
 8004cd0:	697b      	ldr	r3, [r7, #20]
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d01e      	beq.n	8004d14 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004cda:	697a      	ldr	r2, [r7, #20]
 8004cdc:	429a      	cmp	r2, r3
 8004cde:	d019      	beq.n	8004d14 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8004ce0:	4b23      	ldr	r3, [pc, #140]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004ce2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004ce6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004cea:	617b      	str	r3, [r7, #20]
 8004cec:	4b20      	ldr	r3, [pc, #128]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004cee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004cf2:	4a1f      	ldr	r2, [pc, #124]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004cf4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004cf8:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004cfc:	4b1c      	ldr	r3, [pc, #112]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004cfe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d02:	4a1b      	ldr	r2, [pc, #108]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004d04:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004d08:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004d0c:	4a18      	ldr	r2, [pc, #96]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004d0e:	697b      	ldr	r3, [r7, #20]
 8004d10:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004d14:	697b      	ldr	r3, [r7, #20]
 8004d16:	f003 0301 	and.w	r3, r3, #1
 8004d1a:	2b00      	cmp	r3, #0
 8004d1c:	d016      	beq.n	8004d4c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8004d1e:	f7fd f849 	bl	8001db4 <HAL_GetTick>
 8004d22:	60f8      	str	r0, [r7, #12]
 8004d24:	e00b      	b.n	8004d3e <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8004d26:	f7fd f845 	bl	8001db4 <HAL_GetTick>
 8004d2a:	4602      	mov	r2, r0
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	1ad3      	subs	r3, r2, r3
 8004d30:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d34:	4293      	cmp	r3, r2
 8004d36:	d902      	bls.n	8004d3e <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8004d38:	2303      	movs	r3, #3
 8004d3a:	74fb      	strb	r3, [r7, #19]
 8004d3c:	e006      	b.n	8004d4c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8004d3e:	4b0c      	ldr	r3, [pc, #48]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004d40:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d44:	f003 0302 	and.w	r3, r3, #2
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d0ec      	beq.n	8004d26 <HAL_RCCEx_PeriphCLKConfig+0xe6>
 8004d4c:	7cfb      	ldrb	r3, [r7, #19]
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d10b      	bne.n	8004d6a <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8004d52:	4b07      	ldr	r3, [pc, #28]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004d54:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d58:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004d60:	4903      	ldr	r1, [pc, #12]	; (8004d70 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8004d62:	4313      	orrs	r3, r2
 8004d64:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8004d68:	e008      	b.n	8004d7c <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8004d6a:	7cfb      	ldrb	r3, [r7, #19]
 8004d6c:	74bb      	strb	r3, [r7, #18]
 8004d6e:	e005      	b.n	8004d7c <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8004d70:	40021000 	.word	0x40021000
 8004d74:	40007000 	.word	0x40007000
 8004d78:	7cfb      	ldrb	r3, [r7, #19]
 8004d7a:	74bb      	strb	r3, [r7, #18]
 8004d7c:	7c7b      	ldrb	r3, [r7, #17]
 8004d7e:	2b01      	cmp	r3, #1
 8004d80:	d105      	bne.n	8004d8e <HAL_RCCEx_PeriphCLKConfig+0x14e>
 8004d82:	4ba7      	ldr	r3, [pc, #668]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004d84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004d86:	4aa6      	ldr	r2, [pc, #664]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004d88:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004d8c:	6593      	str	r3, [r2, #88]	; 0x58
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	f003 0301 	and.w	r3, r3, #1
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	d00a      	beq.n	8004db0 <HAL_RCCEx_PeriphCLKConfig+0x170>
 8004d9a:	4ba1      	ldr	r3, [pc, #644]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004d9c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004da0:	f023 0203 	bic.w	r2, r3, #3
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	685b      	ldr	r3, [r3, #4]
 8004da8:	499d      	ldr	r1, [pc, #628]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004daa:	4313      	orrs	r3, r2
 8004dac:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	f003 0302 	and.w	r3, r3, #2
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	d00a      	beq.n	8004dd2 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8004dbc:	4b98      	ldr	r3, [pc, #608]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004dbe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004dc2:	f023 020c 	bic.w	r2, r3, #12
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	689b      	ldr	r3, [r3, #8]
 8004dca:	4995      	ldr	r1, [pc, #596]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004dcc:	4313      	orrs	r3, r2
 8004dce:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	681b      	ldr	r3, [r3, #0]
 8004dd6:	f003 0304 	and.w	r3, r3, #4
 8004dda:	2b00      	cmp	r3, #0
 8004ddc:	d00a      	beq.n	8004df4 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8004dde:	4b90      	ldr	r3, [pc, #576]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004de0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004de4:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	68db      	ldr	r3, [r3, #12]
 8004dec:	498c      	ldr	r1, [pc, #560]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004dee:	4313      	orrs	r3, r2
 8004df0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	f003 0308 	and.w	r3, r3, #8
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d00a      	beq.n	8004e16 <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 8004e00:	4b87      	ldr	r3, [pc, #540]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e02:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004e06:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8004e0a:	687b      	ldr	r3, [r7, #4]
 8004e0c:	691b      	ldr	r3, [r3, #16]
 8004e0e:	4984      	ldr	r1, [pc, #528]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e10:	4313      	orrs	r3, r2
 8004e12:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	f003 0310 	and.w	r3, r3, #16
 8004e1e:	2b00      	cmp	r3, #0
 8004e20:	d00a      	beq.n	8004e38 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8004e22:	4b7f      	ldr	r3, [pc, #508]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e24:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004e28:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	695b      	ldr	r3, [r3, #20]
 8004e30:	497b      	ldr	r1, [pc, #492]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e32:	4313      	orrs	r3, r2
 8004e34:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	f003 0320 	and.w	r3, r3, #32
 8004e40:	2b00      	cmp	r3, #0
 8004e42:	d00a      	beq.n	8004e5a <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8004e44:	4b76      	ldr	r3, [pc, #472]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e46:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004e4a:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	699b      	ldr	r3, [r3, #24]
 8004e52:	4973      	ldr	r1, [pc, #460]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e54:	4313      	orrs	r3, r2
 8004e56:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	d00a      	beq.n	8004e7c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8004e66:	4b6e      	ldr	r3, [pc, #440]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e68:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004e6c:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	69db      	ldr	r3, [r3, #28]
 8004e74:	496a      	ldr	r1, [pc, #424]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e76:	4313      	orrs	r3, r2
 8004e78:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004e84:	2b00      	cmp	r3, #0
 8004e86:	d00a      	beq.n	8004e9e <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8004e88:	4b65      	ldr	r3, [pc, #404]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e8a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004e8e:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	6a1b      	ldr	r3, [r3, #32]
 8004e96:	4962      	ldr	r1, [pc, #392]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004e98:	4313      	orrs	r3, r2
 8004e9a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d00a      	beq.n	8004ec0 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8004eaa:	4b5d      	ldr	r3, [pc, #372]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004eac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004eb0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eb8:	4959      	ldr	r1, [pc, #356]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004eba:	4313      	orrs	r3, r2
 8004ebc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	681b      	ldr	r3, [r3, #0]
 8004ec4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004ec8:	2b00      	cmp	r3, #0
 8004eca:	d00a      	beq.n	8004ee2 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 8004ecc:	4b54      	ldr	r3, [pc, #336]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004ece:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8004ed2:	f023 0203 	bic.w	r2, r3, #3
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004eda:	4951      	ldr	r1, [pc, #324]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004edc:	4313      	orrs	r3, r2
 8004ede:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004eea:	2b00      	cmp	r3, #0
 8004eec:	d00a      	beq.n	8004f04 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 8004eee:	4b4c      	ldr	r3, [pc, #304]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004ef0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004ef4:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004efc:	4948      	ldr	r1, [pc, #288]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004efe:	4313      	orrs	r3, r2
 8004f00:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004f0c:	2b00      	cmp	r3, #0
 8004f0e:	d015      	beq.n	8004f3c <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8004f10:	4b43      	ldr	r3, [pc, #268]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f12:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004f16:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f1e:	4940      	ldr	r1, [pc, #256]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f20:	4313      	orrs	r3, r2
 8004f22:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f2a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8004f2e:	d105      	bne.n	8004f3c <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8004f30:	4b3b      	ldr	r3, [pc, #236]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f32:	68db      	ldr	r3, [r3, #12]
 8004f34:	4a3a      	ldr	r2, [pc, #232]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f36:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004f3a:	60d3      	str	r3, [r2, #12]
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004f44:	2b00      	cmp	r3, #0
 8004f46:	d015      	beq.n	8004f74 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8004f48:	4b35      	ldr	r3, [pc, #212]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f4a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004f4e:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004f56:	4932      	ldr	r1, [pc, #200]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f58:	4313      	orrs	r3, r2
 8004f5a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004f62:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004f66:	d105      	bne.n	8004f74 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8004f68:	4b2d      	ldr	r3, [pc, #180]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f6a:	68db      	ldr	r3, [r3, #12]
 8004f6c:	4a2c      	ldr	r2, [pc, #176]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f6e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004f72:	60d3      	str	r3, [r2, #12]
 8004f74:	687b      	ldr	r3, [r7, #4]
 8004f76:	681b      	ldr	r3, [r3, #0]
 8004f78:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004f7c:	2b00      	cmp	r3, #0
 8004f7e:	d015      	beq.n	8004fac <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8004f80:	4b27      	ldr	r3, [pc, #156]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f82:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004f86:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f8e:	4924      	ldr	r1, [pc, #144]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004f90:	4313      	orrs	r3, r2
 8004f92:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004f96:	687b      	ldr	r3, [r7, #4]
 8004f98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004f9a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004f9e:	d105      	bne.n	8004fac <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8004fa0:	4b1f      	ldr	r3, [pc, #124]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004fa2:	68db      	ldr	r3, [r3, #12]
 8004fa4:	4a1e      	ldr	r2, [pc, #120]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004fa6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004faa:	60d3      	str	r3, [r2, #12]
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	681b      	ldr	r3, [r3, #0]
 8004fb0:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8004fb4:	2b00      	cmp	r3, #0
 8004fb6:	d015      	beq.n	8004fe4 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 8004fb8:	4b19      	ldr	r3, [pc, #100]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004fba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004fbe:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004fc6:	4916      	ldr	r1, [pc, #88]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004fc8:	4313      	orrs	r3, r2
 8004fca:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8004fce:	687b      	ldr	r3, [r7, #4]
 8004fd0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004fd2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8004fd6:	d105      	bne.n	8004fe4 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 8004fd8:	4b11      	ldr	r3, [pc, #68]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004fda:	68db      	ldr	r3, [r3, #12]
 8004fdc:	4a10      	ldr	r2, [pc, #64]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004fde:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004fe2:	60d3      	str	r3, [r2, #12]
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004fec:	2b00      	cmp	r3, #0
 8004fee:	d019      	beq.n	8005024 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 8004ff0:	4b0b      	ldr	r3, [pc, #44]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8004ff2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004ff6:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ffe:	4908      	ldr	r1, [pc, #32]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8005000:	4313      	orrs	r3, r2
 8005002:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800500a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800500e:	d109      	bne.n	8005024 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 8005010:	4b03      	ldr	r3, [pc, #12]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8005012:	68db      	ldr	r3, [r3, #12]
 8005014:	4a02      	ldr	r2, [pc, #8]	; (8005020 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8005016:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800501a:	60d3      	str	r3, [r2, #12]
 800501c:	e002      	b.n	8005024 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 800501e:	bf00      	nop
 8005020:	40021000 	.word	0x40021000
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800502c:	2b00      	cmp	r3, #0
 800502e:	d015      	beq.n	800505c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8005030:	4b29      	ldr	r3, [pc, #164]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8005032:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005036:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800503e:	4926      	ldr	r1, [pc, #152]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8005040:	4313      	orrs	r3, r2
 8005042:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800504a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800504e:	d105      	bne.n	800505c <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8005050:	4b21      	ldr	r3, [pc, #132]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8005052:	68db      	ldr	r3, [r3, #12]
 8005054:	4a20      	ldr	r2, [pc, #128]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8005056:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800505a:	60d3      	str	r3, [r2, #12]
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005064:	2b00      	cmp	r3, #0
 8005066:	d015      	beq.n	8005094 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8005068:	4b1b      	ldr	r3, [pc, #108]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 800506a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800506e:	f023 4240 	bic.w	r2, r3, #3221225472	; 0xc0000000
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005076:	4918      	ldr	r1, [pc, #96]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8005078:	4313      	orrs	r3, r2
 800507a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005082:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005086:	d105      	bne.n	8005094 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8005088:	4b13      	ldr	r3, [pc, #76]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 800508a:	68db      	ldr	r3, [r3, #12]
 800508c:	4a12      	ldr	r2, [pc, #72]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 800508e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005092:	60d3      	str	r3, [r2, #12]
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800509c:	2b00      	cmp	r3, #0
 800509e:	d015      	beq.n	80050cc <HAL_RCCEx_PeriphCLKConfig+0x48c>
 80050a0:	4b0d      	ldr	r3, [pc, #52]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 80050a2:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80050a6:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80050ae:	490a      	ldr	r1, [pc, #40]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 80050b0:	4313      	orrs	r3, r2
 80050b2:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80050ba:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80050be:	d105      	bne.n	80050cc <HAL_RCCEx_PeriphCLKConfig+0x48c>
 80050c0:	4b05      	ldr	r3, [pc, #20]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 80050c2:	68db      	ldr	r3, [r3, #12]
 80050c4:	4a04      	ldr	r2, [pc, #16]	; (80050d8 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 80050c6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80050ca:	60d3      	str	r3, [r2, #12]
 80050cc:	7cbb      	ldrb	r3, [r7, #18]
 80050ce:	4618      	mov	r0, r3
 80050d0:	3718      	adds	r7, #24
 80050d2:	46bd      	mov	sp, r7
 80050d4:	bd80      	pop	{r7, pc}
 80050d6:	bf00      	nop
 80050d8:	40021000 	.word	0x40021000

080050dc <HAL_TIM_PWM_Init>:
 80050dc:	b580      	push	{r7, lr}
 80050de:	b082      	sub	sp, #8
 80050e0:	af00      	add	r7, sp, #0
 80050e2:	6078      	str	r0, [r7, #4]
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d101      	bne.n	80050ee <HAL_TIM_PWM_Init+0x12>
 80050ea:	2301      	movs	r3, #1
 80050ec:	e049      	b.n	8005182 <HAL_TIM_PWM_Init+0xa6>
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80050f4:	b2db      	uxtb	r3, r3
 80050f6:	2b00      	cmp	r3, #0
 80050f8:	d106      	bne.n	8005108 <HAL_TIM_PWM_Init+0x2c>
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	2200      	movs	r2, #0
 80050fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005102:	6878      	ldr	r0, [r7, #4]
 8005104:	f7fc fcc4 	bl	8001a90 <HAL_TIM_PWM_MspInit>
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	2202      	movs	r2, #2
 800510c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681a      	ldr	r2, [r3, #0]
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	3304      	adds	r3, #4
 8005118:	4619      	mov	r1, r3
 800511a:	4610      	mov	r0, r2
 800511c:	f000 faf8 	bl	8005710 <TIM_Base_SetConfig>
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	2201      	movs	r2, #1
 8005124:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	2201      	movs	r2, #1
 800512c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	2201      	movs	r2, #1
 8005134:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	2201      	movs	r2, #1
 800513c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	2201      	movs	r2, #1
 8005144:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	2201      	movs	r2, #1
 800514c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	2201      	movs	r2, #1
 8005154:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	2201      	movs	r2, #1
 800515c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	2201      	movs	r2, #1
 8005164:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	2201      	movs	r2, #1
 800516c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	2201      	movs	r2, #1
 8005174:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	2201      	movs	r2, #1
 800517c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005180:	2300      	movs	r3, #0
 8005182:	4618      	mov	r0, r3
 8005184:	3708      	adds	r7, #8
 8005186:	46bd      	mov	sp, r7
 8005188:	bd80      	pop	{r7, pc}
	...

0800518c <HAL_TIM_PWM_Start>:
 800518c:	b580      	push	{r7, lr}
 800518e:	b084      	sub	sp, #16
 8005190:	af00      	add	r7, sp, #0
 8005192:	6078      	str	r0, [r7, #4]
 8005194:	6039      	str	r1, [r7, #0]
 8005196:	683b      	ldr	r3, [r7, #0]
 8005198:	2b00      	cmp	r3, #0
 800519a:	d109      	bne.n	80051b0 <HAL_TIM_PWM_Start+0x24>
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80051a2:	b2db      	uxtb	r3, r3
 80051a4:	2b01      	cmp	r3, #1
 80051a6:	bf14      	ite	ne
 80051a8:	2301      	movne	r3, #1
 80051aa:	2300      	moveq	r3, #0
 80051ac:	b2db      	uxtb	r3, r3
 80051ae:	e03c      	b.n	800522a <HAL_TIM_PWM_Start+0x9e>
 80051b0:	683b      	ldr	r3, [r7, #0]
 80051b2:	2b04      	cmp	r3, #4
 80051b4:	d109      	bne.n	80051ca <HAL_TIM_PWM_Start+0x3e>
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80051bc:	b2db      	uxtb	r3, r3
 80051be:	2b01      	cmp	r3, #1
 80051c0:	bf14      	ite	ne
 80051c2:	2301      	movne	r3, #1
 80051c4:	2300      	moveq	r3, #0
 80051c6:	b2db      	uxtb	r3, r3
 80051c8:	e02f      	b.n	800522a <HAL_TIM_PWM_Start+0x9e>
 80051ca:	683b      	ldr	r3, [r7, #0]
 80051cc:	2b08      	cmp	r3, #8
 80051ce:	d109      	bne.n	80051e4 <HAL_TIM_PWM_Start+0x58>
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80051d6:	b2db      	uxtb	r3, r3
 80051d8:	2b01      	cmp	r3, #1
 80051da:	bf14      	ite	ne
 80051dc:	2301      	movne	r3, #1
 80051de:	2300      	moveq	r3, #0
 80051e0:	b2db      	uxtb	r3, r3
 80051e2:	e022      	b.n	800522a <HAL_TIM_PWM_Start+0x9e>
 80051e4:	683b      	ldr	r3, [r7, #0]
 80051e6:	2b0c      	cmp	r3, #12
 80051e8:	d109      	bne.n	80051fe <HAL_TIM_PWM_Start+0x72>
 80051ea:	687b      	ldr	r3, [r7, #4]
 80051ec:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80051f0:	b2db      	uxtb	r3, r3
 80051f2:	2b01      	cmp	r3, #1
 80051f4:	bf14      	ite	ne
 80051f6:	2301      	movne	r3, #1
 80051f8:	2300      	moveq	r3, #0
 80051fa:	b2db      	uxtb	r3, r3
 80051fc:	e015      	b.n	800522a <HAL_TIM_PWM_Start+0x9e>
 80051fe:	683b      	ldr	r3, [r7, #0]
 8005200:	2b10      	cmp	r3, #16
 8005202:	d109      	bne.n	8005218 <HAL_TIM_PWM_Start+0x8c>
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800520a:	b2db      	uxtb	r3, r3
 800520c:	2b01      	cmp	r3, #1
 800520e:	bf14      	ite	ne
 8005210:	2301      	movne	r3, #1
 8005212:	2300      	moveq	r3, #0
 8005214:	b2db      	uxtb	r3, r3
 8005216:	e008      	b.n	800522a <HAL_TIM_PWM_Start+0x9e>
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800521e:	b2db      	uxtb	r3, r3
 8005220:	2b01      	cmp	r3, #1
 8005222:	bf14      	ite	ne
 8005224:	2301      	movne	r3, #1
 8005226:	2300      	moveq	r3, #0
 8005228:	b2db      	uxtb	r3, r3
 800522a:	2b00      	cmp	r3, #0
 800522c:	d001      	beq.n	8005232 <HAL_TIM_PWM_Start+0xa6>
 800522e:	2301      	movs	r3, #1
 8005230:	e0a6      	b.n	8005380 <HAL_TIM_PWM_Start+0x1f4>
 8005232:	683b      	ldr	r3, [r7, #0]
 8005234:	2b00      	cmp	r3, #0
 8005236:	d104      	bne.n	8005242 <HAL_TIM_PWM_Start+0xb6>
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	2202      	movs	r2, #2
 800523c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005240:	e023      	b.n	800528a <HAL_TIM_PWM_Start+0xfe>
 8005242:	683b      	ldr	r3, [r7, #0]
 8005244:	2b04      	cmp	r3, #4
 8005246:	d104      	bne.n	8005252 <HAL_TIM_PWM_Start+0xc6>
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	2202      	movs	r2, #2
 800524c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005250:	e01b      	b.n	800528a <HAL_TIM_PWM_Start+0xfe>
 8005252:	683b      	ldr	r3, [r7, #0]
 8005254:	2b08      	cmp	r3, #8
 8005256:	d104      	bne.n	8005262 <HAL_TIM_PWM_Start+0xd6>
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	2202      	movs	r2, #2
 800525c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005260:	e013      	b.n	800528a <HAL_TIM_PWM_Start+0xfe>
 8005262:	683b      	ldr	r3, [r7, #0]
 8005264:	2b0c      	cmp	r3, #12
 8005266:	d104      	bne.n	8005272 <HAL_TIM_PWM_Start+0xe6>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	2202      	movs	r2, #2
 800526c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005270:	e00b      	b.n	800528a <HAL_TIM_PWM_Start+0xfe>
 8005272:	683b      	ldr	r3, [r7, #0]
 8005274:	2b10      	cmp	r3, #16
 8005276:	d104      	bne.n	8005282 <HAL_TIM_PWM_Start+0xf6>
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	2202      	movs	r2, #2
 800527c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005280:	e003      	b.n	800528a <HAL_TIM_PWM_Start+0xfe>
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	2202      	movs	r2, #2
 8005286:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	2201      	movs	r2, #1
 8005290:	6839      	ldr	r1, [r7, #0]
 8005292:	4618      	mov	r0, r3
 8005294:	f000 fe0e 	bl	8005eb4 <TIM_CCxChannelCmd>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	4a3a      	ldr	r2, [pc, #232]	; (8005388 <HAL_TIM_PWM_Start+0x1fc>)
 800529e:	4293      	cmp	r3, r2
 80052a0:	d018      	beq.n	80052d4 <HAL_TIM_PWM_Start+0x148>
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	4a39      	ldr	r2, [pc, #228]	; (800538c <HAL_TIM_PWM_Start+0x200>)
 80052a8:	4293      	cmp	r3, r2
 80052aa:	d013      	beq.n	80052d4 <HAL_TIM_PWM_Start+0x148>
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	4a37      	ldr	r2, [pc, #220]	; (8005390 <HAL_TIM_PWM_Start+0x204>)
 80052b2:	4293      	cmp	r3, r2
 80052b4:	d00e      	beq.n	80052d4 <HAL_TIM_PWM_Start+0x148>
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	681b      	ldr	r3, [r3, #0]
 80052ba:	4a36      	ldr	r2, [pc, #216]	; (8005394 <HAL_TIM_PWM_Start+0x208>)
 80052bc:	4293      	cmp	r3, r2
 80052be:	d009      	beq.n	80052d4 <HAL_TIM_PWM_Start+0x148>
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	4a34      	ldr	r2, [pc, #208]	; (8005398 <HAL_TIM_PWM_Start+0x20c>)
 80052c6:	4293      	cmp	r3, r2
 80052c8:	d004      	beq.n	80052d4 <HAL_TIM_PWM_Start+0x148>
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	681b      	ldr	r3, [r3, #0]
 80052ce:	4a33      	ldr	r2, [pc, #204]	; (800539c <HAL_TIM_PWM_Start+0x210>)
 80052d0:	4293      	cmp	r3, r2
 80052d2:	d101      	bne.n	80052d8 <HAL_TIM_PWM_Start+0x14c>
 80052d4:	2301      	movs	r3, #1
 80052d6:	e000      	b.n	80052da <HAL_TIM_PWM_Start+0x14e>
 80052d8:	2300      	movs	r3, #0
 80052da:	2b00      	cmp	r3, #0
 80052dc:	d007      	beq.n	80052ee <HAL_TIM_PWM_Start+0x162>
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80052ec:	645a      	str	r2, [r3, #68]	; 0x44
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	4a25      	ldr	r2, [pc, #148]	; (8005388 <HAL_TIM_PWM_Start+0x1fc>)
 80052f4:	4293      	cmp	r3, r2
 80052f6:	d022      	beq.n	800533e <HAL_TIM_PWM_Start+0x1b2>
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005300:	d01d      	beq.n	800533e <HAL_TIM_PWM_Start+0x1b2>
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	681b      	ldr	r3, [r3, #0]
 8005306:	4a26      	ldr	r2, [pc, #152]	; (80053a0 <HAL_TIM_PWM_Start+0x214>)
 8005308:	4293      	cmp	r3, r2
 800530a:	d018      	beq.n	800533e <HAL_TIM_PWM_Start+0x1b2>
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	4a24      	ldr	r2, [pc, #144]	; (80053a4 <HAL_TIM_PWM_Start+0x218>)
 8005312:	4293      	cmp	r3, r2
 8005314:	d013      	beq.n	800533e <HAL_TIM_PWM_Start+0x1b2>
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	4a23      	ldr	r2, [pc, #140]	; (80053a8 <HAL_TIM_PWM_Start+0x21c>)
 800531c:	4293      	cmp	r3, r2
 800531e:	d00e      	beq.n	800533e <HAL_TIM_PWM_Start+0x1b2>
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	4a19      	ldr	r2, [pc, #100]	; (800538c <HAL_TIM_PWM_Start+0x200>)
 8005326:	4293      	cmp	r3, r2
 8005328:	d009      	beq.n	800533e <HAL_TIM_PWM_Start+0x1b2>
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	681b      	ldr	r3, [r3, #0]
 800532e:	4a18      	ldr	r2, [pc, #96]	; (8005390 <HAL_TIM_PWM_Start+0x204>)
 8005330:	4293      	cmp	r3, r2
 8005332:	d004      	beq.n	800533e <HAL_TIM_PWM_Start+0x1b2>
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	4a18      	ldr	r2, [pc, #96]	; (800539c <HAL_TIM_PWM_Start+0x210>)
 800533a:	4293      	cmp	r3, r2
 800533c:	d115      	bne.n	800536a <HAL_TIM_PWM_Start+0x1de>
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	689a      	ldr	r2, [r3, #8]
 8005344:	4b19      	ldr	r3, [pc, #100]	; (80053ac <HAL_TIM_PWM_Start+0x220>)
 8005346:	4013      	ands	r3, r2
 8005348:	60fb      	str	r3, [r7, #12]
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	2b06      	cmp	r3, #6
 800534e:	d015      	beq.n	800537c <HAL_TIM_PWM_Start+0x1f0>
 8005350:	68fb      	ldr	r3, [r7, #12]
 8005352:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005356:	d011      	beq.n	800537c <HAL_TIM_PWM_Start+0x1f0>
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	681a      	ldr	r2, [r3, #0]
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	f042 0201 	orr.w	r2, r2, #1
 8005366:	601a      	str	r2, [r3, #0]
 8005368:	e008      	b.n	800537c <HAL_TIM_PWM_Start+0x1f0>
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	681a      	ldr	r2, [r3, #0]
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	f042 0201 	orr.w	r2, r2, #1
 8005378:	601a      	str	r2, [r3, #0]
 800537a:	e000      	b.n	800537e <HAL_TIM_PWM_Start+0x1f2>
 800537c:	bf00      	nop
 800537e:	2300      	movs	r3, #0
 8005380:	4618      	mov	r0, r3
 8005382:	3710      	adds	r7, #16
 8005384:	46bd      	mov	sp, r7
 8005386:	bd80      	pop	{r7, pc}
 8005388:	40012c00 	.word	0x40012c00
 800538c:	40013400 	.word	0x40013400
 8005390:	40014000 	.word	0x40014000
 8005394:	40014400 	.word	0x40014400
 8005398:	40014800 	.word	0x40014800
 800539c:	40015000 	.word	0x40015000
 80053a0:	40000400 	.word	0x40000400
 80053a4:	40000800 	.word	0x40000800
 80053a8:	40000c00 	.word	0x40000c00
 80053ac:	00010007 	.word	0x00010007

080053b0 <HAL_TIM_PWM_Stop>:
 80053b0:	b580      	push	{r7, lr}
 80053b2:	b082      	sub	sp, #8
 80053b4:	af00      	add	r7, sp, #0
 80053b6:	6078      	str	r0, [r7, #4]
 80053b8:	6039      	str	r1, [r7, #0]
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	2200      	movs	r2, #0
 80053c0:	6839      	ldr	r1, [r7, #0]
 80053c2:	4618      	mov	r0, r3
 80053c4:	f000 fd76 	bl	8005eb4 <TIM_CCxChannelCmd>
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	681b      	ldr	r3, [r3, #0]
 80053cc:	4a40      	ldr	r2, [pc, #256]	; (80054d0 <HAL_TIM_PWM_Stop+0x120>)
 80053ce:	4293      	cmp	r3, r2
 80053d0:	d018      	beq.n	8005404 <HAL_TIM_PWM_Stop+0x54>
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	681b      	ldr	r3, [r3, #0]
 80053d6:	4a3f      	ldr	r2, [pc, #252]	; (80054d4 <HAL_TIM_PWM_Stop+0x124>)
 80053d8:	4293      	cmp	r3, r2
 80053da:	d013      	beq.n	8005404 <HAL_TIM_PWM_Stop+0x54>
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	4a3d      	ldr	r2, [pc, #244]	; (80054d8 <HAL_TIM_PWM_Stop+0x128>)
 80053e2:	4293      	cmp	r3, r2
 80053e4:	d00e      	beq.n	8005404 <HAL_TIM_PWM_Stop+0x54>
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	4a3c      	ldr	r2, [pc, #240]	; (80054dc <HAL_TIM_PWM_Stop+0x12c>)
 80053ec:	4293      	cmp	r3, r2
 80053ee:	d009      	beq.n	8005404 <HAL_TIM_PWM_Stop+0x54>
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	4a3a      	ldr	r2, [pc, #232]	; (80054e0 <HAL_TIM_PWM_Stop+0x130>)
 80053f6:	4293      	cmp	r3, r2
 80053f8:	d004      	beq.n	8005404 <HAL_TIM_PWM_Stop+0x54>
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	681b      	ldr	r3, [r3, #0]
 80053fe:	4a39      	ldr	r2, [pc, #228]	; (80054e4 <HAL_TIM_PWM_Stop+0x134>)
 8005400:	4293      	cmp	r3, r2
 8005402:	d101      	bne.n	8005408 <HAL_TIM_PWM_Stop+0x58>
 8005404:	2301      	movs	r3, #1
 8005406:	e000      	b.n	800540a <HAL_TIM_PWM_Stop+0x5a>
 8005408:	2300      	movs	r3, #0
 800540a:	2b00      	cmp	r3, #0
 800540c:	d017      	beq.n	800543e <HAL_TIM_PWM_Stop+0x8e>
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	6a1a      	ldr	r2, [r3, #32]
 8005414:	f241 1311 	movw	r3, #4369	; 0x1111
 8005418:	4013      	ands	r3, r2
 800541a:	2b00      	cmp	r3, #0
 800541c:	d10f      	bne.n	800543e <HAL_TIM_PWM_Stop+0x8e>
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	6a1a      	ldr	r2, [r3, #32]
 8005424:	f244 4344 	movw	r3, #17476	; 0x4444
 8005428:	4013      	ands	r3, r2
 800542a:	2b00      	cmp	r3, #0
 800542c:	d107      	bne.n	800543e <HAL_TIM_PWM_Stop+0x8e>
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800543c:	645a      	str	r2, [r3, #68]	; 0x44
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	681b      	ldr	r3, [r3, #0]
 8005442:	6a1a      	ldr	r2, [r3, #32]
 8005444:	f241 1311 	movw	r3, #4369	; 0x1111
 8005448:	4013      	ands	r3, r2
 800544a:	2b00      	cmp	r3, #0
 800544c:	d10f      	bne.n	800546e <HAL_TIM_PWM_Stop+0xbe>
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	681b      	ldr	r3, [r3, #0]
 8005452:	6a1a      	ldr	r2, [r3, #32]
 8005454:	f244 4344 	movw	r3, #17476	; 0x4444
 8005458:	4013      	ands	r3, r2
 800545a:	2b00      	cmp	r3, #0
 800545c:	d107      	bne.n	800546e <HAL_TIM_PWM_Stop+0xbe>
 800545e:	687b      	ldr	r3, [r7, #4]
 8005460:	681b      	ldr	r3, [r3, #0]
 8005462:	681a      	ldr	r2, [r3, #0]
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	f022 0201 	bic.w	r2, r2, #1
 800546c:	601a      	str	r2, [r3, #0]
 800546e:	683b      	ldr	r3, [r7, #0]
 8005470:	2b00      	cmp	r3, #0
 8005472:	d104      	bne.n	800547e <HAL_TIM_PWM_Stop+0xce>
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	2201      	movs	r2, #1
 8005478:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800547c:	e023      	b.n	80054c6 <HAL_TIM_PWM_Stop+0x116>
 800547e:	683b      	ldr	r3, [r7, #0]
 8005480:	2b04      	cmp	r3, #4
 8005482:	d104      	bne.n	800548e <HAL_TIM_PWM_Stop+0xde>
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	2201      	movs	r2, #1
 8005488:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800548c:	e01b      	b.n	80054c6 <HAL_TIM_PWM_Stop+0x116>
 800548e:	683b      	ldr	r3, [r7, #0]
 8005490:	2b08      	cmp	r3, #8
 8005492:	d104      	bne.n	800549e <HAL_TIM_PWM_Stop+0xee>
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	2201      	movs	r2, #1
 8005498:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800549c:	e013      	b.n	80054c6 <HAL_TIM_PWM_Stop+0x116>
 800549e:	683b      	ldr	r3, [r7, #0]
 80054a0:	2b0c      	cmp	r3, #12
 80054a2:	d104      	bne.n	80054ae <HAL_TIM_PWM_Stop+0xfe>
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	2201      	movs	r2, #1
 80054a8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80054ac:	e00b      	b.n	80054c6 <HAL_TIM_PWM_Stop+0x116>
 80054ae:	683b      	ldr	r3, [r7, #0]
 80054b0:	2b10      	cmp	r3, #16
 80054b2:	d104      	bne.n	80054be <HAL_TIM_PWM_Stop+0x10e>
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	2201      	movs	r2, #1
 80054b8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80054bc:	e003      	b.n	80054c6 <HAL_TIM_PWM_Stop+0x116>
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	2201      	movs	r2, #1
 80054c2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80054c6:	2300      	movs	r3, #0
 80054c8:	4618      	mov	r0, r3
 80054ca:	3708      	adds	r7, #8
 80054cc:	46bd      	mov	sp, r7
 80054ce:	bd80      	pop	{r7, pc}
 80054d0:	40012c00 	.word	0x40012c00
 80054d4:	40013400 	.word	0x40013400
 80054d8:	40014000 	.word	0x40014000
 80054dc:	40014400 	.word	0x40014400
 80054e0:	40014800 	.word	0x40014800
 80054e4:	40015000 	.word	0x40015000

080054e8 <HAL_TIM_PWM_ConfigChannel>:
 80054e8:	b580      	push	{r7, lr}
 80054ea:	b086      	sub	sp, #24
 80054ec:	af00      	add	r7, sp, #0
 80054ee:	60f8      	str	r0, [r7, #12]
 80054f0:	60b9      	str	r1, [r7, #8]
 80054f2:	607a      	str	r2, [r7, #4]
 80054f4:	2300      	movs	r3, #0
 80054f6:	75fb      	strb	r3, [r7, #23]
 80054f8:	68fb      	ldr	r3, [r7, #12]
 80054fa:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80054fe:	2b01      	cmp	r3, #1
 8005500:	d101      	bne.n	8005506 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005502:	2302      	movs	r3, #2
 8005504:	e0ff      	b.n	8005706 <HAL_TIM_PWM_ConfigChannel+0x21e>
 8005506:	68fb      	ldr	r3, [r7, #12]
 8005508:	2201      	movs	r2, #1
 800550a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	2b14      	cmp	r3, #20
 8005512:	f200 80f0 	bhi.w	80056f6 <HAL_TIM_PWM_ConfigChannel+0x20e>
 8005516:	a201      	add	r2, pc, #4	; (adr r2, 800551c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005518:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800551c:	08005571 	.word	0x08005571
 8005520:	080056f7 	.word	0x080056f7
 8005524:	080056f7 	.word	0x080056f7
 8005528:	080056f7 	.word	0x080056f7
 800552c:	080055b1 	.word	0x080055b1
 8005530:	080056f7 	.word	0x080056f7
 8005534:	080056f7 	.word	0x080056f7
 8005538:	080056f7 	.word	0x080056f7
 800553c:	080055f3 	.word	0x080055f3
 8005540:	080056f7 	.word	0x080056f7
 8005544:	080056f7 	.word	0x080056f7
 8005548:	080056f7 	.word	0x080056f7
 800554c:	08005633 	.word	0x08005633
 8005550:	080056f7 	.word	0x080056f7
 8005554:	080056f7 	.word	0x080056f7
 8005558:	080056f7 	.word	0x080056f7
 800555c:	08005675 	.word	0x08005675
 8005560:	080056f7 	.word	0x080056f7
 8005564:	080056f7 	.word	0x080056f7
 8005568:	080056f7 	.word	0x080056f7
 800556c:	080056b5 	.word	0x080056b5
 8005570:	68fb      	ldr	r3, [r7, #12]
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	68b9      	ldr	r1, [r7, #8]
 8005576:	4618      	mov	r0, r3
 8005578:	f000 f972 	bl	8005860 <TIM_OC1_SetConfig>
 800557c:	68fb      	ldr	r3, [r7, #12]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	699a      	ldr	r2, [r3, #24]
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	681b      	ldr	r3, [r3, #0]
 8005586:	f042 0208 	orr.w	r2, r2, #8
 800558a:	619a      	str	r2, [r3, #24]
 800558c:	68fb      	ldr	r3, [r7, #12]
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	699a      	ldr	r2, [r3, #24]
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	f022 0204 	bic.w	r2, r2, #4
 800559a:	619a      	str	r2, [r3, #24]
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	6999      	ldr	r1, [r3, #24]
 80055a2:	68bb      	ldr	r3, [r7, #8]
 80055a4:	691a      	ldr	r2, [r3, #16]
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	430a      	orrs	r2, r1
 80055ac:	619a      	str	r2, [r3, #24]
 80055ae:	e0a5      	b.n	80056fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	68b9      	ldr	r1, [r7, #8]
 80055b6:	4618      	mov	r0, r3
 80055b8:	f000 f9ec 	bl	8005994 <TIM_OC2_SetConfig>
 80055bc:	68fb      	ldr	r3, [r7, #12]
 80055be:	681b      	ldr	r3, [r3, #0]
 80055c0:	699a      	ldr	r2, [r3, #24]
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80055ca:	619a      	str	r2, [r3, #24]
 80055cc:	68fb      	ldr	r3, [r7, #12]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	699a      	ldr	r2, [r3, #24]
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80055da:	619a      	str	r2, [r3, #24]
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	6999      	ldr	r1, [r3, #24]
 80055e2:	68bb      	ldr	r3, [r7, #8]
 80055e4:	691b      	ldr	r3, [r3, #16]
 80055e6:	021a      	lsls	r2, r3, #8
 80055e8:	68fb      	ldr	r3, [r7, #12]
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	430a      	orrs	r2, r1
 80055ee:	619a      	str	r2, [r3, #24]
 80055f0:	e084      	b.n	80056fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80055f2:	68fb      	ldr	r3, [r7, #12]
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	68b9      	ldr	r1, [r7, #8]
 80055f8:	4618      	mov	r0, r3
 80055fa:	f000 fa5f 	bl	8005abc <TIM_OC3_SetConfig>
 80055fe:	68fb      	ldr	r3, [r7, #12]
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	69da      	ldr	r2, [r3, #28]
 8005604:	68fb      	ldr	r3, [r7, #12]
 8005606:	681b      	ldr	r3, [r3, #0]
 8005608:	f042 0208 	orr.w	r2, r2, #8
 800560c:	61da      	str	r2, [r3, #28]
 800560e:	68fb      	ldr	r3, [r7, #12]
 8005610:	681b      	ldr	r3, [r3, #0]
 8005612:	69da      	ldr	r2, [r3, #28]
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	681b      	ldr	r3, [r3, #0]
 8005618:	f022 0204 	bic.w	r2, r2, #4
 800561c:	61da      	str	r2, [r3, #28]
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	681b      	ldr	r3, [r3, #0]
 8005622:	69d9      	ldr	r1, [r3, #28]
 8005624:	68bb      	ldr	r3, [r7, #8]
 8005626:	691a      	ldr	r2, [r3, #16]
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	430a      	orrs	r2, r1
 800562e:	61da      	str	r2, [r3, #28]
 8005630:	e064      	b.n	80056fc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005632:	68fb      	ldr	r3, [r7, #12]
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	68b9      	ldr	r1, [r7, #8]
 8005638:	4618      	mov	r0, r3
 800563a:	f000 fad1 	bl	8005be0 <TIM_OC4_SetConfig>
 800563e:	68fb      	ldr	r3, [r7, #12]
 8005640:	681b      	ldr	r3, [r3, #0]
 8005642:	69da      	ldr	r2, [r3, #28]
 8005644:	68fb      	ldr	r3, [r7, #12]
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800564c:	61da      	str	r2, [r3, #28]
 800564e:	68fb      	ldr	r3, [r7, #12]
 8005650:	681b      	ldr	r3, [r3, #0]
 8005652:	69da      	ldr	r2, [r3, #28]
 8005654:	68fb      	ldr	r3, [r7, #12]
 8005656:	681b      	ldr	r3, [r3, #0]
 8005658:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800565c:	61da      	str	r2, [r3, #28]
 800565e:	68fb      	ldr	r3, [r7, #12]
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	69d9      	ldr	r1, [r3, #28]
 8005664:	68bb      	ldr	r3, [r7, #8]
 8005666:	691b      	ldr	r3, [r3, #16]
 8005668:	021a      	lsls	r2, r3, #8
 800566a:	68fb      	ldr	r3, [r7, #12]
 800566c:	681b      	ldr	r3, [r3, #0]
 800566e:	430a      	orrs	r2, r1
 8005670:	61da      	str	r2, [r3, #28]
 8005672:	e043      	b.n	80056fc <HAL_TIM_PWM_ConfigChannel+0x214>
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	681b      	ldr	r3, [r3, #0]
 8005678:	68b9      	ldr	r1, [r7, #8]
 800567a:	4618      	mov	r0, r3
 800567c:	f000 fb44 	bl	8005d08 <TIM_OC5_SetConfig>
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005686:	68fb      	ldr	r3, [r7, #12]
 8005688:	681b      	ldr	r3, [r3, #0]
 800568a:	f042 0208 	orr.w	r2, r2, #8
 800568e:	651a      	str	r2, [r3, #80]	; 0x50
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8005696:	68fb      	ldr	r3, [r7, #12]
 8005698:	681b      	ldr	r3, [r3, #0]
 800569a:	f022 0204 	bic.w	r2, r2, #4
 800569e:	651a      	str	r2, [r3, #80]	; 0x50
 80056a0:	68fb      	ldr	r3, [r7, #12]
 80056a2:	681b      	ldr	r3, [r3, #0]
 80056a4:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80056a6:	68bb      	ldr	r3, [r7, #8]
 80056a8:	691a      	ldr	r2, [r3, #16]
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	430a      	orrs	r2, r1
 80056b0:	651a      	str	r2, [r3, #80]	; 0x50
 80056b2:	e023      	b.n	80056fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80056b4:	68fb      	ldr	r3, [r7, #12]
 80056b6:	681b      	ldr	r3, [r3, #0]
 80056b8:	68b9      	ldr	r1, [r7, #8]
 80056ba:	4618      	mov	r0, r3
 80056bc:	f000 fb8e 	bl	8005ddc <TIM_OC6_SetConfig>
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80056c6:	68fb      	ldr	r3, [r7, #12]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80056ce:	651a      	str	r2, [r3, #80]	; 0x50
 80056d0:	68fb      	ldr	r3, [r7, #12]
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80056d6:	68fb      	ldr	r3, [r7, #12]
 80056d8:	681b      	ldr	r3, [r3, #0]
 80056da:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80056de:	651a      	str	r2, [r3, #80]	; 0x50
 80056e0:	68fb      	ldr	r3, [r7, #12]
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80056e6:	68bb      	ldr	r3, [r7, #8]
 80056e8:	691b      	ldr	r3, [r3, #16]
 80056ea:	021a      	lsls	r2, r3, #8
 80056ec:	68fb      	ldr	r3, [r7, #12]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	430a      	orrs	r2, r1
 80056f2:	651a      	str	r2, [r3, #80]	; 0x50
 80056f4:	e002      	b.n	80056fc <HAL_TIM_PWM_ConfigChannel+0x214>
 80056f6:	2301      	movs	r3, #1
 80056f8:	75fb      	strb	r3, [r7, #23]
 80056fa:	bf00      	nop
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	2200      	movs	r2, #0
 8005700:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005704:	7dfb      	ldrb	r3, [r7, #23]
 8005706:	4618      	mov	r0, r3
 8005708:	3718      	adds	r7, #24
 800570a:	46bd      	mov	sp, r7
 800570c:	bd80      	pop	{r7, pc}
 800570e:	bf00      	nop

08005710 <TIM_Base_SetConfig>:
 8005710:	b480      	push	{r7}
 8005712:	b085      	sub	sp, #20
 8005714:	af00      	add	r7, sp, #0
 8005716:	6078      	str	r0, [r7, #4]
 8005718:	6039      	str	r1, [r7, #0]
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	681b      	ldr	r3, [r3, #0]
 800571e:	60fb      	str	r3, [r7, #12]
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	4a46      	ldr	r2, [pc, #280]	; (800583c <TIM_Base_SetConfig+0x12c>)
 8005724:	4293      	cmp	r3, r2
 8005726:	d017      	beq.n	8005758 <TIM_Base_SetConfig+0x48>
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800572e:	d013      	beq.n	8005758 <TIM_Base_SetConfig+0x48>
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	4a43      	ldr	r2, [pc, #268]	; (8005840 <TIM_Base_SetConfig+0x130>)
 8005734:	4293      	cmp	r3, r2
 8005736:	d00f      	beq.n	8005758 <TIM_Base_SetConfig+0x48>
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	4a42      	ldr	r2, [pc, #264]	; (8005844 <TIM_Base_SetConfig+0x134>)
 800573c:	4293      	cmp	r3, r2
 800573e:	d00b      	beq.n	8005758 <TIM_Base_SetConfig+0x48>
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	4a41      	ldr	r2, [pc, #260]	; (8005848 <TIM_Base_SetConfig+0x138>)
 8005744:	4293      	cmp	r3, r2
 8005746:	d007      	beq.n	8005758 <TIM_Base_SetConfig+0x48>
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	4a40      	ldr	r2, [pc, #256]	; (800584c <TIM_Base_SetConfig+0x13c>)
 800574c:	4293      	cmp	r3, r2
 800574e:	d003      	beq.n	8005758 <TIM_Base_SetConfig+0x48>
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	4a3f      	ldr	r2, [pc, #252]	; (8005850 <TIM_Base_SetConfig+0x140>)
 8005754:	4293      	cmp	r3, r2
 8005756:	d108      	bne.n	800576a <TIM_Base_SetConfig+0x5a>
 8005758:	68fb      	ldr	r3, [r7, #12]
 800575a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800575e:	60fb      	str	r3, [r7, #12]
 8005760:	683b      	ldr	r3, [r7, #0]
 8005762:	685b      	ldr	r3, [r3, #4]
 8005764:	68fa      	ldr	r2, [r7, #12]
 8005766:	4313      	orrs	r3, r2
 8005768:	60fb      	str	r3, [r7, #12]
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	4a33      	ldr	r2, [pc, #204]	; (800583c <TIM_Base_SetConfig+0x12c>)
 800576e:	4293      	cmp	r3, r2
 8005770:	d023      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 8005772:	687b      	ldr	r3, [r7, #4]
 8005774:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005778:	d01f      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 800577a:	687b      	ldr	r3, [r7, #4]
 800577c:	4a30      	ldr	r2, [pc, #192]	; (8005840 <TIM_Base_SetConfig+0x130>)
 800577e:	4293      	cmp	r3, r2
 8005780:	d01b      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	4a2f      	ldr	r2, [pc, #188]	; (8005844 <TIM_Base_SetConfig+0x134>)
 8005786:	4293      	cmp	r3, r2
 8005788:	d017      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 800578a:	687b      	ldr	r3, [r7, #4]
 800578c:	4a2e      	ldr	r2, [pc, #184]	; (8005848 <TIM_Base_SetConfig+0x138>)
 800578e:	4293      	cmp	r3, r2
 8005790:	d013      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	4a2d      	ldr	r2, [pc, #180]	; (800584c <TIM_Base_SetConfig+0x13c>)
 8005796:	4293      	cmp	r3, r2
 8005798:	d00f      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	4a2d      	ldr	r2, [pc, #180]	; (8005854 <TIM_Base_SetConfig+0x144>)
 800579e:	4293      	cmp	r3, r2
 80057a0:	d00b      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	4a2c      	ldr	r2, [pc, #176]	; (8005858 <TIM_Base_SetConfig+0x148>)
 80057a6:	4293      	cmp	r3, r2
 80057a8:	d007      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	4a2b      	ldr	r2, [pc, #172]	; (800585c <TIM_Base_SetConfig+0x14c>)
 80057ae:	4293      	cmp	r3, r2
 80057b0:	d003      	beq.n	80057ba <TIM_Base_SetConfig+0xaa>
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	4a26      	ldr	r2, [pc, #152]	; (8005850 <TIM_Base_SetConfig+0x140>)
 80057b6:	4293      	cmp	r3, r2
 80057b8:	d108      	bne.n	80057cc <TIM_Base_SetConfig+0xbc>
 80057ba:	68fb      	ldr	r3, [r7, #12]
 80057bc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80057c0:	60fb      	str	r3, [r7, #12]
 80057c2:	683b      	ldr	r3, [r7, #0]
 80057c4:	68db      	ldr	r3, [r3, #12]
 80057c6:	68fa      	ldr	r2, [r7, #12]
 80057c8:	4313      	orrs	r3, r2
 80057ca:	60fb      	str	r3, [r7, #12]
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80057d2:	683b      	ldr	r3, [r7, #0]
 80057d4:	695b      	ldr	r3, [r3, #20]
 80057d6:	4313      	orrs	r3, r2
 80057d8:	60fb      	str	r3, [r7, #12]
 80057da:	687b      	ldr	r3, [r7, #4]
 80057dc:	68fa      	ldr	r2, [r7, #12]
 80057de:	601a      	str	r2, [r3, #0]
 80057e0:	683b      	ldr	r3, [r7, #0]
 80057e2:	689a      	ldr	r2, [r3, #8]
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	62da      	str	r2, [r3, #44]	; 0x2c
 80057e8:	683b      	ldr	r3, [r7, #0]
 80057ea:	681a      	ldr	r2, [r3, #0]
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	629a      	str	r2, [r3, #40]	; 0x28
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	4a12      	ldr	r2, [pc, #72]	; (800583c <TIM_Base_SetConfig+0x12c>)
 80057f4:	4293      	cmp	r3, r2
 80057f6:	d013      	beq.n	8005820 <TIM_Base_SetConfig+0x110>
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	4a14      	ldr	r2, [pc, #80]	; (800584c <TIM_Base_SetConfig+0x13c>)
 80057fc:	4293      	cmp	r3, r2
 80057fe:	d00f      	beq.n	8005820 <TIM_Base_SetConfig+0x110>
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	4a14      	ldr	r2, [pc, #80]	; (8005854 <TIM_Base_SetConfig+0x144>)
 8005804:	4293      	cmp	r3, r2
 8005806:	d00b      	beq.n	8005820 <TIM_Base_SetConfig+0x110>
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	4a13      	ldr	r2, [pc, #76]	; (8005858 <TIM_Base_SetConfig+0x148>)
 800580c:	4293      	cmp	r3, r2
 800580e:	d007      	beq.n	8005820 <TIM_Base_SetConfig+0x110>
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	4a12      	ldr	r2, [pc, #72]	; (800585c <TIM_Base_SetConfig+0x14c>)
 8005814:	4293      	cmp	r3, r2
 8005816:	d003      	beq.n	8005820 <TIM_Base_SetConfig+0x110>
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	4a0d      	ldr	r2, [pc, #52]	; (8005850 <TIM_Base_SetConfig+0x140>)
 800581c:	4293      	cmp	r3, r2
 800581e:	d103      	bne.n	8005828 <TIM_Base_SetConfig+0x118>
 8005820:	683b      	ldr	r3, [r7, #0]
 8005822:	691a      	ldr	r2, [r3, #16]
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	631a      	str	r2, [r3, #48]	; 0x30
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	2201      	movs	r2, #1
 800582c:	615a      	str	r2, [r3, #20]
 800582e:	bf00      	nop
 8005830:	3714      	adds	r7, #20
 8005832:	46bd      	mov	sp, r7
 8005834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005838:	4770      	bx	lr
 800583a:	bf00      	nop
 800583c:	40012c00 	.word	0x40012c00
 8005840:	40000400 	.word	0x40000400
 8005844:	40000800 	.word	0x40000800
 8005848:	40000c00 	.word	0x40000c00
 800584c:	40013400 	.word	0x40013400
 8005850:	40015000 	.word	0x40015000
 8005854:	40014000 	.word	0x40014000
 8005858:	40014400 	.word	0x40014400
 800585c:	40014800 	.word	0x40014800

08005860 <TIM_OC1_SetConfig>:
 8005860:	b480      	push	{r7}
 8005862:	b087      	sub	sp, #28
 8005864:	af00      	add	r7, sp, #0
 8005866:	6078      	str	r0, [r7, #4]
 8005868:	6039      	str	r1, [r7, #0]
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	6a1b      	ldr	r3, [r3, #32]
 800586e:	f023 0201 	bic.w	r2, r3, #1
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	621a      	str	r2, [r3, #32]
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	6a1b      	ldr	r3, [r3, #32]
 800587a:	617b      	str	r3, [r7, #20]
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	685b      	ldr	r3, [r3, #4]
 8005880:	613b      	str	r3, [r7, #16]
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	699b      	ldr	r3, [r3, #24]
 8005886:	60fb      	str	r3, [r7, #12]
 8005888:	68fb      	ldr	r3, [r7, #12]
 800588a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800588e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005892:	60fb      	str	r3, [r7, #12]
 8005894:	68fb      	ldr	r3, [r7, #12]
 8005896:	f023 0303 	bic.w	r3, r3, #3
 800589a:	60fb      	str	r3, [r7, #12]
 800589c:	683b      	ldr	r3, [r7, #0]
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	68fa      	ldr	r2, [r7, #12]
 80058a2:	4313      	orrs	r3, r2
 80058a4:	60fb      	str	r3, [r7, #12]
 80058a6:	697b      	ldr	r3, [r7, #20]
 80058a8:	f023 0302 	bic.w	r3, r3, #2
 80058ac:	617b      	str	r3, [r7, #20]
 80058ae:	683b      	ldr	r3, [r7, #0]
 80058b0:	689b      	ldr	r3, [r3, #8]
 80058b2:	697a      	ldr	r2, [r7, #20]
 80058b4:	4313      	orrs	r3, r2
 80058b6:	617b      	str	r3, [r7, #20]
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	4a30      	ldr	r2, [pc, #192]	; (800597c <TIM_OC1_SetConfig+0x11c>)
 80058bc:	4293      	cmp	r3, r2
 80058be:	d013      	beq.n	80058e8 <TIM_OC1_SetConfig+0x88>
 80058c0:	687b      	ldr	r3, [r7, #4]
 80058c2:	4a2f      	ldr	r2, [pc, #188]	; (8005980 <TIM_OC1_SetConfig+0x120>)
 80058c4:	4293      	cmp	r3, r2
 80058c6:	d00f      	beq.n	80058e8 <TIM_OC1_SetConfig+0x88>
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	4a2e      	ldr	r2, [pc, #184]	; (8005984 <TIM_OC1_SetConfig+0x124>)
 80058cc:	4293      	cmp	r3, r2
 80058ce:	d00b      	beq.n	80058e8 <TIM_OC1_SetConfig+0x88>
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	4a2d      	ldr	r2, [pc, #180]	; (8005988 <TIM_OC1_SetConfig+0x128>)
 80058d4:	4293      	cmp	r3, r2
 80058d6:	d007      	beq.n	80058e8 <TIM_OC1_SetConfig+0x88>
 80058d8:	687b      	ldr	r3, [r7, #4]
 80058da:	4a2c      	ldr	r2, [pc, #176]	; (800598c <TIM_OC1_SetConfig+0x12c>)
 80058dc:	4293      	cmp	r3, r2
 80058de:	d003      	beq.n	80058e8 <TIM_OC1_SetConfig+0x88>
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	4a2b      	ldr	r2, [pc, #172]	; (8005990 <TIM_OC1_SetConfig+0x130>)
 80058e4:	4293      	cmp	r3, r2
 80058e6:	d10c      	bne.n	8005902 <TIM_OC1_SetConfig+0xa2>
 80058e8:	697b      	ldr	r3, [r7, #20]
 80058ea:	f023 0308 	bic.w	r3, r3, #8
 80058ee:	617b      	str	r3, [r7, #20]
 80058f0:	683b      	ldr	r3, [r7, #0]
 80058f2:	68db      	ldr	r3, [r3, #12]
 80058f4:	697a      	ldr	r2, [r7, #20]
 80058f6:	4313      	orrs	r3, r2
 80058f8:	617b      	str	r3, [r7, #20]
 80058fa:	697b      	ldr	r3, [r7, #20]
 80058fc:	f023 0304 	bic.w	r3, r3, #4
 8005900:	617b      	str	r3, [r7, #20]
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	4a1d      	ldr	r2, [pc, #116]	; (800597c <TIM_OC1_SetConfig+0x11c>)
 8005906:	4293      	cmp	r3, r2
 8005908:	d013      	beq.n	8005932 <TIM_OC1_SetConfig+0xd2>
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	4a1c      	ldr	r2, [pc, #112]	; (8005980 <TIM_OC1_SetConfig+0x120>)
 800590e:	4293      	cmp	r3, r2
 8005910:	d00f      	beq.n	8005932 <TIM_OC1_SetConfig+0xd2>
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	4a1b      	ldr	r2, [pc, #108]	; (8005984 <TIM_OC1_SetConfig+0x124>)
 8005916:	4293      	cmp	r3, r2
 8005918:	d00b      	beq.n	8005932 <TIM_OC1_SetConfig+0xd2>
 800591a:	687b      	ldr	r3, [r7, #4]
 800591c:	4a1a      	ldr	r2, [pc, #104]	; (8005988 <TIM_OC1_SetConfig+0x128>)
 800591e:	4293      	cmp	r3, r2
 8005920:	d007      	beq.n	8005932 <TIM_OC1_SetConfig+0xd2>
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	4a19      	ldr	r2, [pc, #100]	; (800598c <TIM_OC1_SetConfig+0x12c>)
 8005926:	4293      	cmp	r3, r2
 8005928:	d003      	beq.n	8005932 <TIM_OC1_SetConfig+0xd2>
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	4a18      	ldr	r2, [pc, #96]	; (8005990 <TIM_OC1_SetConfig+0x130>)
 800592e:	4293      	cmp	r3, r2
 8005930:	d111      	bne.n	8005956 <TIM_OC1_SetConfig+0xf6>
 8005932:	693b      	ldr	r3, [r7, #16]
 8005934:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005938:	613b      	str	r3, [r7, #16]
 800593a:	693b      	ldr	r3, [r7, #16]
 800593c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005940:	613b      	str	r3, [r7, #16]
 8005942:	683b      	ldr	r3, [r7, #0]
 8005944:	695b      	ldr	r3, [r3, #20]
 8005946:	693a      	ldr	r2, [r7, #16]
 8005948:	4313      	orrs	r3, r2
 800594a:	613b      	str	r3, [r7, #16]
 800594c:	683b      	ldr	r3, [r7, #0]
 800594e:	699b      	ldr	r3, [r3, #24]
 8005950:	693a      	ldr	r2, [r7, #16]
 8005952:	4313      	orrs	r3, r2
 8005954:	613b      	str	r3, [r7, #16]
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	693a      	ldr	r2, [r7, #16]
 800595a:	605a      	str	r2, [r3, #4]
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	68fa      	ldr	r2, [r7, #12]
 8005960:	619a      	str	r2, [r3, #24]
 8005962:	683b      	ldr	r3, [r7, #0]
 8005964:	685a      	ldr	r2, [r3, #4]
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	635a      	str	r2, [r3, #52]	; 0x34
 800596a:	687b      	ldr	r3, [r7, #4]
 800596c:	697a      	ldr	r2, [r7, #20]
 800596e:	621a      	str	r2, [r3, #32]
 8005970:	bf00      	nop
 8005972:	371c      	adds	r7, #28
 8005974:	46bd      	mov	sp, r7
 8005976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800597a:	4770      	bx	lr
 800597c:	40012c00 	.word	0x40012c00
 8005980:	40013400 	.word	0x40013400
 8005984:	40014000 	.word	0x40014000
 8005988:	40014400 	.word	0x40014400
 800598c:	40014800 	.word	0x40014800
 8005990:	40015000 	.word	0x40015000

08005994 <TIM_OC2_SetConfig>:
 8005994:	b480      	push	{r7}
 8005996:	b087      	sub	sp, #28
 8005998:	af00      	add	r7, sp, #0
 800599a:	6078      	str	r0, [r7, #4]
 800599c:	6039      	str	r1, [r7, #0]
 800599e:	687b      	ldr	r3, [r7, #4]
 80059a0:	6a1b      	ldr	r3, [r3, #32]
 80059a2:	f023 0210 	bic.w	r2, r3, #16
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	621a      	str	r2, [r3, #32]
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	6a1b      	ldr	r3, [r3, #32]
 80059ae:	617b      	str	r3, [r7, #20]
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	685b      	ldr	r3, [r3, #4]
 80059b4:	613b      	str	r3, [r7, #16]
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	699b      	ldr	r3, [r3, #24]
 80059ba:	60fb      	str	r3, [r7, #12]
 80059bc:	68fb      	ldr	r3, [r7, #12]
 80059be:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80059c2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80059c6:	60fb      	str	r3, [r7, #12]
 80059c8:	68fb      	ldr	r3, [r7, #12]
 80059ca:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80059ce:	60fb      	str	r3, [r7, #12]
 80059d0:	683b      	ldr	r3, [r7, #0]
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	021b      	lsls	r3, r3, #8
 80059d6:	68fa      	ldr	r2, [r7, #12]
 80059d8:	4313      	orrs	r3, r2
 80059da:	60fb      	str	r3, [r7, #12]
 80059dc:	697b      	ldr	r3, [r7, #20]
 80059de:	f023 0320 	bic.w	r3, r3, #32
 80059e2:	617b      	str	r3, [r7, #20]
 80059e4:	683b      	ldr	r3, [r7, #0]
 80059e6:	689b      	ldr	r3, [r3, #8]
 80059e8:	011b      	lsls	r3, r3, #4
 80059ea:	697a      	ldr	r2, [r7, #20]
 80059ec:	4313      	orrs	r3, r2
 80059ee:	617b      	str	r3, [r7, #20]
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	4a2c      	ldr	r2, [pc, #176]	; (8005aa4 <TIM_OC2_SetConfig+0x110>)
 80059f4:	4293      	cmp	r3, r2
 80059f6:	d007      	beq.n	8005a08 <TIM_OC2_SetConfig+0x74>
 80059f8:	687b      	ldr	r3, [r7, #4]
 80059fa:	4a2b      	ldr	r2, [pc, #172]	; (8005aa8 <TIM_OC2_SetConfig+0x114>)
 80059fc:	4293      	cmp	r3, r2
 80059fe:	d003      	beq.n	8005a08 <TIM_OC2_SetConfig+0x74>
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	4a2a      	ldr	r2, [pc, #168]	; (8005aac <TIM_OC2_SetConfig+0x118>)
 8005a04:	4293      	cmp	r3, r2
 8005a06:	d10d      	bne.n	8005a24 <TIM_OC2_SetConfig+0x90>
 8005a08:	697b      	ldr	r3, [r7, #20]
 8005a0a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005a0e:	617b      	str	r3, [r7, #20]
 8005a10:	683b      	ldr	r3, [r7, #0]
 8005a12:	68db      	ldr	r3, [r3, #12]
 8005a14:	011b      	lsls	r3, r3, #4
 8005a16:	697a      	ldr	r2, [r7, #20]
 8005a18:	4313      	orrs	r3, r2
 8005a1a:	617b      	str	r3, [r7, #20]
 8005a1c:	697b      	ldr	r3, [r7, #20]
 8005a1e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005a22:	617b      	str	r3, [r7, #20]
 8005a24:	687b      	ldr	r3, [r7, #4]
 8005a26:	4a1f      	ldr	r2, [pc, #124]	; (8005aa4 <TIM_OC2_SetConfig+0x110>)
 8005a28:	4293      	cmp	r3, r2
 8005a2a:	d013      	beq.n	8005a54 <TIM_OC2_SetConfig+0xc0>
 8005a2c:	687b      	ldr	r3, [r7, #4]
 8005a2e:	4a1e      	ldr	r2, [pc, #120]	; (8005aa8 <TIM_OC2_SetConfig+0x114>)
 8005a30:	4293      	cmp	r3, r2
 8005a32:	d00f      	beq.n	8005a54 <TIM_OC2_SetConfig+0xc0>
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	4a1e      	ldr	r2, [pc, #120]	; (8005ab0 <TIM_OC2_SetConfig+0x11c>)
 8005a38:	4293      	cmp	r3, r2
 8005a3a:	d00b      	beq.n	8005a54 <TIM_OC2_SetConfig+0xc0>
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	4a1d      	ldr	r2, [pc, #116]	; (8005ab4 <TIM_OC2_SetConfig+0x120>)
 8005a40:	4293      	cmp	r3, r2
 8005a42:	d007      	beq.n	8005a54 <TIM_OC2_SetConfig+0xc0>
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	4a1c      	ldr	r2, [pc, #112]	; (8005ab8 <TIM_OC2_SetConfig+0x124>)
 8005a48:	4293      	cmp	r3, r2
 8005a4a:	d003      	beq.n	8005a54 <TIM_OC2_SetConfig+0xc0>
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	4a17      	ldr	r2, [pc, #92]	; (8005aac <TIM_OC2_SetConfig+0x118>)
 8005a50:	4293      	cmp	r3, r2
 8005a52:	d113      	bne.n	8005a7c <TIM_OC2_SetConfig+0xe8>
 8005a54:	693b      	ldr	r3, [r7, #16]
 8005a56:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005a5a:	613b      	str	r3, [r7, #16]
 8005a5c:	693b      	ldr	r3, [r7, #16]
 8005a5e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005a62:	613b      	str	r3, [r7, #16]
 8005a64:	683b      	ldr	r3, [r7, #0]
 8005a66:	695b      	ldr	r3, [r3, #20]
 8005a68:	009b      	lsls	r3, r3, #2
 8005a6a:	693a      	ldr	r2, [r7, #16]
 8005a6c:	4313      	orrs	r3, r2
 8005a6e:	613b      	str	r3, [r7, #16]
 8005a70:	683b      	ldr	r3, [r7, #0]
 8005a72:	699b      	ldr	r3, [r3, #24]
 8005a74:	009b      	lsls	r3, r3, #2
 8005a76:	693a      	ldr	r2, [r7, #16]
 8005a78:	4313      	orrs	r3, r2
 8005a7a:	613b      	str	r3, [r7, #16]
 8005a7c:	687b      	ldr	r3, [r7, #4]
 8005a7e:	693a      	ldr	r2, [r7, #16]
 8005a80:	605a      	str	r2, [r3, #4]
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	68fa      	ldr	r2, [r7, #12]
 8005a86:	619a      	str	r2, [r3, #24]
 8005a88:	683b      	ldr	r3, [r7, #0]
 8005a8a:	685a      	ldr	r2, [r3, #4]
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	639a      	str	r2, [r3, #56]	; 0x38
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	697a      	ldr	r2, [r7, #20]
 8005a94:	621a      	str	r2, [r3, #32]
 8005a96:	bf00      	nop
 8005a98:	371c      	adds	r7, #28
 8005a9a:	46bd      	mov	sp, r7
 8005a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005aa0:	4770      	bx	lr
 8005aa2:	bf00      	nop
 8005aa4:	40012c00 	.word	0x40012c00
 8005aa8:	40013400 	.word	0x40013400
 8005aac:	40015000 	.word	0x40015000
 8005ab0:	40014000 	.word	0x40014000
 8005ab4:	40014400 	.word	0x40014400
 8005ab8:	40014800 	.word	0x40014800

08005abc <TIM_OC3_SetConfig>:
 8005abc:	b480      	push	{r7}
 8005abe:	b087      	sub	sp, #28
 8005ac0:	af00      	add	r7, sp, #0
 8005ac2:	6078      	str	r0, [r7, #4]
 8005ac4:	6039      	str	r1, [r7, #0]
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	6a1b      	ldr	r3, [r3, #32]
 8005aca:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	621a      	str	r2, [r3, #32]
 8005ad2:	687b      	ldr	r3, [r7, #4]
 8005ad4:	6a1b      	ldr	r3, [r3, #32]
 8005ad6:	617b      	str	r3, [r7, #20]
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	685b      	ldr	r3, [r3, #4]
 8005adc:	613b      	str	r3, [r7, #16]
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	69db      	ldr	r3, [r3, #28]
 8005ae2:	60fb      	str	r3, [r7, #12]
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005aea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005aee:	60fb      	str	r3, [r7, #12]
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	f023 0303 	bic.w	r3, r3, #3
 8005af6:	60fb      	str	r3, [r7, #12]
 8005af8:	683b      	ldr	r3, [r7, #0]
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	68fa      	ldr	r2, [r7, #12]
 8005afe:	4313      	orrs	r3, r2
 8005b00:	60fb      	str	r3, [r7, #12]
 8005b02:	697b      	ldr	r3, [r7, #20]
 8005b04:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005b08:	617b      	str	r3, [r7, #20]
 8005b0a:	683b      	ldr	r3, [r7, #0]
 8005b0c:	689b      	ldr	r3, [r3, #8]
 8005b0e:	021b      	lsls	r3, r3, #8
 8005b10:	697a      	ldr	r2, [r7, #20]
 8005b12:	4313      	orrs	r3, r2
 8005b14:	617b      	str	r3, [r7, #20]
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	4a2b      	ldr	r2, [pc, #172]	; (8005bc8 <TIM_OC3_SetConfig+0x10c>)
 8005b1a:	4293      	cmp	r3, r2
 8005b1c:	d007      	beq.n	8005b2e <TIM_OC3_SetConfig+0x72>
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	4a2a      	ldr	r2, [pc, #168]	; (8005bcc <TIM_OC3_SetConfig+0x110>)
 8005b22:	4293      	cmp	r3, r2
 8005b24:	d003      	beq.n	8005b2e <TIM_OC3_SetConfig+0x72>
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	4a29      	ldr	r2, [pc, #164]	; (8005bd0 <TIM_OC3_SetConfig+0x114>)
 8005b2a:	4293      	cmp	r3, r2
 8005b2c:	d10d      	bne.n	8005b4a <TIM_OC3_SetConfig+0x8e>
 8005b2e:	697b      	ldr	r3, [r7, #20]
 8005b30:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005b34:	617b      	str	r3, [r7, #20]
 8005b36:	683b      	ldr	r3, [r7, #0]
 8005b38:	68db      	ldr	r3, [r3, #12]
 8005b3a:	021b      	lsls	r3, r3, #8
 8005b3c:	697a      	ldr	r2, [r7, #20]
 8005b3e:	4313      	orrs	r3, r2
 8005b40:	617b      	str	r3, [r7, #20]
 8005b42:	697b      	ldr	r3, [r7, #20]
 8005b44:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005b48:	617b      	str	r3, [r7, #20]
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	4a1e      	ldr	r2, [pc, #120]	; (8005bc8 <TIM_OC3_SetConfig+0x10c>)
 8005b4e:	4293      	cmp	r3, r2
 8005b50:	d013      	beq.n	8005b7a <TIM_OC3_SetConfig+0xbe>
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	4a1d      	ldr	r2, [pc, #116]	; (8005bcc <TIM_OC3_SetConfig+0x110>)
 8005b56:	4293      	cmp	r3, r2
 8005b58:	d00f      	beq.n	8005b7a <TIM_OC3_SetConfig+0xbe>
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	4a1d      	ldr	r2, [pc, #116]	; (8005bd4 <TIM_OC3_SetConfig+0x118>)
 8005b5e:	4293      	cmp	r3, r2
 8005b60:	d00b      	beq.n	8005b7a <TIM_OC3_SetConfig+0xbe>
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	4a1c      	ldr	r2, [pc, #112]	; (8005bd8 <TIM_OC3_SetConfig+0x11c>)
 8005b66:	4293      	cmp	r3, r2
 8005b68:	d007      	beq.n	8005b7a <TIM_OC3_SetConfig+0xbe>
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	4a1b      	ldr	r2, [pc, #108]	; (8005bdc <TIM_OC3_SetConfig+0x120>)
 8005b6e:	4293      	cmp	r3, r2
 8005b70:	d003      	beq.n	8005b7a <TIM_OC3_SetConfig+0xbe>
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	4a16      	ldr	r2, [pc, #88]	; (8005bd0 <TIM_OC3_SetConfig+0x114>)
 8005b76:	4293      	cmp	r3, r2
 8005b78:	d113      	bne.n	8005ba2 <TIM_OC3_SetConfig+0xe6>
 8005b7a:	693b      	ldr	r3, [r7, #16]
 8005b7c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005b80:	613b      	str	r3, [r7, #16]
 8005b82:	693b      	ldr	r3, [r7, #16]
 8005b84:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005b88:	613b      	str	r3, [r7, #16]
 8005b8a:	683b      	ldr	r3, [r7, #0]
 8005b8c:	695b      	ldr	r3, [r3, #20]
 8005b8e:	011b      	lsls	r3, r3, #4
 8005b90:	693a      	ldr	r2, [r7, #16]
 8005b92:	4313      	orrs	r3, r2
 8005b94:	613b      	str	r3, [r7, #16]
 8005b96:	683b      	ldr	r3, [r7, #0]
 8005b98:	699b      	ldr	r3, [r3, #24]
 8005b9a:	011b      	lsls	r3, r3, #4
 8005b9c:	693a      	ldr	r2, [r7, #16]
 8005b9e:	4313      	orrs	r3, r2
 8005ba0:	613b      	str	r3, [r7, #16]
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	693a      	ldr	r2, [r7, #16]
 8005ba6:	605a      	str	r2, [r3, #4]
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	68fa      	ldr	r2, [r7, #12]
 8005bac:	61da      	str	r2, [r3, #28]
 8005bae:	683b      	ldr	r3, [r7, #0]
 8005bb0:	685a      	ldr	r2, [r3, #4]
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	63da      	str	r2, [r3, #60]	; 0x3c
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	697a      	ldr	r2, [r7, #20]
 8005bba:	621a      	str	r2, [r3, #32]
 8005bbc:	bf00      	nop
 8005bbe:	371c      	adds	r7, #28
 8005bc0:	46bd      	mov	sp, r7
 8005bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bc6:	4770      	bx	lr
 8005bc8:	40012c00 	.word	0x40012c00
 8005bcc:	40013400 	.word	0x40013400
 8005bd0:	40015000 	.word	0x40015000
 8005bd4:	40014000 	.word	0x40014000
 8005bd8:	40014400 	.word	0x40014400
 8005bdc:	40014800 	.word	0x40014800

08005be0 <TIM_OC4_SetConfig>:
 8005be0:	b480      	push	{r7}
 8005be2:	b087      	sub	sp, #28
 8005be4:	af00      	add	r7, sp, #0
 8005be6:	6078      	str	r0, [r7, #4]
 8005be8:	6039      	str	r1, [r7, #0]
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	6a1b      	ldr	r3, [r3, #32]
 8005bee:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	621a      	str	r2, [r3, #32]
 8005bf6:	687b      	ldr	r3, [r7, #4]
 8005bf8:	6a1b      	ldr	r3, [r3, #32]
 8005bfa:	617b      	str	r3, [r7, #20]
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	685b      	ldr	r3, [r3, #4]
 8005c00:	613b      	str	r3, [r7, #16]
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	69db      	ldr	r3, [r3, #28]
 8005c06:	60fb      	str	r3, [r7, #12]
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005c0e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005c12:	60fb      	str	r3, [r7, #12]
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005c1a:	60fb      	str	r3, [r7, #12]
 8005c1c:	683b      	ldr	r3, [r7, #0]
 8005c1e:	681b      	ldr	r3, [r3, #0]
 8005c20:	021b      	lsls	r3, r3, #8
 8005c22:	68fa      	ldr	r2, [r7, #12]
 8005c24:	4313      	orrs	r3, r2
 8005c26:	60fb      	str	r3, [r7, #12]
 8005c28:	697b      	ldr	r3, [r7, #20]
 8005c2a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005c2e:	617b      	str	r3, [r7, #20]
 8005c30:	683b      	ldr	r3, [r7, #0]
 8005c32:	689b      	ldr	r3, [r3, #8]
 8005c34:	031b      	lsls	r3, r3, #12
 8005c36:	697a      	ldr	r2, [r7, #20]
 8005c38:	4313      	orrs	r3, r2
 8005c3a:	617b      	str	r3, [r7, #20]
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	4a2c      	ldr	r2, [pc, #176]	; (8005cf0 <TIM_OC4_SetConfig+0x110>)
 8005c40:	4293      	cmp	r3, r2
 8005c42:	d007      	beq.n	8005c54 <TIM_OC4_SetConfig+0x74>
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	4a2b      	ldr	r2, [pc, #172]	; (8005cf4 <TIM_OC4_SetConfig+0x114>)
 8005c48:	4293      	cmp	r3, r2
 8005c4a:	d003      	beq.n	8005c54 <TIM_OC4_SetConfig+0x74>
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	4a2a      	ldr	r2, [pc, #168]	; (8005cf8 <TIM_OC4_SetConfig+0x118>)
 8005c50:	4293      	cmp	r3, r2
 8005c52:	d10d      	bne.n	8005c70 <TIM_OC4_SetConfig+0x90>
 8005c54:	697b      	ldr	r3, [r7, #20]
 8005c56:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8005c5a:	617b      	str	r3, [r7, #20]
 8005c5c:	683b      	ldr	r3, [r7, #0]
 8005c5e:	68db      	ldr	r3, [r3, #12]
 8005c60:	031b      	lsls	r3, r3, #12
 8005c62:	697a      	ldr	r2, [r7, #20]
 8005c64:	4313      	orrs	r3, r2
 8005c66:	617b      	str	r3, [r7, #20]
 8005c68:	697b      	ldr	r3, [r7, #20]
 8005c6a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005c6e:	617b      	str	r3, [r7, #20]
 8005c70:	687b      	ldr	r3, [r7, #4]
 8005c72:	4a1f      	ldr	r2, [pc, #124]	; (8005cf0 <TIM_OC4_SetConfig+0x110>)
 8005c74:	4293      	cmp	r3, r2
 8005c76:	d013      	beq.n	8005ca0 <TIM_OC4_SetConfig+0xc0>
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	4a1e      	ldr	r2, [pc, #120]	; (8005cf4 <TIM_OC4_SetConfig+0x114>)
 8005c7c:	4293      	cmp	r3, r2
 8005c7e:	d00f      	beq.n	8005ca0 <TIM_OC4_SetConfig+0xc0>
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	4a1e      	ldr	r2, [pc, #120]	; (8005cfc <TIM_OC4_SetConfig+0x11c>)
 8005c84:	4293      	cmp	r3, r2
 8005c86:	d00b      	beq.n	8005ca0 <TIM_OC4_SetConfig+0xc0>
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	4a1d      	ldr	r2, [pc, #116]	; (8005d00 <TIM_OC4_SetConfig+0x120>)
 8005c8c:	4293      	cmp	r3, r2
 8005c8e:	d007      	beq.n	8005ca0 <TIM_OC4_SetConfig+0xc0>
 8005c90:	687b      	ldr	r3, [r7, #4]
 8005c92:	4a1c      	ldr	r2, [pc, #112]	; (8005d04 <TIM_OC4_SetConfig+0x124>)
 8005c94:	4293      	cmp	r3, r2
 8005c96:	d003      	beq.n	8005ca0 <TIM_OC4_SetConfig+0xc0>
 8005c98:	687b      	ldr	r3, [r7, #4]
 8005c9a:	4a17      	ldr	r2, [pc, #92]	; (8005cf8 <TIM_OC4_SetConfig+0x118>)
 8005c9c:	4293      	cmp	r3, r2
 8005c9e:	d113      	bne.n	8005cc8 <TIM_OC4_SetConfig+0xe8>
 8005ca0:	693b      	ldr	r3, [r7, #16]
 8005ca2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005ca6:	613b      	str	r3, [r7, #16]
 8005ca8:	693b      	ldr	r3, [r7, #16]
 8005caa:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8005cae:	613b      	str	r3, [r7, #16]
 8005cb0:	683b      	ldr	r3, [r7, #0]
 8005cb2:	695b      	ldr	r3, [r3, #20]
 8005cb4:	019b      	lsls	r3, r3, #6
 8005cb6:	693a      	ldr	r2, [r7, #16]
 8005cb8:	4313      	orrs	r3, r2
 8005cba:	613b      	str	r3, [r7, #16]
 8005cbc:	683b      	ldr	r3, [r7, #0]
 8005cbe:	699b      	ldr	r3, [r3, #24]
 8005cc0:	019b      	lsls	r3, r3, #6
 8005cc2:	693a      	ldr	r2, [r7, #16]
 8005cc4:	4313      	orrs	r3, r2
 8005cc6:	613b      	str	r3, [r7, #16]
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	693a      	ldr	r2, [r7, #16]
 8005ccc:	605a      	str	r2, [r3, #4]
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	68fa      	ldr	r2, [r7, #12]
 8005cd2:	61da      	str	r2, [r3, #28]
 8005cd4:	683b      	ldr	r3, [r7, #0]
 8005cd6:	685a      	ldr	r2, [r3, #4]
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	641a      	str	r2, [r3, #64]	; 0x40
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	697a      	ldr	r2, [r7, #20]
 8005ce0:	621a      	str	r2, [r3, #32]
 8005ce2:	bf00      	nop
 8005ce4:	371c      	adds	r7, #28
 8005ce6:	46bd      	mov	sp, r7
 8005ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cec:	4770      	bx	lr
 8005cee:	bf00      	nop
 8005cf0:	40012c00 	.word	0x40012c00
 8005cf4:	40013400 	.word	0x40013400
 8005cf8:	40015000 	.word	0x40015000
 8005cfc:	40014000 	.word	0x40014000
 8005d00:	40014400 	.word	0x40014400
 8005d04:	40014800 	.word	0x40014800

08005d08 <TIM_OC5_SetConfig>:
 8005d08:	b480      	push	{r7}
 8005d0a:	b087      	sub	sp, #28
 8005d0c:	af00      	add	r7, sp, #0
 8005d0e:	6078      	str	r0, [r7, #4]
 8005d10:	6039      	str	r1, [r7, #0]
 8005d12:	687b      	ldr	r3, [r7, #4]
 8005d14:	6a1b      	ldr	r3, [r3, #32]
 8005d16:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	621a      	str	r2, [r3, #32]
 8005d1e:	687b      	ldr	r3, [r7, #4]
 8005d20:	6a1b      	ldr	r3, [r3, #32]
 8005d22:	613b      	str	r3, [r7, #16]
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	685b      	ldr	r3, [r3, #4]
 8005d28:	617b      	str	r3, [r7, #20]
 8005d2a:	687b      	ldr	r3, [r7, #4]
 8005d2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005d2e:	60fb      	str	r3, [r7, #12]
 8005d30:	68fb      	ldr	r3, [r7, #12]
 8005d32:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005d36:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005d3a:	60fb      	str	r3, [r7, #12]
 8005d3c:	683b      	ldr	r3, [r7, #0]
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	68fa      	ldr	r2, [r7, #12]
 8005d42:	4313      	orrs	r3, r2
 8005d44:	60fb      	str	r3, [r7, #12]
 8005d46:	693b      	ldr	r3, [r7, #16]
 8005d48:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8005d4c:	613b      	str	r3, [r7, #16]
 8005d4e:	683b      	ldr	r3, [r7, #0]
 8005d50:	689b      	ldr	r3, [r3, #8]
 8005d52:	041b      	lsls	r3, r3, #16
 8005d54:	693a      	ldr	r2, [r7, #16]
 8005d56:	4313      	orrs	r3, r2
 8005d58:	613b      	str	r3, [r7, #16]
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	4a19      	ldr	r2, [pc, #100]	; (8005dc4 <TIM_OC5_SetConfig+0xbc>)
 8005d5e:	4293      	cmp	r3, r2
 8005d60:	d013      	beq.n	8005d8a <TIM_OC5_SetConfig+0x82>
 8005d62:	687b      	ldr	r3, [r7, #4]
 8005d64:	4a18      	ldr	r2, [pc, #96]	; (8005dc8 <TIM_OC5_SetConfig+0xc0>)
 8005d66:	4293      	cmp	r3, r2
 8005d68:	d00f      	beq.n	8005d8a <TIM_OC5_SetConfig+0x82>
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	4a17      	ldr	r2, [pc, #92]	; (8005dcc <TIM_OC5_SetConfig+0xc4>)
 8005d6e:	4293      	cmp	r3, r2
 8005d70:	d00b      	beq.n	8005d8a <TIM_OC5_SetConfig+0x82>
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	4a16      	ldr	r2, [pc, #88]	; (8005dd0 <TIM_OC5_SetConfig+0xc8>)
 8005d76:	4293      	cmp	r3, r2
 8005d78:	d007      	beq.n	8005d8a <TIM_OC5_SetConfig+0x82>
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	4a15      	ldr	r2, [pc, #84]	; (8005dd4 <TIM_OC5_SetConfig+0xcc>)
 8005d7e:	4293      	cmp	r3, r2
 8005d80:	d003      	beq.n	8005d8a <TIM_OC5_SetConfig+0x82>
 8005d82:	687b      	ldr	r3, [r7, #4]
 8005d84:	4a14      	ldr	r2, [pc, #80]	; (8005dd8 <TIM_OC5_SetConfig+0xd0>)
 8005d86:	4293      	cmp	r3, r2
 8005d88:	d109      	bne.n	8005d9e <TIM_OC5_SetConfig+0x96>
 8005d8a:	697b      	ldr	r3, [r7, #20]
 8005d8c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005d90:	617b      	str	r3, [r7, #20]
 8005d92:	683b      	ldr	r3, [r7, #0]
 8005d94:	695b      	ldr	r3, [r3, #20]
 8005d96:	021b      	lsls	r3, r3, #8
 8005d98:	697a      	ldr	r2, [r7, #20]
 8005d9a:	4313      	orrs	r3, r2
 8005d9c:	617b      	str	r3, [r7, #20]
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	697a      	ldr	r2, [r7, #20]
 8005da2:	605a      	str	r2, [r3, #4]
 8005da4:	687b      	ldr	r3, [r7, #4]
 8005da6:	68fa      	ldr	r2, [r7, #12]
 8005da8:	651a      	str	r2, [r3, #80]	; 0x50
 8005daa:	683b      	ldr	r3, [r7, #0]
 8005dac:	685a      	ldr	r2, [r3, #4]
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	649a      	str	r2, [r3, #72]	; 0x48
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	693a      	ldr	r2, [r7, #16]
 8005db6:	621a      	str	r2, [r3, #32]
 8005db8:	bf00      	nop
 8005dba:	371c      	adds	r7, #28
 8005dbc:	46bd      	mov	sp, r7
 8005dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dc2:	4770      	bx	lr
 8005dc4:	40012c00 	.word	0x40012c00
 8005dc8:	40013400 	.word	0x40013400
 8005dcc:	40014000 	.word	0x40014000
 8005dd0:	40014400 	.word	0x40014400
 8005dd4:	40014800 	.word	0x40014800
 8005dd8:	40015000 	.word	0x40015000

08005ddc <TIM_OC6_SetConfig>:
 8005ddc:	b480      	push	{r7}
 8005dde:	b087      	sub	sp, #28
 8005de0:	af00      	add	r7, sp, #0
 8005de2:	6078      	str	r0, [r7, #4]
 8005de4:	6039      	str	r1, [r7, #0]
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	6a1b      	ldr	r3, [r3, #32]
 8005dea:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	621a      	str	r2, [r3, #32]
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	6a1b      	ldr	r3, [r3, #32]
 8005df6:	613b      	str	r3, [r7, #16]
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	685b      	ldr	r3, [r3, #4]
 8005dfc:	617b      	str	r3, [r7, #20]
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005e02:	60fb      	str	r3, [r7, #12]
 8005e04:	68fb      	ldr	r3, [r7, #12]
 8005e06:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005e0a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005e0e:	60fb      	str	r3, [r7, #12]
 8005e10:	683b      	ldr	r3, [r7, #0]
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	021b      	lsls	r3, r3, #8
 8005e16:	68fa      	ldr	r2, [r7, #12]
 8005e18:	4313      	orrs	r3, r2
 8005e1a:	60fb      	str	r3, [r7, #12]
 8005e1c:	693b      	ldr	r3, [r7, #16]
 8005e1e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8005e22:	613b      	str	r3, [r7, #16]
 8005e24:	683b      	ldr	r3, [r7, #0]
 8005e26:	689b      	ldr	r3, [r3, #8]
 8005e28:	051b      	lsls	r3, r3, #20
 8005e2a:	693a      	ldr	r2, [r7, #16]
 8005e2c:	4313      	orrs	r3, r2
 8005e2e:	613b      	str	r3, [r7, #16]
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	4a1a      	ldr	r2, [pc, #104]	; (8005e9c <TIM_OC6_SetConfig+0xc0>)
 8005e34:	4293      	cmp	r3, r2
 8005e36:	d013      	beq.n	8005e60 <TIM_OC6_SetConfig+0x84>
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	4a19      	ldr	r2, [pc, #100]	; (8005ea0 <TIM_OC6_SetConfig+0xc4>)
 8005e3c:	4293      	cmp	r3, r2
 8005e3e:	d00f      	beq.n	8005e60 <TIM_OC6_SetConfig+0x84>
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	4a18      	ldr	r2, [pc, #96]	; (8005ea4 <TIM_OC6_SetConfig+0xc8>)
 8005e44:	4293      	cmp	r3, r2
 8005e46:	d00b      	beq.n	8005e60 <TIM_OC6_SetConfig+0x84>
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	4a17      	ldr	r2, [pc, #92]	; (8005ea8 <TIM_OC6_SetConfig+0xcc>)
 8005e4c:	4293      	cmp	r3, r2
 8005e4e:	d007      	beq.n	8005e60 <TIM_OC6_SetConfig+0x84>
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	4a16      	ldr	r2, [pc, #88]	; (8005eac <TIM_OC6_SetConfig+0xd0>)
 8005e54:	4293      	cmp	r3, r2
 8005e56:	d003      	beq.n	8005e60 <TIM_OC6_SetConfig+0x84>
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	4a15      	ldr	r2, [pc, #84]	; (8005eb0 <TIM_OC6_SetConfig+0xd4>)
 8005e5c:	4293      	cmp	r3, r2
 8005e5e:	d109      	bne.n	8005e74 <TIM_OC6_SetConfig+0x98>
 8005e60:	697b      	ldr	r3, [r7, #20]
 8005e62:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005e66:	617b      	str	r3, [r7, #20]
 8005e68:	683b      	ldr	r3, [r7, #0]
 8005e6a:	695b      	ldr	r3, [r3, #20]
 8005e6c:	029b      	lsls	r3, r3, #10
 8005e6e:	697a      	ldr	r2, [r7, #20]
 8005e70:	4313      	orrs	r3, r2
 8005e72:	617b      	str	r3, [r7, #20]
 8005e74:	687b      	ldr	r3, [r7, #4]
 8005e76:	697a      	ldr	r2, [r7, #20]
 8005e78:	605a      	str	r2, [r3, #4]
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	68fa      	ldr	r2, [r7, #12]
 8005e7e:	651a      	str	r2, [r3, #80]	; 0x50
 8005e80:	683b      	ldr	r3, [r7, #0]
 8005e82:	685a      	ldr	r2, [r3, #4]
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	64da      	str	r2, [r3, #76]	; 0x4c
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	693a      	ldr	r2, [r7, #16]
 8005e8c:	621a      	str	r2, [r3, #32]
 8005e8e:	bf00      	nop
 8005e90:	371c      	adds	r7, #28
 8005e92:	46bd      	mov	sp, r7
 8005e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e98:	4770      	bx	lr
 8005e9a:	bf00      	nop
 8005e9c:	40012c00 	.word	0x40012c00
 8005ea0:	40013400 	.word	0x40013400
 8005ea4:	40014000 	.word	0x40014000
 8005ea8:	40014400 	.word	0x40014400
 8005eac:	40014800 	.word	0x40014800
 8005eb0:	40015000 	.word	0x40015000

08005eb4 <TIM_CCxChannelCmd>:
 8005eb4:	b480      	push	{r7}
 8005eb6:	b087      	sub	sp, #28
 8005eb8:	af00      	add	r7, sp, #0
 8005eba:	60f8      	str	r0, [r7, #12]
 8005ebc:	60b9      	str	r1, [r7, #8]
 8005ebe:	607a      	str	r2, [r7, #4]
 8005ec0:	68bb      	ldr	r3, [r7, #8]
 8005ec2:	f003 031f 	and.w	r3, r3, #31
 8005ec6:	2201      	movs	r2, #1
 8005ec8:	fa02 f303 	lsl.w	r3, r2, r3
 8005ecc:	617b      	str	r3, [r7, #20]
 8005ece:	68fb      	ldr	r3, [r7, #12]
 8005ed0:	6a1a      	ldr	r2, [r3, #32]
 8005ed2:	697b      	ldr	r3, [r7, #20]
 8005ed4:	43db      	mvns	r3, r3
 8005ed6:	401a      	ands	r2, r3
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	621a      	str	r2, [r3, #32]
 8005edc:	68fb      	ldr	r3, [r7, #12]
 8005ede:	6a1a      	ldr	r2, [r3, #32]
 8005ee0:	68bb      	ldr	r3, [r7, #8]
 8005ee2:	f003 031f 	and.w	r3, r3, #31
 8005ee6:	6879      	ldr	r1, [r7, #4]
 8005ee8:	fa01 f303 	lsl.w	r3, r1, r3
 8005eec:	431a      	orrs	r2, r3
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	621a      	str	r2, [r3, #32]
 8005ef2:	bf00      	nop
 8005ef4:	371c      	adds	r7, #28
 8005ef6:	46bd      	mov	sp, r7
 8005ef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005efc:	4770      	bx	lr
	...

08005f00 <HAL_TIMEx_PWMN_Start>:
 8005f00:	b580      	push	{r7, lr}
 8005f02:	b084      	sub	sp, #16
 8005f04:	af00      	add	r7, sp, #0
 8005f06:	6078      	str	r0, [r7, #4]
 8005f08:	6039      	str	r1, [r7, #0]
 8005f0a:	683b      	ldr	r3, [r7, #0]
 8005f0c:	2b00      	cmp	r3, #0
 8005f0e:	d109      	bne.n	8005f24 <HAL_TIMEx_PWMN_Start+0x24>
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8005f16:	b2db      	uxtb	r3, r3
 8005f18:	2b01      	cmp	r3, #1
 8005f1a:	bf14      	ite	ne
 8005f1c:	2301      	movne	r3, #1
 8005f1e:	2300      	moveq	r3, #0
 8005f20:	b2db      	uxtb	r3, r3
 8005f22:	e022      	b.n	8005f6a <HAL_TIMEx_PWMN_Start+0x6a>
 8005f24:	683b      	ldr	r3, [r7, #0]
 8005f26:	2b04      	cmp	r3, #4
 8005f28:	d109      	bne.n	8005f3e <HAL_TIMEx_PWMN_Start+0x3e>
 8005f2a:	687b      	ldr	r3, [r7, #4]
 8005f2c:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8005f30:	b2db      	uxtb	r3, r3
 8005f32:	2b01      	cmp	r3, #1
 8005f34:	bf14      	ite	ne
 8005f36:	2301      	movne	r3, #1
 8005f38:	2300      	moveq	r3, #0
 8005f3a:	b2db      	uxtb	r3, r3
 8005f3c:	e015      	b.n	8005f6a <HAL_TIMEx_PWMN_Start+0x6a>
 8005f3e:	683b      	ldr	r3, [r7, #0]
 8005f40:	2b08      	cmp	r3, #8
 8005f42:	d109      	bne.n	8005f58 <HAL_TIMEx_PWMN_Start+0x58>
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 8005f4a:	b2db      	uxtb	r3, r3
 8005f4c:	2b01      	cmp	r3, #1
 8005f4e:	bf14      	ite	ne
 8005f50:	2301      	movne	r3, #1
 8005f52:	2300      	moveq	r3, #0
 8005f54:	b2db      	uxtb	r3, r3
 8005f56:	e008      	b.n	8005f6a <HAL_TIMEx_PWMN_Start+0x6a>
 8005f58:	687b      	ldr	r3, [r7, #4]
 8005f5a:	f893 3047 	ldrb.w	r3, [r3, #71]	; 0x47
 8005f5e:	b2db      	uxtb	r3, r3
 8005f60:	2b01      	cmp	r3, #1
 8005f62:	bf14      	ite	ne
 8005f64:	2301      	movne	r3, #1
 8005f66:	2300      	moveq	r3, #0
 8005f68:	b2db      	uxtb	r3, r3
 8005f6a:	2b00      	cmp	r3, #0
 8005f6c:	d001      	beq.n	8005f72 <HAL_TIMEx_PWMN_Start+0x72>
 8005f6e:	2301      	movs	r3, #1
 8005f70:	e073      	b.n	800605a <HAL_TIMEx_PWMN_Start+0x15a>
 8005f72:	683b      	ldr	r3, [r7, #0]
 8005f74:	2b00      	cmp	r3, #0
 8005f76:	d104      	bne.n	8005f82 <HAL_TIMEx_PWMN_Start+0x82>
 8005f78:	687b      	ldr	r3, [r7, #4]
 8005f7a:	2202      	movs	r2, #2
 8005f7c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005f80:	e013      	b.n	8005faa <HAL_TIMEx_PWMN_Start+0xaa>
 8005f82:	683b      	ldr	r3, [r7, #0]
 8005f84:	2b04      	cmp	r3, #4
 8005f86:	d104      	bne.n	8005f92 <HAL_TIMEx_PWMN_Start+0x92>
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	2202      	movs	r2, #2
 8005f8c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005f90:	e00b      	b.n	8005faa <HAL_TIMEx_PWMN_Start+0xaa>
 8005f92:	683b      	ldr	r3, [r7, #0]
 8005f94:	2b08      	cmp	r3, #8
 8005f96:	d104      	bne.n	8005fa2 <HAL_TIMEx_PWMN_Start+0xa2>
 8005f98:	687b      	ldr	r3, [r7, #4]
 8005f9a:	2202      	movs	r2, #2
 8005f9c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005fa0:	e003      	b.n	8005faa <HAL_TIMEx_PWMN_Start+0xaa>
 8005fa2:	687b      	ldr	r3, [r7, #4]
 8005fa4:	2202      	movs	r2, #2
 8005fa6:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005faa:	687b      	ldr	r3, [r7, #4]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	2204      	movs	r2, #4
 8005fb0:	6839      	ldr	r1, [r7, #0]
 8005fb2:	4618      	mov	r0, r3
 8005fb4:	f000 fa1f 	bl	80063f6 <TIM_CCxNChannelCmd>
 8005fb8:	687b      	ldr	r3, [r7, #4]
 8005fba:	681b      	ldr	r3, [r3, #0]
 8005fbc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	681b      	ldr	r3, [r3, #0]
 8005fc2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005fc6:	645a      	str	r2, [r3, #68]	; 0x44
 8005fc8:	687b      	ldr	r3, [r7, #4]
 8005fca:	681b      	ldr	r3, [r3, #0]
 8005fcc:	4a25      	ldr	r2, [pc, #148]	; (8006064 <HAL_TIMEx_PWMN_Start+0x164>)
 8005fce:	4293      	cmp	r3, r2
 8005fd0:	d022      	beq.n	8006018 <HAL_TIMEx_PWMN_Start+0x118>
 8005fd2:	687b      	ldr	r3, [r7, #4]
 8005fd4:	681b      	ldr	r3, [r3, #0]
 8005fd6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005fda:	d01d      	beq.n	8006018 <HAL_TIMEx_PWMN_Start+0x118>
 8005fdc:	687b      	ldr	r3, [r7, #4]
 8005fde:	681b      	ldr	r3, [r3, #0]
 8005fe0:	4a21      	ldr	r2, [pc, #132]	; (8006068 <HAL_TIMEx_PWMN_Start+0x168>)
 8005fe2:	4293      	cmp	r3, r2
 8005fe4:	d018      	beq.n	8006018 <HAL_TIMEx_PWMN_Start+0x118>
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	681b      	ldr	r3, [r3, #0]
 8005fea:	4a20      	ldr	r2, [pc, #128]	; (800606c <HAL_TIMEx_PWMN_Start+0x16c>)
 8005fec:	4293      	cmp	r3, r2
 8005fee:	d013      	beq.n	8006018 <HAL_TIMEx_PWMN_Start+0x118>
 8005ff0:	687b      	ldr	r3, [r7, #4]
 8005ff2:	681b      	ldr	r3, [r3, #0]
 8005ff4:	4a1e      	ldr	r2, [pc, #120]	; (8006070 <HAL_TIMEx_PWMN_Start+0x170>)
 8005ff6:	4293      	cmp	r3, r2
 8005ff8:	d00e      	beq.n	8006018 <HAL_TIMEx_PWMN_Start+0x118>
 8005ffa:	687b      	ldr	r3, [r7, #4]
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	4a1d      	ldr	r2, [pc, #116]	; (8006074 <HAL_TIMEx_PWMN_Start+0x174>)
 8006000:	4293      	cmp	r3, r2
 8006002:	d009      	beq.n	8006018 <HAL_TIMEx_PWMN_Start+0x118>
 8006004:	687b      	ldr	r3, [r7, #4]
 8006006:	681b      	ldr	r3, [r3, #0]
 8006008:	4a1b      	ldr	r2, [pc, #108]	; (8006078 <HAL_TIMEx_PWMN_Start+0x178>)
 800600a:	4293      	cmp	r3, r2
 800600c:	d004      	beq.n	8006018 <HAL_TIMEx_PWMN_Start+0x118>
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	681b      	ldr	r3, [r3, #0]
 8006012:	4a1a      	ldr	r2, [pc, #104]	; (800607c <HAL_TIMEx_PWMN_Start+0x17c>)
 8006014:	4293      	cmp	r3, r2
 8006016:	d115      	bne.n	8006044 <HAL_TIMEx_PWMN_Start+0x144>
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	681b      	ldr	r3, [r3, #0]
 800601c:	689a      	ldr	r2, [r3, #8]
 800601e:	4b18      	ldr	r3, [pc, #96]	; (8006080 <HAL_TIMEx_PWMN_Start+0x180>)
 8006020:	4013      	ands	r3, r2
 8006022:	60fb      	str	r3, [r7, #12]
 8006024:	68fb      	ldr	r3, [r7, #12]
 8006026:	2b06      	cmp	r3, #6
 8006028:	d015      	beq.n	8006056 <HAL_TIMEx_PWMN_Start+0x156>
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006030:	d011      	beq.n	8006056 <HAL_TIMEx_PWMN_Start+0x156>
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	681b      	ldr	r3, [r3, #0]
 8006036:	681a      	ldr	r2, [r3, #0]
 8006038:	687b      	ldr	r3, [r7, #4]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	f042 0201 	orr.w	r2, r2, #1
 8006040:	601a      	str	r2, [r3, #0]
 8006042:	e008      	b.n	8006056 <HAL_TIMEx_PWMN_Start+0x156>
 8006044:	687b      	ldr	r3, [r7, #4]
 8006046:	681b      	ldr	r3, [r3, #0]
 8006048:	681a      	ldr	r2, [r3, #0]
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	681b      	ldr	r3, [r3, #0]
 800604e:	f042 0201 	orr.w	r2, r2, #1
 8006052:	601a      	str	r2, [r3, #0]
 8006054:	e000      	b.n	8006058 <HAL_TIMEx_PWMN_Start+0x158>
 8006056:	bf00      	nop
 8006058:	2300      	movs	r3, #0
 800605a:	4618      	mov	r0, r3
 800605c:	3710      	adds	r7, #16
 800605e:	46bd      	mov	sp, r7
 8006060:	bd80      	pop	{r7, pc}
 8006062:	bf00      	nop
 8006064:	40012c00 	.word	0x40012c00
 8006068:	40000400 	.word	0x40000400
 800606c:	40000800 	.word	0x40000800
 8006070:	40000c00 	.word	0x40000c00
 8006074:	40013400 	.word	0x40013400
 8006078:	40014000 	.word	0x40014000
 800607c:	40015000 	.word	0x40015000
 8006080:	00010007 	.word	0x00010007

08006084 <HAL_TIMEx_PWMN_Stop>:
 8006084:	b580      	push	{r7, lr}
 8006086:	b082      	sub	sp, #8
 8006088:	af00      	add	r7, sp, #0
 800608a:	6078      	str	r0, [r7, #4]
 800608c:	6039      	str	r1, [r7, #0]
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	2200      	movs	r2, #0
 8006094:	6839      	ldr	r1, [r7, #0]
 8006096:	4618      	mov	r0, r3
 8006098:	f000 f9ad 	bl	80063f6 <TIM_CCxNChannelCmd>
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	681b      	ldr	r3, [r3, #0]
 80060a0:	6a1a      	ldr	r2, [r3, #32]
 80060a2:	f241 1311 	movw	r3, #4369	; 0x1111
 80060a6:	4013      	ands	r3, r2
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d10f      	bne.n	80060cc <HAL_TIMEx_PWMN_Stop+0x48>
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	681b      	ldr	r3, [r3, #0]
 80060b0:	6a1a      	ldr	r2, [r3, #32]
 80060b2:	f244 4344 	movw	r3, #17476	; 0x4444
 80060b6:	4013      	ands	r3, r2
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	d107      	bne.n	80060cc <HAL_TIMEx_PWMN_Stop+0x48>
 80060bc:	687b      	ldr	r3, [r7, #4]
 80060be:	681b      	ldr	r3, [r3, #0]
 80060c0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80060c2:	687b      	ldr	r3, [r7, #4]
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80060ca:	645a      	str	r2, [r3, #68]	; 0x44
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	6a1a      	ldr	r2, [r3, #32]
 80060d2:	f241 1311 	movw	r3, #4369	; 0x1111
 80060d6:	4013      	ands	r3, r2
 80060d8:	2b00      	cmp	r3, #0
 80060da:	d10f      	bne.n	80060fc <HAL_TIMEx_PWMN_Stop+0x78>
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	6a1a      	ldr	r2, [r3, #32]
 80060e2:	f244 4344 	movw	r3, #17476	; 0x4444
 80060e6:	4013      	ands	r3, r2
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d107      	bne.n	80060fc <HAL_TIMEx_PWMN_Stop+0x78>
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	681b      	ldr	r3, [r3, #0]
 80060f0:	681a      	ldr	r2, [r3, #0]
 80060f2:	687b      	ldr	r3, [r7, #4]
 80060f4:	681b      	ldr	r3, [r3, #0]
 80060f6:	f022 0201 	bic.w	r2, r2, #1
 80060fa:	601a      	str	r2, [r3, #0]
 80060fc:	683b      	ldr	r3, [r7, #0]
 80060fe:	2b00      	cmp	r3, #0
 8006100:	d104      	bne.n	800610c <HAL_TIMEx_PWMN_Stop+0x88>
 8006102:	687b      	ldr	r3, [r7, #4]
 8006104:	2201      	movs	r2, #1
 8006106:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800610a:	e013      	b.n	8006134 <HAL_TIMEx_PWMN_Stop+0xb0>
 800610c:	683b      	ldr	r3, [r7, #0]
 800610e:	2b04      	cmp	r3, #4
 8006110:	d104      	bne.n	800611c <HAL_TIMEx_PWMN_Stop+0x98>
 8006112:	687b      	ldr	r3, [r7, #4]
 8006114:	2201      	movs	r2, #1
 8006116:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800611a:	e00b      	b.n	8006134 <HAL_TIMEx_PWMN_Stop+0xb0>
 800611c:	683b      	ldr	r3, [r7, #0]
 800611e:	2b08      	cmp	r3, #8
 8006120:	d104      	bne.n	800612c <HAL_TIMEx_PWMN_Stop+0xa8>
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	2201      	movs	r2, #1
 8006126:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800612a:	e003      	b.n	8006134 <HAL_TIMEx_PWMN_Stop+0xb0>
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	2201      	movs	r2, #1
 8006130:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8006134:	2300      	movs	r3, #0
 8006136:	4618      	mov	r0, r3
 8006138:	3708      	adds	r7, #8
 800613a:	46bd      	mov	sp, r7
 800613c:	bd80      	pop	{r7, pc}
	...

08006140 <HAL_TIMEx_MasterConfigSynchronization>:
 8006140:	b480      	push	{r7}
 8006142:	b085      	sub	sp, #20
 8006144:	af00      	add	r7, sp, #0
 8006146:	6078      	str	r0, [r7, #4]
 8006148:	6039      	str	r1, [r7, #0]
 800614a:	687b      	ldr	r3, [r7, #4]
 800614c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006150:	2b01      	cmp	r3, #1
 8006152:	d101      	bne.n	8006158 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006154:	2302      	movs	r3, #2
 8006156:	e074      	b.n	8006242 <HAL_TIMEx_MasterConfigSynchronization+0x102>
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	2201      	movs	r2, #1
 800615c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006160:	687b      	ldr	r3, [r7, #4]
 8006162:	2202      	movs	r2, #2
 8006164:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	685b      	ldr	r3, [r3, #4]
 800616e:	60fb      	str	r3, [r7, #12]
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	681b      	ldr	r3, [r3, #0]
 8006174:	689b      	ldr	r3, [r3, #8]
 8006176:	60bb      	str	r3, [r7, #8]
 8006178:	687b      	ldr	r3, [r7, #4]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	4a34      	ldr	r2, [pc, #208]	; (8006250 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800617e:	4293      	cmp	r3, r2
 8006180:	d009      	beq.n	8006196 <HAL_TIMEx_MasterConfigSynchronization+0x56>
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	681b      	ldr	r3, [r3, #0]
 8006186:	4a33      	ldr	r2, [pc, #204]	; (8006254 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8006188:	4293      	cmp	r3, r2
 800618a:	d004      	beq.n	8006196 <HAL_TIMEx_MasterConfigSynchronization+0x56>
 800618c:	687b      	ldr	r3, [r7, #4]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	4a31      	ldr	r2, [pc, #196]	; (8006258 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8006192:	4293      	cmp	r3, r2
 8006194:	d108      	bne.n	80061a8 <HAL_TIMEx_MasterConfigSynchronization+0x68>
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800619c:	60fb      	str	r3, [r7, #12]
 800619e:	683b      	ldr	r3, [r7, #0]
 80061a0:	685b      	ldr	r3, [r3, #4]
 80061a2:	68fa      	ldr	r2, [r7, #12]
 80061a4:	4313      	orrs	r3, r2
 80061a6:	60fb      	str	r3, [r7, #12]
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 80061ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80061b2:	60fb      	str	r3, [r7, #12]
 80061b4:	683b      	ldr	r3, [r7, #0]
 80061b6:	681b      	ldr	r3, [r3, #0]
 80061b8:	68fa      	ldr	r2, [r7, #12]
 80061ba:	4313      	orrs	r3, r2
 80061bc:	60fb      	str	r3, [r7, #12]
 80061be:	687b      	ldr	r3, [r7, #4]
 80061c0:	681b      	ldr	r3, [r3, #0]
 80061c2:	68fa      	ldr	r2, [r7, #12]
 80061c4:	605a      	str	r2, [r3, #4]
 80061c6:	687b      	ldr	r3, [r7, #4]
 80061c8:	681b      	ldr	r3, [r3, #0]
 80061ca:	4a21      	ldr	r2, [pc, #132]	; (8006250 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 80061cc:	4293      	cmp	r3, r2
 80061ce:	d022      	beq.n	8006216 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80061d0:	687b      	ldr	r3, [r7, #4]
 80061d2:	681b      	ldr	r3, [r3, #0]
 80061d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80061d8:	d01d      	beq.n	8006216 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	4a1f      	ldr	r2, [pc, #124]	; (800625c <HAL_TIMEx_MasterConfigSynchronization+0x11c>)
 80061e0:	4293      	cmp	r3, r2
 80061e2:	d018      	beq.n	8006216 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	4a1d      	ldr	r2, [pc, #116]	; (8006260 <HAL_TIMEx_MasterConfigSynchronization+0x120>)
 80061ea:	4293      	cmp	r3, r2
 80061ec:	d013      	beq.n	8006216 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	4a1c      	ldr	r2, [pc, #112]	; (8006264 <HAL_TIMEx_MasterConfigSynchronization+0x124>)
 80061f4:	4293      	cmp	r3, r2
 80061f6:	d00e      	beq.n	8006216 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	4a15      	ldr	r2, [pc, #84]	; (8006254 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80061fe:	4293      	cmp	r3, r2
 8006200:	d009      	beq.n	8006216 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	4a18      	ldr	r2, [pc, #96]	; (8006268 <HAL_TIMEx_MasterConfigSynchronization+0x128>)
 8006208:	4293      	cmp	r3, r2
 800620a:	d004      	beq.n	8006216 <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	4a11      	ldr	r2, [pc, #68]	; (8006258 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8006212:	4293      	cmp	r3, r2
 8006214:	d10c      	bne.n	8006230 <HAL_TIMEx_MasterConfigSynchronization+0xf0>
 8006216:	68bb      	ldr	r3, [r7, #8]
 8006218:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800621c:	60bb      	str	r3, [r7, #8]
 800621e:	683b      	ldr	r3, [r7, #0]
 8006220:	689b      	ldr	r3, [r3, #8]
 8006222:	68ba      	ldr	r2, [r7, #8]
 8006224:	4313      	orrs	r3, r2
 8006226:	60bb      	str	r3, [r7, #8]
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	68ba      	ldr	r2, [r7, #8]
 800622e:	609a      	str	r2, [r3, #8]
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	2201      	movs	r2, #1
 8006234:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	2200      	movs	r2, #0
 800623c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006240:	2300      	movs	r3, #0
 8006242:	4618      	mov	r0, r3
 8006244:	3714      	adds	r7, #20
 8006246:	46bd      	mov	sp, r7
 8006248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800624c:	4770      	bx	lr
 800624e:	bf00      	nop
 8006250:	40012c00 	.word	0x40012c00
 8006254:	40013400 	.word	0x40013400
 8006258:	40015000 	.word	0x40015000
 800625c:	40000400 	.word	0x40000400
 8006260:	40000800 	.word	0x40000800
 8006264:	40000c00 	.word	0x40000c00
 8006268:	40014000 	.word	0x40014000

0800626c <HAL_TIMEx_ConfigBreakDeadTime>:
 800626c:	b480      	push	{r7}
 800626e:	b085      	sub	sp, #20
 8006270:	af00      	add	r7, sp, #0
 8006272:	6078      	str	r0, [r7, #4]
 8006274:	6039      	str	r1, [r7, #0]
 8006276:	2300      	movs	r3, #0
 8006278:	60fb      	str	r3, [r7, #12]
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006280:	2b01      	cmp	r3, #1
 8006282:	d101      	bne.n	8006288 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8006284:	2302      	movs	r3, #2
 8006286:	e096      	b.n	80063b6 <HAL_TIMEx_ConfigBreakDeadTime+0x14a>
 8006288:	687b      	ldr	r3, [r7, #4]
 800628a:	2201      	movs	r2, #1
 800628c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006290:	68fb      	ldr	r3, [r7, #12]
 8006292:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8006296:	683b      	ldr	r3, [r7, #0]
 8006298:	68db      	ldr	r3, [r3, #12]
 800629a:	4313      	orrs	r3, r2
 800629c:	60fb      	str	r3, [r7, #12]
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 80062a4:	683b      	ldr	r3, [r7, #0]
 80062a6:	689b      	ldr	r3, [r3, #8]
 80062a8:	4313      	orrs	r3, r2
 80062aa:	60fb      	str	r3, [r7, #12]
 80062ac:	68fb      	ldr	r3, [r7, #12]
 80062ae:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 80062b2:	683b      	ldr	r3, [r7, #0]
 80062b4:	685b      	ldr	r3, [r3, #4]
 80062b6:	4313      	orrs	r3, r2
 80062b8:	60fb      	str	r3, [r7, #12]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80062c0:	683b      	ldr	r3, [r7, #0]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	4313      	orrs	r3, r2
 80062c6:	60fb      	str	r3, [r7, #12]
 80062c8:	68fb      	ldr	r3, [r7, #12]
 80062ca:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80062ce:	683b      	ldr	r3, [r7, #0]
 80062d0:	691b      	ldr	r3, [r3, #16]
 80062d2:	4313      	orrs	r3, r2
 80062d4:	60fb      	str	r3, [r7, #12]
 80062d6:	68fb      	ldr	r3, [r7, #12]
 80062d8:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80062dc:	683b      	ldr	r3, [r7, #0]
 80062de:	695b      	ldr	r3, [r3, #20]
 80062e0:	4313      	orrs	r3, r2
 80062e2:	60fb      	str	r3, [r7, #12]
 80062e4:	68fb      	ldr	r3, [r7, #12]
 80062e6:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 80062ea:	683b      	ldr	r3, [r7, #0]
 80062ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80062ee:	4313      	orrs	r3, r2
 80062f0:	60fb      	str	r3, [r7, #12]
 80062f2:	68fb      	ldr	r3, [r7, #12]
 80062f4:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 80062f8:	683b      	ldr	r3, [r7, #0]
 80062fa:	699b      	ldr	r3, [r3, #24]
 80062fc:	041b      	lsls	r3, r3, #16
 80062fe:	4313      	orrs	r3, r2
 8006300:	60fb      	str	r3, [r7, #12]
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	681b      	ldr	r3, [r3, #0]
 8006306:	4a2f      	ldr	r2, [pc, #188]	; (80063c4 <HAL_TIMEx_ConfigBreakDeadTime+0x158>)
 8006308:	4293      	cmp	r3, r2
 800630a:	d009      	beq.n	8006320 <HAL_TIMEx_ConfigBreakDeadTime+0xb4>
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	681b      	ldr	r3, [r3, #0]
 8006310:	4a2d      	ldr	r2, [pc, #180]	; (80063c8 <HAL_TIMEx_ConfigBreakDeadTime+0x15c>)
 8006312:	4293      	cmp	r3, r2
 8006314:	d004      	beq.n	8006320 <HAL_TIMEx_ConfigBreakDeadTime+0xb4>
 8006316:	687b      	ldr	r3, [r7, #4]
 8006318:	681b      	ldr	r3, [r3, #0]
 800631a:	4a2c      	ldr	r2, [pc, #176]	; (80063cc <HAL_TIMEx_ConfigBreakDeadTime+0x160>)
 800631c:	4293      	cmp	r3, r2
 800631e:	d106      	bne.n	800632e <HAL_TIMEx_ConfigBreakDeadTime+0xc2>
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8006326:	683b      	ldr	r3, [r7, #0]
 8006328:	69db      	ldr	r3, [r3, #28]
 800632a:	4313      	orrs	r3, r2
 800632c:	60fb      	str	r3, [r7, #12]
 800632e:	687b      	ldr	r3, [r7, #4]
 8006330:	681b      	ldr	r3, [r3, #0]
 8006332:	4a24      	ldr	r2, [pc, #144]	; (80063c4 <HAL_TIMEx_ConfigBreakDeadTime+0x158>)
 8006334:	4293      	cmp	r3, r2
 8006336:	d009      	beq.n	800634c <HAL_TIMEx_ConfigBreakDeadTime+0xe0>
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	681b      	ldr	r3, [r3, #0]
 800633c:	4a22      	ldr	r2, [pc, #136]	; (80063c8 <HAL_TIMEx_ConfigBreakDeadTime+0x15c>)
 800633e:	4293      	cmp	r3, r2
 8006340:	d004      	beq.n	800634c <HAL_TIMEx_ConfigBreakDeadTime+0xe0>
 8006342:	687b      	ldr	r3, [r7, #4]
 8006344:	681b      	ldr	r3, [r3, #0]
 8006346:	4a21      	ldr	r2, [pc, #132]	; (80063cc <HAL_TIMEx_ConfigBreakDeadTime+0x160>)
 8006348:	4293      	cmp	r3, r2
 800634a:	d12b      	bne.n	80063a4 <HAL_TIMEx_ConfigBreakDeadTime+0x138>
 800634c:	68fb      	ldr	r3, [r7, #12]
 800634e:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 8006352:	683b      	ldr	r3, [r7, #0]
 8006354:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006356:	051b      	lsls	r3, r3, #20
 8006358:	4313      	orrs	r3, r2
 800635a:	60fb      	str	r3, [r7, #12]
 800635c:	68fb      	ldr	r3, [r7, #12]
 800635e:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8006362:	683b      	ldr	r3, [r7, #0]
 8006364:	6a1b      	ldr	r3, [r3, #32]
 8006366:	4313      	orrs	r3, r2
 8006368:	60fb      	str	r3, [r7, #12]
 800636a:	68fb      	ldr	r3, [r7, #12]
 800636c:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8006370:	683b      	ldr	r3, [r7, #0]
 8006372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006374:	4313      	orrs	r3, r2
 8006376:	60fb      	str	r3, [r7, #12]
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	4a11      	ldr	r2, [pc, #68]	; (80063c4 <HAL_TIMEx_ConfigBreakDeadTime+0x158>)
 800637e:	4293      	cmp	r3, r2
 8006380:	d009      	beq.n	8006396 <HAL_TIMEx_ConfigBreakDeadTime+0x12a>
 8006382:	687b      	ldr	r3, [r7, #4]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	4a10      	ldr	r2, [pc, #64]	; (80063c8 <HAL_TIMEx_ConfigBreakDeadTime+0x15c>)
 8006388:	4293      	cmp	r3, r2
 800638a:	d004      	beq.n	8006396 <HAL_TIMEx_ConfigBreakDeadTime+0x12a>
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	681b      	ldr	r3, [r3, #0]
 8006390:	4a0e      	ldr	r2, [pc, #56]	; (80063cc <HAL_TIMEx_ConfigBreakDeadTime+0x160>)
 8006392:	4293      	cmp	r3, r2
 8006394:	d106      	bne.n	80063a4 <HAL_TIMEx_ConfigBreakDeadTime+0x138>
 8006396:	68fb      	ldr	r3, [r7, #12]
 8006398:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 800639c:	683b      	ldr	r3, [r7, #0]
 800639e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80063a0:	4313      	orrs	r3, r2
 80063a2:	60fb      	str	r3, [r7, #12]
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	681b      	ldr	r3, [r3, #0]
 80063a8:	68fa      	ldr	r2, [r7, #12]
 80063aa:	645a      	str	r2, [r3, #68]	; 0x44
 80063ac:	687b      	ldr	r3, [r7, #4]
 80063ae:	2200      	movs	r2, #0
 80063b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80063b4:	2300      	movs	r3, #0
 80063b6:	4618      	mov	r0, r3
 80063b8:	3714      	adds	r7, #20
 80063ba:	46bd      	mov	sp, r7
 80063bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063c0:	4770      	bx	lr
 80063c2:	bf00      	nop
 80063c4:	40012c00 	.word	0x40012c00
 80063c8:	40013400 	.word	0x40013400
 80063cc:	40015000 	.word	0x40015000

080063d0 <HAL_TIMEx_EnableDeadTimePreload>:
 80063d0:	b480      	push	{r7}
 80063d2:	b083      	sub	sp, #12
 80063d4:	af00      	add	r7, sp, #0
 80063d6:	6078      	str	r0, [r7, #4]
 80063d8:	687b      	ldr	r3, [r7, #4]
 80063da:	681b      	ldr	r3, [r3, #0]
 80063dc:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80063de:	687b      	ldr	r3, [r7, #4]
 80063e0:	681b      	ldr	r3, [r3, #0]
 80063e2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80063e6:	655a      	str	r2, [r3, #84]	; 0x54
 80063e8:	2300      	movs	r3, #0
 80063ea:	4618      	mov	r0, r3
 80063ec:	370c      	adds	r7, #12
 80063ee:	46bd      	mov	sp, r7
 80063f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063f4:	4770      	bx	lr

080063f6 <TIM_CCxNChannelCmd>:
 80063f6:	b480      	push	{r7}
 80063f8:	b087      	sub	sp, #28
 80063fa:	af00      	add	r7, sp, #0
 80063fc:	60f8      	str	r0, [r7, #12]
 80063fe:	60b9      	str	r1, [r7, #8]
 8006400:	607a      	str	r2, [r7, #4]
 8006402:	68bb      	ldr	r3, [r7, #8]
 8006404:	f003 031f 	and.w	r3, r3, #31
 8006408:	2204      	movs	r2, #4
 800640a:	fa02 f303 	lsl.w	r3, r2, r3
 800640e:	617b      	str	r3, [r7, #20]
 8006410:	68fb      	ldr	r3, [r7, #12]
 8006412:	6a1a      	ldr	r2, [r3, #32]
 8006414:	697b      	ldr	r3, [r7, #20]
 8006416:	43db      	mvns	r3, r3
 8006418:	401a      	ands	r2, r3
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	621a      	str	r2, [r3, #32]
 800641e:	68fb      	ldr	r3, [r7, #12]
 8006420:	6a1a      	ldr	r2, [r3, #32]
 8006422:	68bb      	ldr	r3, [r7, #8]
 8006424:	f003 031f 	and.w	r3, r3, #31
 8006428:	6879      	ldr	r1, [r7, #4]
 800642a:	fa01 f303 	lsl.w	r3, r1, r3
 800642e:	431a      	orrs	r2, r3
 8006430:	68fb      	ldr	r3, [r7, #12]
 8006432:	621a      	str	r2, [r3, #32]
 8006434:	bf00      	nop
 8006436:	371c      	adds	r7, #28
 8006438:	46bd      	mov	sp, r7
 800643a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800643e:	4770      	bx	lr

08006440 <HAL_UART_Init>:
 8006440:	b580      	push	{r7, lr}
 8006442:	b082      	sub	sp, #8
 8006444:	af00      	add	r7, sp, #0
 8006446:	6078      	str	r0, [r7, #4]
 8006448:	687b      	ldr	r3, [r7, #4]
 800644a:	2b00      	cmp	r3, #0
 800644c:	d101      	bne.n	8006452 <HAL_UART_Init+0x12>
 800644e:	2301      	movs	r3, #1
 8006450:	e042      	b.n	80064d8 <HAL_UART_Init+0x98>
 8006452:	687b      	ldr	r3, [r7, #4]
 8006454:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006458:	2b00      	cmp	r3, #0
 800645a:	d106      	bne.n	800646a <HAL_UART_Init+0x2a>
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	2200      	movs	r2, #0
 8006460:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8006464:	6878      	ldr	r0, [r7, #4]
 8006466:	f7fb fbb7 	bl	8001bd8 <HAL_UART_MspInit>
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	2224      	movs	r2, #36	; 0x24
 800646e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	681a      	ldr	r2, [r3, #0]
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	681b      	ldr	r3, [r3, #0]
 800647c:	f022 0201 	bic.w	r2, r2, #1
 8006480:	601a      	str	r2, [r3, #0]
 8006482:	6878      	ldr	r0, [r7, #4]
 8006484:	f000 fc50 	bl	8006d28 <UART_SetConfig>
 8006488:	4603      	mov	r3, r0
 800648a:	2b01      	cmp	r3, #1
 800648c:	d101      	bne.n	8006492 <HAL_UART_Init+0x52>
 800648e:	2301      	movs	r3, #1
 8006490:	e022      	b.n	80064d8 <HAL_UART_Init+0x98>
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006496:	2b00      	cmp	r3, #0
 8006498:	d002      	beq.n	80064a0 <HAL_UART_Init+0x60>
 800649a:	6878      	ldr	r0, [r7, #4]
 800649c:	f000 ff40 	bl	8007320 <UART_AdvFeatureConfig>
 80064a0:	687b      	ldr	r3, [r7, #4]
 80064a2:	681b      	ldr	r3, [r3, #0]
 80064a4:	685a      	ldr	r2, [r3, #4]
 80064a6:	687b      	ldr	r3, [r7, #4]
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80064ae:	605a      	str	r2, [r3, #4]
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	689a      	ldr	r2, [r3, #8]
 80064b6:	687b      	ldr	r3, [r7, #4]
 80064b8:	681b      	ldr	r3, [r3, #0]
 80064ba:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80064be:	609a      	str	r2, [r3, #8]
 80064c0:	687b      	ldr	r3, [r7, #4]
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	681a      	ldr	r2, [r3, #0]
 80064c6:	687b      	ldr	r3, [r7, #4]
 80064c8:	681b      	ldr	r3, [r3, #0]
 80064ca:	f042 0201 	orr.w	r2, r2, #1
 80064ce:	601a      	str	r2, [r3, #0]
 80064d0:	6878      	ldr	r0, [r7, #4]
 80064d2:	f000 ffc7 	bl	8007464 <UART_CheckIdleState>
 80064d6:	4603      	mov	r3, r0
 80064d8:	4618      	mov	r0, r3
 80064da:	3708      	adds	r7, #8
 80064dc:	46bd      	mov	sp, r7
 80064de:	bd80      	pop	{r7, pc}

080064e0 <HAL_UART_Transmit>:
 80064e0:	b580      	push	{r7, lr}
 80064e2:	b08a      	sub	sp, #40	; 0x28
 80064e4:	af02      	add	r7, sp, #8
 80064e6:	60f8      	str	r0, [r7, #12]
 80064e8:	60b9      	str	r1, [r7, #8]
 80064ea:	603b      	str	r3, [r7, #0]
 80064ec:	4613      	mov	r3, r2
 80064ee:	80fb      	strh	r3, [r7, #6]
 80064f0:	68fb      	ldr	r3, [r7, #12]
 80064f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80064f6:	2b20      	cmp	r3, #32
 80064f8:	f040 8083 	bne.w	8006602 <HAL_UART_Transmit+0x122>
 80064fc:	68bb      	ldr	r3, [r7, #8]
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d002      	beq.n	8006508 <HAL_UART_Transmit+0x28>
 8006502:	88fb      	ldrh	r3, [r7, #6]
 8006504:	2b00      	cmp	r3, #0
 8006506:	d101      	bne.n	800650c <HAL_UART_Transmit+0x2c>
 8006508:	2301      	movs	r3, #1
 800650a:	e07b      	b.n	8006604 <HAL_UART_Transmit+0x124>
 800650c:	68fb      	ldr	r3, [r7, #12]
 800650e:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8006512:	2b01      	cmp	r3, #1
 8006514:	d101      	bne.n	800651a <HAL_UART_Transmit+0x3a>
 8006516:	2302      	movs	r3, #2
 8006518:	e074      	b.n	8006604 <HAL_UART_Transmit+0x124>
 800651a:	68fb      	ldr	r3, [r7, #12]
 800651c:	2201      	movs	r2, #1
 800651e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	2200      	movs	r2, #0
 8006526:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800652a:	68fb      	ldr	r3, [r7, #12]
 800652c:	2221      	movs	r2, #33	; 0x21
 800652e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8006532:	f7fb fc3f 	bl	8001db4 <HAL_GetTick>
 8006536:	6178      	str	r0, [r7, #20]
 8006538:	68fb      	ldr	r3, [r7, #12]
 800653a:	88fa      	ldrh	r2, [r7, #6]
 800653c:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 8006540:	68fb      	ldr	r3, [r7, #12]
 8006542:	88fa      	ldrh	r2, [r7, #6]
 8006544:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 8006548:	68fb      	ldr	r3, [r7, #12]
 800654a:	689b      	ldr	r3, [r3, #8]
 800654c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006550:	d108      	bne.n	8006564 <HAL_UART_Transmit+0x84>
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	691b      	ldr	r3, [r3, #16]
 8006556:	2b00      	cmp	r3, #0
 8006558:	d104      	bne.n	8006564 <HAL_UART_Transmit+0x84>
 800655a:	2300      	movs	r3, #0
 800655c:	61fb      	str	r3, [r7, #28]
 800655e:	68bb      	ldr	r3, [r7, #8]
 8006560:	61bb      	str	r3, [r7, #24]
 8006562:	e003      	b.n	800656c <HAL_UART_Transmit+0x8c>
 8006564:	68bb      	ldr	r3, [r7, #8]
 8006566:	61fb      	str	r3, [r7, #28]
 8006568:	2300      	movs	r3, #0
 800656a:	61bb      	str	r3, [r7, #24]
 800656c:	68fb      	ldr	r3, [r7, #12]
 800656e:	2200      	movs	r2, #0
 8006570:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8006574:	e02c      	b.n	80065d0 <HAL_UART_Transmit+0xf0>
 8006576:	683b      	ldr	r3, [r7, #0]
 8006578:	9300      	str	r3, [sp, #0]
 800657a:	697b      	ldr	r3, [r7, #20]
 800657c:	2200      	movs	r2, #0
 800657e:	2180      	movs	r1, #128	; 0x80
 8006580:	68f8      	ldr	r0, [r7, #12]
 8006582:	f000 ffba 	bl	80074fa <UART_WaitOnFlagUntilTimeout>
 8006586:	4603      	mov	r3, r0
 8006588:	2b00      	cmp	r3, #0
 800658a:	d001      	beq.n	8006590 <HAL_UART_Transmit+0xb0>
 800658c:	2303      	movs	r3, #3
 800658e:	e039      	b.n	8006604 <HAL_UART_Transmit+0x124>
 8006590:	69fb      	ldr	r3, [r7, #28]
 8006592:	2b00      	cmp	r3, #0
 8006594:	d10b      	bne.n	80065ae <HAL_UART_Transmit+0xce>
 8006596:	69bb      	ldr	r3, [r7, #24]
 8006598:	881b      	ldrh	r3, [r3, #0]
 800659a:	461a      	mov	r2, r3
 800659c:	68fb      	ldr	r3, [r7, #12]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80065a4:	629a      	str	r2, [r3, #40]	; 0x28
 80065a6:	69bb      	ldr	r3, [r7, #24]
 80065a8:	3302      	adds	r3, #2
 80065aa:	61bb      	str	r3, [r7, #24]
 80065ac:	e007      	b.n	80065be <HAL_UART_Transmit+0xde>
 80065ae:	69fb      	ldr	r3, [r7, #28]
 80065b0:	781a      	ldrb	r2, [r3, #0]
 80065b2:	68fb      	ldr	r3, [r7, #12]
 80065b4:	681b      	ldr	r3, [r3, #0]
 80065b6:	629a      	str	r2, [r3, #40]	; 0x28
 80065b8:	69fb      	ldr	r3, [r7, #28]
 80065ba:	3301      	adds	r3, #1
 80065bc:	61fb      	str	r3, [r7, #28]
 80065be:	68fb      	ldr	r3, [r7, #12]
 80065c0:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80065c4:	b29b      	uxth	r3, r3
 80065c6:	3b01      	subs	r3, #1
 80065c8:	b29a      	uxth	r2, r3
 80065ca:	68fb      	ldr	r3, [r7, #12]
 80065cc:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 80065d0:	68fb      	ldr	r3, [r7, #12]
 80065d2:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80065d6:	b29b      	uxth	r3, r3
 80065d8:	2b00      	cmp	r3, #0
 80065da:	d1cc      	bne.n	8006576 <HAL_UART_Transmit+0x96>
 80065dc:	683b      	ldr	r3, [r7, #0]
 80065de:	9300      	str	r3, [sp, #0]
 80065e0:	697b      	ldr	r3, [r7, #20]
 80065e2:	2200      	movs	r2, #0
 80065e4:	2140      	movs	r1, #64	; 0x40
 80065e6:	68f8      	ldr	r0, [r7, #12]
 80065e8:	f000 ff87 	bl	80074fa <UART_WaitOnFlagUntilTimeout>
 80065ec:	4603      	mov	r3, r0
 80065ee:	2b00      	cmp	r3, #0
 80065f0:	d001      	beq.n	80065f6 <HAL_UART_Transmit+0x116>
 80065f2:	2303      	movs	r3, #3
 80065f4:	e006      	b.n	8006604 <HAL_UART_Transmit+0x124>
 80065f6:	68fb      	ldr	r3, [r7, #12]
 80065f8:	2220      	movs	r2, #32
 80065fa:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80065fe:	2300      	movs	r3, #0
 8006600:	e000      	b.n	8006604 <HAL_UART_Transmit+0x124>
 8006602:	2302      	movs	r3, #2
 8006604:	4618      	mov	r0, r3
 8006606:	3720      	adds	r7, #32
 8006608:	46bd      	mov	sp, r7
 800660a:	bd80      	pop	{r7, pc}

0800660c <HAL_UART_Receive_IT>:
 800660c:	b580      	push	{r7, lr}
 800660e:	b08a      	sub	sp, #40	; 0x28
 8006610:	af00      	add	r7, sp, #0
 8006612:	60f8      	str	r0, [r7, #12]
 8006614:	60b9      	str	r1, [r7, #8]
 8006616:	4613      	mov	r3, r2
 8006618:	80fb      	strh	r3, [r7, #6]
 800661a:	68fb      	ldr	r3, [r7, #12]
 800661c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006620:	2b20      	cmp	r3, #32
 8006622:	d142      	bne.n	80066aa <HAL_UART_Receive_IT+0x9e>
 8006624:	68bb      	ldr	r3, [r7, #8]
 8006626:	2b00      	cmp	r3, #0
 8006628:	d002      	beq.n	8006630 <HAL_UART_Receive_IT+0x24>
 800662a:	88fb      	ldrh	r3, [r7, #6]
 800662c:	2b00      	cmp	r3, #0
 800662e:	d101      	bne.n	8006634 <HAL_UART_Receive_IT+0x28>
 8006630:	2301      	movs	r3, #1
 8006632:	e03b      	b.n	80066ac <HAL_UART_Receive_IT+0xa0>
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800663a:	2b01      	cmp	r3, #1
 800663c:	d101      	bne.n	8006642 <HAL_UART_Receive_IT+0x36>
 800663e:	2302      	movs	r3, #2
 8006640:	e034      	b.n	80066ac <HAL_UART_Receive_IT+0xa0>
 8006642:	68fb      	ldr	r3, [r7, #12]
 8006644:	2201      	movs	r2, #1
 8006646:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800664a:	68fb      	ldr	r3, [r7, #12]
 800664c:	2200      	movs	r2, #0
 800664e:	66da      	str	r2, [r3, #108]	; 0x6c
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	4a17      	ldr	r2, [pc, #92]	; (80066b4 <HAL_UART_Receive_IT+0xa8>)
 8006656:	4293      	cmp	r3, r2
 8006658:	d01f      	beq.n	800669a <HAL_UART_Receive_IT+0x8e>
 800665a:	68fb      	ldr	r3, [r7, #12]
 800665c:	681b      	ldr	r3, [r3, #0]
 800665e:	685b      	ldr	r3, [r3, #4]
 8006660:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8006664:	2b00      	cmp	r3, #0
 8006666:	d018      	beq.n	800669a <HAL_UART_Receive_IT+0x8e>
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	681b      	ldr	r3, [r3, #0]
 800666c:	617b      	str	r3, [r7, #20]
 800666e:	697b      	ldr	r3, [r7, #20]
 8006670:	e853 3f00 	ldrex	r3, [r3]
 8006674:	613b      	str	r3, [r7, #16]
 8006676:	693b      	ldr	r3, [r7, #16]
 8006678:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800667c:	627b      	str	r3, [r7, #36]	; 0x24
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	681b      	ldr	r3, [r3, #0]
 8006682:	461a      	mov	r2, r3
 8006684:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006686:	623b      	str	r3, [r7, #32]
 8006688:	61fa      	str	r2, [r7, #28]
 800668a:	69f9      	ldr	r1, [r7, #28]
 800668c:	6a3a      	ldr	r2, [r7, #32]
 800668e:	e841 2300 	strex	r3, r2, [r1]
 8006692:	61bb      	str	r3, [r7, #24]
 8006694:	69bb      	ldr	r3, [r7, #24]
 8006696:	2b00      	cmp	r3, #0
 8006698:	d1e6      	bne.n	8006668 <HAL_UART_Receive_IT+0x5c>
 800669a:	88fb      	ldrh	r3, [r7, #6]
 800669c:	461a      	mov	r2, r3
 800669e:	68b9      	ldr	r1, [r7, #8]
 80066a0:	68f8      	ldr	r0, [r7, #12]
 80066a2:	f000 fff3 	bl	800768c <UART_Start_Receive_IT>
 80066a6:	4603      	mov	r3, r0
 80066a8:	e000      	b.n	80066ac <HAL_UART_Receive_IT+0xa0>
 80066aa:	2302      	movs	r3, #2
 80066ac:	4618      	mov	r0, r3
 80066ae:	3728      	adds	r7, #40	; 0x28
 80066b0:	46bd      	mov	sp, r7
 80066b2:	bd80      	pop	{r7, pc}
 80066b4:	40008000 	.word	0x40008000

080066b8 <HAL_UART_IRQHandler>:
 80066b8:	b580      	push	{r7, lr}
 80066ba:	b0ba      	sub	sp, #232	; 0xe8
 80066bc:	af00      	add	r7, sp, #0
 80066be:	6078      	str	r0, [r7, #4]
 80066c0:	687b      	ldr	r3, [r7, #4]
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	69db      	ldr	r3, [r3, #28]
 80066c6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	681b      	ldr	r3, [r3, #0]
 80066d8:	689b      	ldr	r3, [r3, #8]
 80066da:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80066de:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 80066e2:	f640 030f 	movw	r3, #2063	; 0x80f
 80066e6:	4013      	ands	r3, r2
 80066e8:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80066ec:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80066f0:	2b00      	cmp	r3, #0
 80066f2:	d11b      	bne.n	800672c <HAL_UART_IRQHandler+0x74>
 80066f4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80066f8:	f003 0320 	and.w	r3, r3, #32
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	d015      	beq.n	800672c <HAL_UART_IRQHandler+0x74>
 8006700:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006704:	f003 0320 	and.w	r3, r3, #32
 8006708:	2b00      	cmp	r3, #0
 800670a:	d105      	bne.n	8006718 <HAL_UART_IRQHandler+0x60>
 800670c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006710:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006714:	2b00      	cmp	r3, #0
 8006716:	d009      	beq.n	800672c <HAL_UART_IRQHandler+0x74>
 8006718:	687b      	ldr	r3, [r7, #4]
 800671a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800671c:	2b00      	cmp	r3, #0
 800671e:	f000 82d6 	beq.w	8006cce <HAL_UART_IRQHandler+0x616>
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006726:	6878      	ldr	r0, [r7, #4]
 8006728:	4798      	blx	r3
 800672a:	e2d0      	b.n	8006cce <HAL_UART_IRQHandler+0x616>
 800672c:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8006730:	2b00      	cmp	r3, #0
 8006732:	f000 811f 	beq.w	8006974 <HAL_UART_IRQHandler+0x2bc>
 8006736:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800673a:	4b8b      	ldr	r3, [pc, #556]	; (8006968 <HAL_UART_IRQHandler+0x2b0>)
 800673c:	4013      	ands	r3, r2
 800673e:	2b00      	cmp	r3, #0
 8006740:	d106      	bne.n	8006750 <HAL_UART_IRQHandler+0x98>
 8006742:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8006746:	4b89      	ldr	r3, [pc, #548]	; (800696c <HAL_UART_IRQHandler+0x2b4>)
 8006748:	4013      	ands	r3, r2
 800674a:	2b00      	cmp	r3, #0
 800674c:	f000 8112 	beq.w	8006974 <HAL_UART_IRQHandler+0x2bc>
 8006750:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006754:	f003 0301 	and.w	r3, r3, #1
 8006758:	2b00      	cmp	r3, #0
 800675a:	d011      	beq.n	8006780 <HAL_UART_IRQHandler+0xc8>
 800675c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006760:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006764:	2b00      	cmp	r3, #0
 8006766:	d00b      	beq.n	8006780 <HAL_UART_IRQHandler+0xc8>
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	681b      	ldr	r3, [r3, #0]
 800676c:	2201      	movs	r2, #1
 800676e:	621a      	str	r2, [r3, #32]
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006776:	f043 0201 	orr.w	r2, r3, #1
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8006780:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006784:	f003 0302 	and.w	r3, r3, #2
 8006788:	2b00      	cmp	r3, #0
 800678a:	d011      	beq.n	80067b0 <HAL_UART_IRQHandler+0xf8>
 800678c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006790:	f003 0301 	and.w	r3, r3, #1
 8006794:	2b00      	cmp	r3, #0
 8006796:	d00b      	beq.n	80067b0 <HAL_UART_IRQHandler+0xf8>
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	2202      	movs	r2, #2
 800679e:	621a      	str	r2, [r3, #32]
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80067a6:	f043 0204 	orr.w	r2, r3, #4
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80067b0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80067b4:	f003 0304 	and.w	r3, r3, #4
 80067b8:	2b00      	cmp	r3, #0
 80067ba:	d011      	beq.n	80067e0 <HAL_UART_IRQHandler+0x128>
 80067bc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80067c0:	f003 0301 	and.w	r3, r3, #1
 80067c4:	2b00      	cmp	r3, #0
 80067c6:	d00b      	beq.n	80067e0 <HAL_UART_IRQHandler+0x128>
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	681b      	ldr	r3, [r3, #0]
 80067cc:	2204      	movs	r2, #4
 80067ce:	621a      	str	r2, [r3, #32]
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80067d6:	f043 0202 	orr.w	r2, r3, #2
 80067da:	687b      	ldr	r3, [r7, #4]
 80067dc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80067e0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80067e4:	f003 0308 	and.w	r3, r3, #8
 80067e8:	2b00      	cmp	r3, #0
 80067ea:	d017      	beq.n	800681c <HAL_UART_IRQHandler+0x164>
 80067ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80067f0:	f003 0320 	and.w	r3, r3, #32
 80067f4:	2b00      	cmp	r3, #0
 80067f6:	d105      	bne.n	8006804 <HAL_UART_IRQHandler+0x14c>
 80067f8:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 80067fc:	4b5a      	ldr	r3, [pc, #360]	; (8006968 <HAL_UART_IRQHandler+0x2b0>)
 80067fe:	4013      	ands	r3, r2
 8006800:	2b00      	cmp	r3, #0
 8006802:	d00b      	beq.n	800681c <HAL_UART_IRQHandler+0x164>
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	681b      	ldr	r3, [r3, #0]
 8006808:	2208      	movs	r2, #8
 800680a:	621a      	str	r2, [r3, #32]
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006812:	f043 0208 	orr.w	r2, r3, #8
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800681c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006820:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006824:	2b00      	cmp	r3, #0
 8006826:	d012      	beq.n	800684e <HAL_UART_IRQHandler+0x196>
 8006828:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800682c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8006830:	2b00      	cmp	r3, #0
 8006832:	d00c      	beq.n	800684e <HAL_UART_IRQHandler+0x196>
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800683c:	621a      	str	r2, [r3, #32]
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006844:	f043 0220 	orr.w	r2, r3, #32
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006854:	2b00      	cmp	r3, #0
 8006856:	f000 823c 	beq.w	8006cd2 <HAL_UART_IRQHandler+0x61a>
 800685a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800685e:	f003 0320 	and.w	r3, r3, #32
 8006862:	2b00      	cmp	r3, #0
 8006864:	d013      	beq.n	800688e <HAL_UART_IRQHandler+0x1d6>
 8006866:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800686a:	f003 0320 	and.w	r3, r3, #32
 800686e:	2b00      	cmp	r3, #0
 8006870:	d105      	bne.n	800687e <HAL_UART_IRQHandler+0x1c6>
 8006872:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006876:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800687a:	2b00      	cmp	r3, #0
 800687c:	d007      	beq.n	800688e <HAL_UART_IRQHandler+0x1d6>
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006882:	2b00      	cmp	r3, #0
 8006884:	d003      	beq.n	800688e <HAL_UART_IRQHandler+0x1d6>
 8006886:	687b      	ldr	r3, [r7, #4]
 8006888:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800688a:	6878      	ldr	r0, [r7, #4]
 800688c:	4798      	blx	r3
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8006894:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	681b      	ldr	r3, [r3, #0]
 800689c:	689b      	ldr	r3, [r3, #8]
 800689e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80068a2:	2b40      	cmp	r3, #64	; 0x40
 80068a4:	d005      	beq.n	80068b2 <HAL_UART_IRQHandler+0x1fa>
 80068a6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80068aa:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80068ae:	2b00      	cmp	r3, #0
 80068b0:	d04f      	beq.n	8006952 <HAL_UART_IRQHandler+0x29a>
 80068b2:	6878      	ldr	r0, [r7, #4]
 80068b4:	f001 f814 	bl	80078e0 <UART_EndRxTransfer>
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	689b      	ldr	r3, [r3, #8]
 80068be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80068c2:	2b40      	cmp	r3, #64	; 0x40
 80068c4:	d141      	bne.n	800694a <HAL_UART_IRQHandler+0x292>
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	681b      	ldr	r3, [r3, #0]
 80068ca:	3308      	adds	r3, #8
 80068cc:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80068d0:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80068d4:	e853 3f00 	ldrex	r3, [r3]
 80068d8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80068dc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80068e0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80068e4:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	681b      	ldr	r3, [r3, #0]
 80068ec:	3308      	adds	r3, #8
 80068ee:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80068f2:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80068f6:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80068fa:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80068fe:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8006902:	e841 2300 	strex	r3, r2, [r1]
 8006906:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800690a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800690e:	2b00      	cmp	r3, #0
 8006910:	d1d9      	bne.n	80068c6 <HAL_UART_IRQHandler+0x20e>
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006916:	2b00      	cmp	r3, #0
 8006918:	d013      	beq.n	8006942 <HAL_UART_IRQHandler+0x28a>
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800691e:	4a14      	ldr	r2, [pc, #80]	; (8006970 <HAL_UART_IRQHandler+0x2b8>)
 8006920:	639a      	str	r2, [r3, #56]	; 0x38
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006926:	4618      	mov	r0, r3
 8006928:	f7fd f82e 	bl	8003988 <HAL_DMA_Abort_IT>
 800692c:	4603      	mov	r3, r0
 800692e:	2b00      	cmp	r3, #0
 8006930:	d017      	beq.n	8006962 <HAL_UART_IRQHandler+0x2aa>
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006936:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006938:	687a      	ldr	r2, [r7, #4]
 800693a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800693c:	4610      	mov	r0, r2
 800693e:	4798      	blx	r3
 8006940:	e00f      	b.n	8006962 <HAL_UART_IRQHandler+0x2aa>
 8006942:	6878      	ldr	r0, [r7, #4]
 8006944:	f000 f9da 	bl	8006cfc <HAL_UART_ErrorCallback>
 8006948:	e00b      	b.n	8006962 <HAL_UART_IRQHandler+0x2aa>
 800694a:	6878      	ldr	r0, [r7, #4]
 800694c:	f000 f9d6 	bl	8006cfc <HAL_UART_ErrorCallback>
 8006950:	e007      	b.n	8006962 <HAL_UART_IRQHandler+0x2aa>
 8006952:	6878      	ldr	r0, [r7, #4]
 8006954:	f000 f9d2 	bl	8006cfc <HAL_UART_ErrorCallback>
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	2200      	movs	r2, #0
 800695c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8006960:	e1b7      	b.n	8006cd2 <HAL_UART_IRQHandler+0x61a>
 8006962:	bf00      	nop
 8006964:	e1b5      	b.n	8006cd2 <HAL_UART_IRQHandler+0x61a>
 8006966:	bf00      	nop
 8006968:	10000001 	.word	0x10000001
 800696c:	04000120 	.word	0x04000120
 8006970:	080079ad 	.word	0x080079ad
 8006974:	687b      	ldr	r3, [r7, #4]
 8006976:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006978:	2b01      	cmp	r3, #1
 800697a:	f040 814a 	bne.w	8006c12 <HAL_UART_IRQHandler+0x55a>
 800697e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006982:	f003 0310 	and.w	r3, r3, #16
 8006986:	2b00      	cmp	r3, #0
 8006988:	f000 8143 	beq.w	8006c12 <HAL_UART_IRQHandler+0x55a>
 800698c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006990:	f003 0310 	and.w	r3, r3, #16
 8006994:	2b00      	cmp	r3, #0
 8006996:	f000 813c 	beq.w	8006c12 <HAL_UART_IRQHandler+0x55a>
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	681b      	ldr	r3, [r3, #0]
 800699e:	2210      	movs	r2, #16
 80069a0:	621a      	str	r2, [r3, #32]
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	689b      	ldr	r3, [r3, #8]
 80069a8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80069ac:	2b40      	cmp	r3, #64	; 0x40
 80069ae:	f040 80b5 	bne.w	8006b1c <HAL_UART_IRQHandler+0x464>
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	685b      	ldr	r3, [r3, #4]
 80069ba:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 80069be:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	f000 8187 	beq.w	8006cd6 <HAL_UART_IRQHandler+0x61e>
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80069ce:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80069d2:	429a      	cmp	r2, r3
 80069d4:	f080 817f 	bcs.w	8006cd6 <HAL_UART_IRQHandler+0x61e>
 80069d8:	687b      	ldr	r3, [r7, #4]
 80069da:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80069de:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80069e2:	687b      	ldr	r3, [r7, #4]
 80069e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80069e6:	681b      	ldr	r3, [r3, #0]
 80069e8:	681b      	ldr	r3, [r3, #0]
 80069ea:	f003 0320 	and.w	r3, r3, #32
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	f040 8086 	bne.w	8006b00 <HAL_UART_IRQHandler+0x448>
 80069f4:	687b      	ldr	r3, [r7, #4]
 80069f6:	681b      	ldr	r3, [r3, #0]
 80069f8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80069fc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8006a00:	e853 3f00 	ldrex	r3, [r3]
 8006a04:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8006a08:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8006a0c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006a10:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	681b      	ldr	r3, [r3, #0]
 8006a18:	461a      	mov	r2, r3
 8006a1a:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8006a1e:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8006a22:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 8006a26:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8006a2a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8006a2e:	e841 2300 	strex	r3, r2, [r1]
 8006a32:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8006a36:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8006a3a:	2b00      	cmp	r3, #0
 8006a3c:	d1da      	bne.n	80069f4 <HAL_UART_IRQHandler+0x33c>
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	681b      	ldr	r3, [r3, #0]
 8006a42:	3308      	adds	r3, #8
 8006a44:	677b      	str	r3, [r7, #116]	; 0x74
 8006a46:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8006a48:	e853 3f00 	ldrex	r3, [r3]
 8006a4c:	673b      	str	r3, [r7, #112]	; 0x70
 8006a4e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8006a50:	f023 0301 	bic.w	r3, r3, #1
 8006a54:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	681b      	ldr	r3, [r3, #0]
 8006a5c:	3308      	adds	r3, #8
 8006a5e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 8006a62:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 8006a66:	67fb      	str	r3, [r7, #124]	; 0x7c
 8006a68:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8006a6a:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8006a6e:	e841 2300 	strex	r3, r2, [r1]
 8006a72:	67bb      	str	r3, [r7, #120]	; 0x78
 8006a74:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006a76:	2b00      	cmp	r3, #0
 8006a78:	d1e1      	bne.n	8006a3e <HAL_UART_IRQHandler+0x386>
 8006a7a:	687b      	ldr	r3, [r7, #4]
 8006a7c:	681b      	ldr	r3, [r3, #0]
 8006a7e:	3308      	adds	r3, #8
 8006a80:	663b      	str	r3, [r7, #96]	; 0x60
 8006a82:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006a84:	e853 3f00 	ldrex	r3, [r3]
 8006a88:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006a8a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006a8c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006a90:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	681b      	ldr	r3, [r3, #0]
 8006a98:	3308      	adds	r3, #8
 8006a9a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8006a9e:	66fa      	str	r2, [r7, #108]	; 0x6c
 8006aa0:	66bb      	str	r3, [r7, #104]	; 0x68
 8006aa2:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8006aa4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8006aa6:	e841 2300 	strex	r3, r2, [r1]
 8006aaa:	667b      	str	r3, [r7, #100]	; 0x64
 8006aac:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006aae:	2b00      	cmp	r3, #0
 8006ab0:	d1e3      	bne.n	8006a7a <HAL_UART_IRQHandler+0x3c2>
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	2220      	movs	r2, #32
 8006ab6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	2200      	movs	r2, #0
 8006abe:	66da      	str	r2, [r3, #108]	; 0x6c
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006ac6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006ac8:	e853 3f00 	ldrex	r3, [r3]
 8006acc:	64bb      	str	r3, [r7, #72]	; 0x48
 8006ace:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006ad0:	f023 0310 	bic.w	r3, r3, #16
 8006ad4:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	461a      	mov	r2, r3
 8006ade:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8006ae2:	65bb      	str	r3, [r7, #88]	; 0x58
 8006ae4:	657a      	str	r2, [r7, #84]	; 0x54
 8006ae6:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8006ae8:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8006aea:	e841 2300 	strex	r3, r2, [r1]
 8006aee:	653b      	str	r3, [r7, #80]	; 0x50
 8006af0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006af2:	2b00      	cmp	r3, #0
 8006af4:	d1e4      	bne.n	8006ac0 <HAL_UART_IRQHandler+0x408>
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8006afa:	4618      	mov	r0, r3
 8006afc:	f7fc feeb 	bl	80038d6 <HAL_DMA_Abort>
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8006b0c:	b29b      	uxth	r3, r3
 8006b0e:	1ad3      	subs	r3, r2, r3
 8006b10:	b29b      	uxth	r3, r3
 8006b12:	4619      	mov	r1, r3
 8006b14:	6878      	ldr	r0, [r7, #4]
 8006b16:	f000 f8fb 	bl	8006d10 <HAL_UARTEx_RxEventCallback>
 8006b1a:	e0dc      	b.n	8006cd6 <HAL_UART_IRQHandler+0x61e>
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8006b28:	b29b      	uxth	r3, r3
 8006b2a:	1ad3      	subs	r3, r2, r3
 8006b2c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8006b36:	b29b      	uxth	r3, r3
 8006b38:	2b00      	cmp	r3, #0
 8006b3a:	f000 80ce 	beq.w	8006cda <HAL_UART_IRQHandler+0x622>
 8006b3e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8006b42:	2b00      	cmp	r3, #0
 8006b44:	f000 80c9 	beq.w	8006cda <HAL_UART_IRQHandler+0x622>
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	63bb      	str	r3, [r7, #56]	; 0x38
 8006b4e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006b50:	e853 3f00 	ldrex	r3, [r3]
 8006b54:	637b      	str	r3, [r7, #52]	; 0x34
 8006b56:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006b58:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8006b5c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8006b60:	687b      	ldr	r3, [r7, #4]
 8006b62:	681b      	ldr	r3, [r3, #0]
 8006b64:	461a      	mov	r2, r3
 8006b66:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8006b6a:	647b      	str	r3, [r7, #68]	; 0x44
 8006b6c:	643a      	str	r2, [r7, #64]	; 0x40
 8006b6e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8006b70:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8006b72:	e841 2300 	strex	r3, r2, [r1]
 8006b76:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006b78:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006b7a:	2b00      	cmp	r3, #0
 8006b7c:	d1e4      	bne.n	8006b48 <HAL_UART_IRQHandler+0x490>
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	681b      	ldr	r3, [r3, #0]
 8006b82:	3308      	adds	r3, #8
 8006b84:	627b      	str	r3, [r7, #36]	; 0x24
 8006b86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b88:	e853 3f00 	ldrex	r3, [r3]
 8006b8c:	623b      	str	r3, [r7, #32]
 8006b8e:	6a3b      	ldr	r3, [r7, #32]
 8006b90:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006b94:	f023 0301 	bic.w	r3, r3, #1
 8006b98:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	681b      	ldr	r3, [r3, #0]
 8006ba0:	3308      	adds	r3, #8
 8006ba2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8006ba6:	633a      	str	r2, [r7, #48]	; 0x30
 8006ba8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006baa:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8006bac:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006bae:	e841 2300 	strex	r3, r2, [r1]
 8006bb2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006bb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006bb6:	2b00      	cmp	r3, #0
 8006bb8:	d1e1      	bne.n	8006b7e <HAL_UART_IRQHandler+0x4c6>
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	2220      	movs	r2, #32
 8006bbe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	2200      	movs	r2, #0
 8006bc6:	66da      	str	r2, [r3, #108]	; 0x6c
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	2200      	movs	r2, #0
 8006bcc:	671a      	str	r2, [r3, #112]	; 0x70
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	681b      	ldr	r3, [r3, #0]
 8006bd2:	613b      	str	r3, [r7, #16]
 8006bd4:	693b      	ldr	r3, [r7, #16]
 8006bd6:	e853 3f00 	ldrex	r3, [r3]
 8006bda:	60fb      	str	r3, [r7, #12]
 8006bdc:	68fb      	ldr	r3, [r7, #12]
 8006bde:	f023 0310 	bic.w	r3, r3, #16
 8006be2:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	681b      	ldr	r3, [r3, #0]
 8006bea:	461a      	mov	r2, r3
 8006bec:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8006bf0:	61fb      	str	r3, [r7, #28]
 8006bf2:	61ba      	str	r2, [r7, #24]
 8006bf4:	69b9      	ldr	r1, [r7, #24]
 8006bf6:	69fa      	ldr	r2, [r7, #28]
 8006bf8:	e841 2300 	strex	r3, r2, [r1]
 8006bfc:	617b      	str	r3, [r7, #20]
 8006bfe:	697b      	ldr	r3, [r7, #20]
 8006c00:	2b00      	cmp	r3, #0
 8006c02:	d1e4      	bne.n	8006bce <HAL_UART_IRQHandler+0x516>
 8006c04:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8006c08:	4619      	mov	r1, r3
 8006c0a:	6878      	ldr	r0, [r7, #4]
 8006c0c:	f000 f880 	bl	8006d10 <HAL_UARTEx_RxEventCallback>
 8006c10:	e063      	b.n	8006cda <HAL_UART_IRQHandler+0x622>
 8006c12:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006c16:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8006c1a:	2b00      	cmp	r3, #0
 8006c1c:	d00e      	beq.n	8006c3c <HAL_UART_IRQHandler+0x584>
 8006c1e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006c22:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006c26:	2b00      	cmp	r3, #0
 8006c28:	d008      	beq.n	8006c3c <HAL_UART_IRQHandler+0x584>
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	681b      	ldr	r3, [r3, #0]
 8006c2e:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8006c32:	621a      	str	r2, [r3, #32]
 8006c34:	6878      	ldr	r0, [r7, #4]
 8006c36:	f001 fb57 	bl	80082e8 <HAL_UARTEx_WakeupCallback>
 8006c3a:	e051      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006c3c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006c40:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c44:	2b00      	cmp	r3, #0
 8006c46:	d014      	beq.n	8006c72 <HAL_UART_IRQHandler+0x5ba>
 8006c48:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006c4c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c50:	2b00      	cmp	r3, #0
 8006c52:	d105      	bne.n	8006c60 <HAL_UART_IRQHandler+0x5a8>
 8006c54:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8006c58:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8006c5c:	2b00      	cmp	r3, #0
 8006c5e:	d008      	beq.n	8006c72 <HAL_UART_IRQHandler+0x5ba>
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006c64:	2b00      	cmp	r3, #0
 8006c66:	d03a      	beq.n	8006cde <HAL_UART_IRQHandler+0x626>
 8006c68:	687b      	ldr	r3, [r7, #4]
 8006c6a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006c6c:	6878      	ldr	r0, [r7, #4]
 8006c6e:	4798      	blx	r3
 8006c70:	e035      	b.n	8006cde <HAL_UART_IRQHandler+0x626>
 8006c72:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006c76:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c7a:	2b00      	cmp	r3, #0
 8006c7c:	d009      	beq.n	8006c92 <HAL_UART_IRQHandler+0x5da>
 8006c7e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006c82:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006c86:	2b00      	cmp	r3, #0
 8006c88:	d003      	beq.n	8006c92 <HAL_UART_IRQHandler+0x5da>
 8006c8a:	6878      	ldr	r0, [r7, #4]
 8006c8c:	f000 fea4 	bl	80079d8 <UART_EndTransmit_IT>
 8006c90:	e026      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006c92:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006c96:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8006c9a:	2b00      	cmp	r3, #0
 8006c9c:	d009      	beq.n	8006cb2 <HAL_UART_IRQHandler+0x5fa>
 8006c9e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006ca2:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8006ca6:	2b00      	cmp	r3, #0
 8006ca8:	d003      	beq.n	8006cb2 <HAL_UART_IRQHandler+0x5fa>
 8006caa:	6878      	ldr	r0, [r7, #4]
 8006cac:	f001 fb30 	bl	8008310 <HAL_UARTEx_TxFifoEmptyCallback>
 8006cb0:	e016      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cb2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8006cb6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8006cba:	2b00      	cmp	r3, #0
 8006cbc:	d010      	beq.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cbe:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8006cc2:	2b00      	cmp	r3, #0
 8006cc4:	da0c      	bge.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cc6:	6878      	ldr	r0, [r7, #4]
 8006cc8:	f001 fb18 	bl	80082fc <HAL_UARTEx_RxFifoFullCallback>
 8006ccc:	e008      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cce:	bf00      	nop
 8006cd0:	e006      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cd2:	bf00      	nop
 8006cd4:	e004      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cd6:	bf00      	nop
 8006cd8:	e002      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cda:	bf00      	nop
 8006cdc:	e000      	b.n	8006ce0 <HAL_UART_IRQHandler+0x628>
 8006cde:	bf00      	nop
 8006ce0:	37e8      	adds	r7, #232	; 0xe8
 8006ce2:	46bd      	mov	sp, r7
 8006ce4:	bd80      	pop	{r7, pc}
 8006ce6:	bf00      	nop

08006ce8 <HAL_UART_TxCpltCallback>:
 8006ce8:	b480      	push	{r7}
 8006cea:	b083      	sub	sp, #12
 8006cec:	af00      	add	r7, sp, #0
 8006cee:	6078      	str	r0, [r7, #4]
 8006cf0:	bf00      	nop
 8006cf2:	370c      	adds	r7, #12
 8006cf4:	46bd      	mov	sp, r7
 8006cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cfa:	4770      	bx	lr

08006cfc <HAL_UART_ErrorCallback>:
 8006cfc:	b480      	push	{r7}
 8006cfe:	b083      	sub	sp, #12
 8006d00:	af00      	add	r7, sp, #0
 8006d02:	6078      	str	r0, [r7, #4]
 8006d04:	bf00      	nop
 8006d06:	370c      	adds	r7, #12
 8006d08:	46bd      	mov	sp, r7
 8006d0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d0e:	4770      	bx	lr

08006d10 <HAL_UARTEx_RxEventCallback>:
 8006d10:	b480      	push	{r7}
 8006d12:	b083      	sub	sp, #12
 8006d14:	af00      	add	r7, sp, #0
 8006d16:	6078      	str	r0, [r7, #4]
 8006d18:	460b      	mov	r3, r1
 8006d1a:	807b      	strh	r3, [r7, #2]
 8006d1c:	bf00      	nop
 8006d1e:	370c      	adds	r7, #12
 8006d20:	46bd      	mov	sp, r7
 8006d22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d26:	4770      	bx	lr

08006d28 <UART_SetConfig>:
 8006d28:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006d2c:	b08c      	sub	sp, #48	; 0x30
 8006d2e:	af00      	add	r7, sp, #0
 8006d30:	6178      	str	r0, [r7, #20]
 8006d32:	2300      	movs	r3, #0
 8006d34:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8006d38:	697b      	ldr	r3, [r7, #20]
 8006d3a:	689a      	ldr	r2, [r3, #8]
 8006d3c:	697b      	ldr	r3, [r7, #20]
 8006d3e:	691b      	ldr	r3, [r3, #16]
 8006d40:	431a      	orrs	r2, r3
 8006d42:	697b      	ldr	r3, [r7, #20]
 8006d44:	695b      	ldr	r3, [r3, #20]
 8006d46:	431a      	orrs	r2, r3
 8006d48:	697b      	ldr	r3, [r7, #20]
 8006d4a:	69db      	ldr	r3, [r3, #28]
 8006d4c:	4313      	orrs	r3, r2
 8006d4e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006d50:	697b      	ldr	r3, [r7, #20]
 8006d52:	681b      	ldr	r3, [r3, #0]
 8006d54:	681a      	ldr	r2, [r3, #0]
 8006d56:	4baa      	ldr	r3, [pc, #680]	; (8007000 <UART_SetConfig+0x2d8>)
 8006d58:	4013      	ands	r3, r2
 8006d5a:	697a      	ldr	r2, [r7, #20]
 8006d5c:	6812      	ldr	r2, [r2, #0]
 8006d5e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8006d60:	430b      	orrs	r3, r1
 8006d62:	6013      	str	r3, [r2, #0]
 8006d64:	697b      	ldr	r3, [r7, #20]
 8006d66:	681b      	ldr	r3, [r3, #0]
 8006d68:	685b      	ldr	r3, [r3, #4]
 8006d6a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8006d6e:	697b      	ldr	r3, [r7, #20]
 8006d70:	68da      	ldr	r2, [r3, #12]
 8006d72:	697b      	ldr	r3, [r7, #20]
 8006d74:	681b      	ldr	r3, [r3, #0]
 8006d76:	430a      	orrs	r2, r1
 8006d78:	605a      	str	r2, [r3, #4]
 8006d7a:	697b      	ldr	r3, [r7, #20]
 8006d7c:	699b      	ldr	r3, [r3, #24]
 8006d7e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006d80:	697b      	ldr	r3, [r7, #20]
 8006d82:	681b      	ldr	r3, [r3, #0]
 8006d84:	4a9f      	ldr	r2, [pc, #636]	; (8007004 <UART_SetConfig+0x2dc>)
 8006d86:	4293      	cmp	r3, r2
 8006d88:	d004      	beq.n	8006d94 <UART_SetConfig+0x6c>
 8006d8a:	697b      	ldr	r3, [r7, #20]
 8006d8c:	6a1b      	ldr	r3, [r3, #32]
 8006d8e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006d90:	4313      	orrs	r3, r2
 8006d92:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006d94:	697b      	ldr	r3, [r7, #20]
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	689b      	ldr	r3, [r3, #8]
 8006d9a:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 8006d9e:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 8006da2:	697a      	ldr	r2, [r7, #20]
 8006da4:	6812      	ldr	r2, [r2, #0]
 8006da6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8006da8:	430b      	orrs	r3, r1
 8006daa:	6093      	str	r3, [r2, #8]
 8006dac:	697b      	ldr	r3, [r7, #20]
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006db2:	f023 010f 	bic.w	r1, r3, #15
 8006db6:	697b      	ldr	r3, [r7, #20]
 8006db8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006dba:	697b      	ldr	r3, [r7, #20]
 8006dbc:	681b      	ldr	r3, [r3, #0]
 8006dbe:	430a      	orrs	r2, r1
 8006dc0:	62da      	str	r2, [r3, #44]	; 0x2c
 8006dc2:	697b      	ldr	r3, [r7, #20]
 8006dc4:	681b      	ldr	r3, [r3, #0]
 8006dc6:	4a90      	ldr	r2, [pc, #576]	; (8007008 <UART_SetConfig+0x2e0>)
 8006dc8:	4293      	cmp	r3, r2
 8006dca:	d125      	bne.n	8006e18 <UART_SetConfig+0xf0>
 8006dcc:	4b8f      	ldr	r3, [pc, #572]	; (800700c <UART_SetConfig+0x2e4>)
 8006dce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006dd2:	f003 0303 	and.w	r3, r3, #3
 8006dd6:	2b03      	cmp	r3, #3
 8006dd8:	d81a      	bhi.n	8006e10 <UART_SetConfig+0xe8>
 8006dda:	a201      	add	r2, pc, #4	; (adr r2, 8006de0 <UART_SetConfig+0xb8>)
 8006ddc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006de0:	08006df1 	.word	0x08006df1
 8006de4:	08006e01 	.word	0x08006e01
 8006de8:	08006df9 	.word	0x08006df9
 8006dec:	08006e09 	.word	0x08006e09
 8006df0:	2301      	movs	r3, #1
 8006df2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006df6:	e116      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006df8:	2302      	movs	r3, #2
 8006dfa:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006dfe:	e112      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e00:	2304      	movs	r3, #4
 8006e02:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e06:	e10e      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e08:	2308      	movs	r3, #8
 8006e0a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e0e:	e10a      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e10:	2310      	movs	r3, #16
 8006e12:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e16:	e106      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e18:	697b      	ldr	r3, [r7, #20]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	4a7c      	ldr	r2, [pc, #496]	; (8007010 <UART_SetConfig+0x2e8>)
 8006e1e:	4293      	cmp	r3, r2
 8006e20:	d138      	bne.n	8006e94 <UART_SetConfig+0x16c>
 8006e22:	4b7a      	ldr	r3, [pc, #488]	; (800700c <UART_SetConfig+0x2e4>)
 8006e24:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006e28:	f003 030c 	and.w	r3, r3, #12
 8006e2c:	2b0c      	cmp	r3, #12
 8006e2e:	d82d      	bhi.n	8006e8c <UART_SetConfig+0x164>
 8006e30:	a201      	add	r2, pc, #4	; (adr r2, 8006e38 <UART_SetConfig+0x110>)
 8006e32:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006e36:	bf00      	nop
 8006e38:	08006e6d 	.word	0x08006e6d
 8006e3c:	08006e8d 	.word	0x08006e8d
 8006e40:	08006e8d 	.word	0x08006e8d
 8006e44:	08006e8d 	.word	0x08006e8d
 8006e48:	08006e7d 	.word	0x08006e7d
 8006e4c:	08006e8d 	.word	0x08006e8d
 8006e50:	08006e8d 	.word	0x08006e8d
 8006e54:	08006e8d 	.word	0x08006e8d
 8006e58:	08006e75 	.word	0x08006e75
 8006e5c:	08006e8d 	.word	0x08006e8d
 8006e60:	08006e8d 	.word	0x08006e8d
 8006e64:	08006e8d 	.word	0x08006e8d
 8006e68:	08006e85 	.word	0x08006e85
 8006e6c:	2300      	movs	r3, #0
 8006e6e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e72:	e0d8      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e74:	2302      	movs	r3, #2
 8006e76:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e7a:	e0d4      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e7c:	2304      	movs	r3, #4
 8006e7e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e82:	e0d0      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e84:	2308      	movs	r3, #8
 8006e86:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e8a:	e0cc      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e8c:	2310      	movs	r3, #16
 8006e8e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006e92:	e0c8      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006e94:	697b      	ldr	r3, [r7, #20]
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	4a5e      	ldr	r2, [pc, #376]	; (8007014 <UART_SetConfig+0x2ec>)
 8006e9a:	4293      	cmp	r3, r2
 8006e9c:	d125      	bne.n	8006eea <UART_SetConfig+0x1c2>
 8006e9e:	4b5b      	ldr	r3, [pc, #364]	; (800700c <UART_SetConfig+0x2e4>)
 8006ea0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006ea4:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8006ea8:	2b30      	cmp	r3, #48	; 0x30
 8006eaa:	d016      	beq.n	8006eda <UART_SetConfig+0x1b2>
 8006eac:	2b30      	cmp	r3, #48	; 0x30
 8006eae:	d818      	bhi.n	8006ee2 <UART_SetConfig+0x1ba>
 8006eb0:	2b20      	cmp	r3, #32
 8006eb2:	d00a      	beq.n	8006eca <UART_SetConfig+0x1a2>
 8006eb4:	2b20      	cmp	r3, #32
 8006eb6:	d814      	bhi.n	8006ee2 <UART_SetConfig+0x1ba>
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d002      	beq.n	8006ec2 <UART_SetConfig+0x19a>
 8006ebc:	2b10      	cmp	r3, #16
 8006ebe:	d008      	beq.n	8006ed2 <UART_SetConfig+0x1aa>
 8006ec0:	e00f      	b.n	8006ee2 <UART_SetConfig+0x1ba>
 8006ec2:	2300      	movs	r3, #0
 8006ec4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006ec8:	e0ad      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006eca:	2302      	movs	r3, #2
 8006ecc:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006ed0:	e0a9      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006ed2:	2304      	movs	r3, #4
 8006ed4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006ed8:	e0a5      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006eda:	2308      	movs	r3, #8
 8006edc:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006ee0:	e0a1      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006ee2:	2310      	movs	r3, #16
 8006ee4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006ee8:	e09d      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006eea:	697b      	ldr	r3, [r7, #20]
 8006eec:	681b      	ldr	r3, [r3, #0]
 8006eee:	4a4a      	ldr	r2, [pc, #296]	; (8007018 <UART_SetConfig+0x2f0>)
 8006ef0:	4293      	cmp	r3, r2
 8006ef2:	d125      	bne.n	8006f40 <UART_SetConfig+0x218>
 8006ef4:	4b45      	ldr	r3, [pc, #276]	; (800700c <UART_SetConfig+0x2e4>)
 8006ef6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006efa:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 8006efe:	2bc0      	cmp	r3, #192	; 0xc0
 8006f00:	d016      	beq.n	8006f30 <UART_SetConfig+0x208>
 8006f02:	2bc0      	cmp	r3, #192	; 0xc0
 8006f04:	d818      	bhi.n	8006f38 <UART_SetConfig+0x210>
 8006f06:	2b80      	cmp	r3, #128	; 0x80
 8006f08:	d00a      	beq.n	8006f20 <UART_SetConfig+0x1f8>
 8006f0a:	2b80      	cmp	r3, #128	; 0x80
 8006f0c:	d814      	bhi.n	8006f38 <UART_SetConfig+0x210>
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d002      	beq.n	8006f18 <UART_SetConfig+0x1f0>
 8006f12:	2b40      	cmp	r3, #64	; 0x40
 8006f14:	d008      	beq.n	8006f28 <UART_SetConfig+0x200>
 8006f16:	e00f      	b.n	8006f38 <UART_SetConfig+0x210>
 8006f18:	2300      	movs	r3, #0
 8006f1a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f1e:	e082      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f20:	2302      	movs	r3, #2
 8006f22:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f26:	e07e      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f28:	2304      	movs	r3, #4
 8006f2a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f2e:	e07a      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f30:	2308      	movs	r3, #8
 8006f32:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f36:	e076      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f38:	2310      	movs	r3, #16
 8006f3a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f3e:	e072      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	681b      	ldr	r3, [r3, #0]
 8006f44:	4a35      	ldr	r2, [pc, #212]	; (800701c <UART_SetConfig+0x2f4>)
 8006f46:	4293      	cmp	r3, r2
 8006f48:	d12a      	bne.n	8006fa0 <UART_SetConfig+0x278>
 8006f4a:	4b30      	ldr	r3, [pc, #192]	; (800700c <UART_SetConfig+0x2e4>)
 8006f4c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006f50:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006f54:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006f58:	d01a      	beq.n	8006f90 <UART_SetConfig+0x268>
 8006f5a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006f5e:	d81b      	bhi.n	8006f98 <UART_SetConfig+0x270>
 8006f60:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006f64:	d00c      	beq.n	8006f80 <UART_SetConfig+0x258>
 8006f66:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006f6a:	d815      	bhi.n	8006f98 <UART_SetConfig+0x270>
 8006f6c:	2b00      	cmp	r3, #0
 8006f6e:	d003      	beq.n	8006f78 <UART_SetConfig+0x250>
 8006f70:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006f74:	d008      	beq.n	8006f88 <UART_SetConfig+0x260>
 8006f76:	e00f      	b.n	8006f98 <UART_SetConfig+0x270>
 8006f78:	2300      	movs	r3, #0
 8006f7a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f7e:	e052      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f80:	2302      	movs	r3, #2
 8006f82:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f86:	e04e      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f88:	2304      	movs	r3, #4
 8006f8a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f8e:	e04a      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f90:	2308      	movs	r3, #8
 8006f92:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f96:	e046      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006f98:	2310      	movs	r3, #16
 8006f9a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006f9e:	e042      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006fa0:	697b      	ldr	r3, [r7, #20]
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	4a17      	ldr	r2, [pc, #92]	; (8007004 <UART_SetConfig+0x2dc>)
 8006fa6:	4293      	cmp	r3, r2
 8006fa8:	d13a      	bne.n	8007020 <UART_SetConfig+0x2f8>
 8006faa:	4b18      	ldr	r3, [pc, #96]	; (800700c <UART_SetConfig+0x2e4>)
 8006fac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006fb0:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8006fb4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8006fb8:	d01a      	beq.n	8006ff0 <UART_SetConfig+0x2c8>
 8006fba:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8006fbe:	d81b      	bhi.n	8006ff8 <UART_SetConfig+0x2d0>
 8006fc0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006fc4:	d00c      	beq.n	8006fe0 <UART_SetConfig+0x2b8>
 8006fc6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006fca:	d815      	bhi.n	8006ff8 <UART_SetConfig+0x2d0>
 8006fcc:	2b00      	cmp	r3, #0
 8006fce:	d003      	beq.n	8006fd8 <UART_SetConfig+0x2b0>
 8006fd0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006fd4:	d008      	beq.n	8006fe8 <UART_SetConfig+0x2c0>
 8006fd6:	e00f      	b.n	8006ff8 <UART_SetConfig+0x2d0>
 8006fd8:	2300      	movs	r3, #0
 8006fda:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006fde:	e022      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006fe0:	2302      	movs	r3, #2
 8006fe2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006fe6:	e01e      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006fe8:	2304      	movs	r3, #4
 8006fea:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006fee:	e01a      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006ff0:	2308      	movs	r3, #8
 8006ff2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006ff6:	e016      	b.n	8007026 <UART_SetConfig+0x2fe>
 8006ff8:	2310      	movs	r3, #16
 8006ffa:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006ffe:	e012      	b.n	8007026 <UART_SetConfig+0x2fe>
 8007000:	cfff69f3 	.word	0xcfff69f3
 8007004:	40008000 	.word	0x40008000
 8007008:	40013800 	.word	0x40013800
 800700c:	40021000 	.word	0x40021000
 8007010:	40004400 	.word	0x40004400
 8007014:	40004800 	.word	0x40004800
 8007018:	40004c00 	.word	0x40004c00
 800701c:	40005000 	.word	0x40005000
 8007020:	2310      	movs	r3, #16
 8007022:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007026:	697b      	ldr	r3, [r7, #20]
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	4aae      	ldr	r2, [pc, #696]	; (80072e4 <UART_SetConfig+0x5bc>)
 800702c:	4293      	cmp	r3, r2
 800702e:	f040 8097 	bne.w	8007160 <UART_SetConfig+0x438>
 8007032:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8007036:	2b08      	cmp	r3, #8
 8007038:	d823      	bhi.n	8007082 <UART_SetConfig+0x35a>
 800703a:	a201      	add	r2, pc, #4	; (adr r2, 8007040 <UART_SetConfig+0x318>)
 800703c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007040:	08007065 	.word	0x08007065
 8007044:	08007083 	.word	0x08007083
 8007048:	0800706d 	.word	0x0800706d
 800704c:	08007083 	.word	0x08007083
 8007050:	08007073 	.word	0x08007073
 8007054:	08007083 	.word	0x08007083
 8007058:	08007083 	.word	0x08007083
 800705c:	08007083 	.word	0x08007083
 8007060:	0800707b 	.word	0x0800707b
 8007064:	f7fd fd7a 	bl	8004b5c <HAL_RCC_GetPCLK1Freq>
 8007068:	6278      	str	r0, [r7, #36]	; 0x24
 800706a:	e010      	b.n	800708e <UART_SetConfig+0x366>
 800706c:	4b9e      	ldr	r3, [pc, #632]	; (80072e8 <UART_SetConfig+0x5c0>)
 800706e:	627b      	str	r3, [r7, #36]	; 0x24
 8007070:	e00d      	b.n	800708e <UART_SetConfig+0x366>
 8007072:	f7fd fd05 	bl	8004a80 <HAL_RCC_GetSysClockFreq>
 8007076:	6278      	str	r0, [r7, #36]	; 0x24
 8007078:	e009      	b.n	800708e <UART_SetConfig+0x366>
 800707a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800707e:	627b      	str	r3, [r7, #36]	; 0x24
 8007080:	e005      	b.n	800708e <UART_SetConfig+0x366>
 8007082:	2300      	movs	r3, #0
 8007084:	627b      	str	r3, [r7, #36]	; 0x24
 8007086:	2301      	movs	r3, #1
 8007088:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 800708c:	bf00      	nop
 800708e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007090:	2b00      	cmp	r3, #0
 8007092:	f000 8130 	beq.w	80072f6 <UART_SetConfig+0x5ce>
 8007096:	697b      	ldr	r3, [r7, #20]
 8007098:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800709a:	4a94      	ldr	r2, [pc, #592]	; (80072ec <UART_SetConfig+0x5c4>)
 800709c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80070a0:	461a      	mov	r2, r3
 80070a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80070a4:	fbb3 f3f2 	udiv	r3, r3, r2
 80070a8:	61bb      	str	r3, [r7, #24]
 80070aa:	697b      	ldr	r3, [r7, #20]
 80070ac:	685a      	ldr	r2, [r3, #4]
 80070ae:	4613      	mov	r3, r2
 80070b0:	005b      	lsls	r3, r3, #1
 80070b2:	4413      	add	r3, r2
 80070b4:	69ba      	ldr	r2, [r7, #24]
 80070b6:	429a      	cmp	r2, r3
 80070b8:	d305      	bcc.n	80070c6 <UART_SetConfig+0x39e>
 80070ba:	697b      	ldr	r3, [r7, #20]
 80070bc:	685b      	ldr	r3, [r3, #4]
 80070be:	031b      	lsls	r3, r3, #12
 80070c0:	69ba      	ldr	r2, [r7, #24]
 80070c2:	429a      	cmp	r2, r3
 80070c4:	d903      	bls.n	80070ce <UART_SetConfig+0x3a6>
 80070c6:	2301      	movs	r3, #1
 80070c8:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 80070cc:	e113      	b.n	80072f6 <UART_SetConfig+0x5ce>
 80070ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80070d0:	2200      	movs	r2, #0
 80070d2:	60bb      	str	r3, [r7, #8]
 80070d4:	60fa      	str	r2, [r7, #12]
 80070d6:	697b      	ldr	r3, [r7, #20]
 80070d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80070da:	4a84      	ldr	r2, [pc, #528]	; (80072ec <UART_SetConfig+0x5c4>)
 80070dc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80070e0:	b29b      	uxth	r3, r3
 80070e2:	2200      	movs	r2, #0
 80070e4:	603b      	str	r3, [r7, #0]
 80070e6:	607a      	str	r2, [r7, #4]
 80070e8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80070ec:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80070f0:	f7f9 fcf4 	bl	8000adc <__aeabi_uldivmod>
 80070f4:	4602      	mov	r2, r0
 80070f6:	460b      	mov	r3, r1
 80070f8:	4610      	mov	r0, r2
 80070fa:	4619      	mov	r1, r3
 80070fc:	f04f 0200 	mov.w	r2, #0
 8007100:	f04f 0300 	mov.w	r3, #0
 8007104:	020b      	lsls	r3, r1, #8
 8007106:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800710a:	0202      	lsls	r2, r0, #8
 800710c:	6979      	ldr	r1, [r7, #20]
 800710e:	6849      	ldr	r1, [r1, #4]
 8007110:	0849      	lsrs	r1, r1, #1
 8007112:	2000      	movs	r0, #0
 8007114:	460c      	mov	r4, r1
 8007116:	4605      	mov	r5, r0
 8007118:	eb12 0804 	adds.w	r8, r2, r4
 800711c:	eb43 0905 	adc.w	r9, r3, r5
 8007120:	697b      	ldr	r3, [r7, #20]
 8007122:	685b      	ldr	r3, [r3, #4]
 8007124:	2200      	movs	r2, #0
 8007126:	469a      	mov	sl, r3
 8007128:	4693      	mov	fp, r2
 800712a:	4652      	mov	r2, sl
 800712c:	465b      	mov	r3, fp
 800712e:	4640      	mov	r0, r8
 8007130:	4649      	mov	r1, r9
 8007132:	f7f9 fcd3 	bl	8000adc <__aeabi_uldivmod>
 8007136:	4602      	mov	r2, r0
 8007138:	460b      	mov	r3, r1
 800713a:	4613      	mov	r3, r2
 800713c:	623b      	str	r3, [r7, #32]
 800713e:	6a3b      	ldr	r3, [r7, #32]
 8007140:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007144:	d308      	bcc.n	8007158 <UART_SetConfig+0x430>
 8007146:	6a3b      	ldr	r3, [r7, #32]
 8007148:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800714c:	d204      	bcs.n	8007158 <UART_SetConfig+0x430>
 800714e:	697b      	ldr	r3, [r7, #20]
 8007150:	681b      	ldr	r3, [r3, #0]
 8007152:	6a3a      	ldr	r2, [r7, #32]
 8007154:	60da      	str	r2, [r3, #12]
 8007156:	e0ce      	b.n	80072f6 <UART_SetConfig+0x5ce>
 8007158:	2301      	movs	r3, #1
 800715a:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 800715e:	e0ca      	b.n	80072f6 <UART_SetConfig+0x5ce>
 8007160:	697b      	ldr	r3, [r7, #20]
 8007162:	69db      	ldr	r3, [r3, #28]
 8007164:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8007168:	d166      	bne.n	8007238 <UART_SetConfig+0x510>
 800716a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800716e:	2b08      	cmp	r3, #8
 8007170:	d827      	bhi.n	80071c2 <UART_SetConfig+0x49a>
 8007172:	a201      	add	r2, pc, #4	; (adr r2, 8007178 <UART_SetConfig+0x450>)
 8007174:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007178:	0800719d 	.word	0x0800719d
 800717c:	080071a5 	.word	0x080071a5
 8007180:	080071ad 	.word	0x080071ad
 8007184:	080071c3 	.word	0x080071c3
 8007188:	080071b3 	.word	0x080071b3
 800718c:	080071c3 	.word	0x080071c3
 8007190:	080071c3 	.word	0x080071c3
 8007194:	080071c3 	.word	0x080071c3
 8007198:	080071bb 	.word	0x080071bb
 800719c:	f7fd fcde 	bl	8004b5c <HAL_RCC_GetPCLK1Freq>
 80071a0:	6278      	str	r0, [r7, #36]	; 0x24
 80071a2:	e014      	b.n	80071ce <UART_SetConfig+0x4a6>
 80071a4:	f7fd fcf0 	bl	8004b88 <HAL_RCC_GetPCLK2Freq>
 80071a8:	6278      	str	r0, [r7, #36]	; 0x24
 80071aa:	e010      	b.n	80071ce <UART_SetConfig+0x4a6>
 80071ac:	4b4e      	ldr	r3, [pc, #312]	; (80072e8 <UART_SetConfig+0x5c0>)
 80071ae:	627b      	str	r3, [r7, #36]	; 0x24
 80071b0:	e00d      	b.n	80071ce <UART_SetConfig+0x4a6>
 80071b2:	f7fd fc65 	bl	8004a80 <HAL_RCC_GetSysClockFreq>
 80071b6:	6278      	str	r0, [r7, #36]	; 0x24
 80071b8:	e009      	b.n	80071ce <UART_SetConfig+0x4a6>
 80071ba:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80071be:	627b      	str	r3, [r7, #36]	; 0x24
 80071c0:	e005      	b.n	80071ce <UART_SetConfig+0x4a6>
 80071c2:	2300      	movs	r3, #0
 80071c4:	627b      	str	r3, [r7, #36]	; 0x24
 80071c6:	2301      	movs	r3, #1
 80071c8:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 80071cc:	bf00      	nop
 80071ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80071d0:	2b00      	cmp	r3, #0
 80071d2:	f000 8090 	beq.w	80072f6 <UART_SetConfig+0x5ce>
 80071d6:	697b      	ldr	r3, [r7, #20]
 80071d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071da:	4a44      	ldr	r2, [pc, #272]	; (80072ec <UART_SetConfig+0x5c4>)
 80071dc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80071e0:	461a      	mov	r2, r3
 80071e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80071e4:	fbb3 f3f2 	udiv	r3, r3, r2
 80071e8:	005a      	lsls	r2, r3, #1
 80071ea:	697b      	ldr	r3, [r7, #20]
 80071ec:	685b      	ldr	r3, [r3, #4]
 80071ee:	085b      	lsrs	r3, r3, #1
 80071f0:	441a      	add	r2, r3
 80071f2:	697b      	ldr	r3, [r7, #20]
 80071f4:	685b      	ldr	r3, [r3, #4]
 80071f6:	fbb2 f3f3 	udiv	r3, r2, r3
 80071fa:	623b      	str	r3, [r7, #32]
 80071fc:	6a3b      	ldr	r3, [r7, #32]
 80071fe:	2b0f      	cmp	r3, #15
 8007200:	d916      	bls.n	8007230 <UART_SetConfig+0x508>
 8007202:	6a3b      	ldr	r3, [r7, #32]
 8007204:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007208:	d212      	bcs.n	8007230 <UART_SetConfig+0x508>
 800720a:	6a3b      	ldr	r3, [r7, #32]
 800720c:	b29b      	uxth	r3, r3
 800720e:	f023 030f 	bic.w	r3, r3, #15
 8007212:	83fb      	strh	r3, [r7, #30]
 8007214:	6a3b      	ldr	r3, [r7, #32]
 8007216:	085b      	lsrs	r3, r3, #1
 8007218:	b29b      	uxth	r3, r3
 800721a:	f003 0307 	and.w	r3, r3, #7
 800721e:	b29a      	uxth	r2, r3
 8007220:	8bfb      	ldrh	r3, [r7, #30]
 8007222:	4313      	orrs	r3, r2
 8007224:	83fb      	strh	r3, [r7, #30]
 8007226:	697b      	ldr	r3, [r7, #20]
 8007228:	681b      	ldr	r3, [r3, #0]
 800722a:	8bfa      	ldrh	r2, [r7, #30]
 800722c:	60da      	str	r2, [r3, #12]
 800722e:	e062      	b.n	80072f6 <UART_SetConfig+0x5ce>
 8007230:	2301      	movs	r3, #1
 8007232:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8007236:	e05e      	b.n	80072f6 <UART_SetConfig+0x5ce>
 8007238:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800723c:	2b08      	cmp	r3, #8
 800723e:	d828      	bhi.n	8007292 <UART_SetConfig+0x56a>
 8007240:	a201      	add	r2, pc, #4	; (adr r2, 8007248 <UART_SetConfig+0x520>)
 8007242:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007246:	bf00      	nop
 8007248:	0800726d 	.word	0x0800726d
 800724c:	08007275 	.word	0x08007275
 8007250:	0800727d 	.word	0x0800727d
 8007254:	08007293 	.word	0x08007293
 8007258:	08007283 	.word	0x08007283
 800725c:	08007293 	.word	0x08007293
 8007260:	08007293 	.word	0x08007293
 8007264:	08007293 	.word	0x08007293
 8007268:	0800728b 	.word	0x0800728b
 800726c:	f7fd fc76 	bl	8004b5c <HAL_RCC_GetPCLK1Freq>
 8007270:	6278      	str	r0, [r7, #36]	; 0x24
 8007272:	e014      	b.n	800729e <UART_SetConfig+0x576>
 8007274:	f7fd fc88 	bl	8004b88 <HAL_RCC_GetPCLK2Freq>
 8007278:	6278      	str	r0, [r7, #36]	; 0x24
 800727a:	e010      	b.n	800729e <UART_SetConfig+0x576>
 800727c:	4b1a      	ldr	r3, [pc, #104]	; (80072e8 <UART_SetConfig+0x5c0>)
 800727e:	627b      	str	r3, [r7, #36]	; 0x24
 8007280:	e00d      	b.n	800729e <UART_SetConfig+0x576>
 8007282:	f7fd fbfd 	bl	8004a80 <HAL_RCC_GetSysClockFreq>
 8007286:	6278      	str	r0, [r7, #36]	; 0x24
 8007288:	e009      	b.n	800729e <UART_SetConfig+0x576>
 800728a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800728e:	627b      	str	r3, [r7, #36]	; 0x24
 8007290:	e005      	b.n	800729e <UART_SetConfig+0x576>
 8007292:	2300      	movs	r3, #0
 8007294:	627b      	str	r3, [r7, #36]	; 0x24
 8007296:	2301      	movs	r3, #1
 8007298:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 800729c:	bf00      	nop
 800729e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072a0:	2b00      	cmp	r3, #0
 80072a2:	d028      	beq.n	80072f6 <UART_SetConfig+0x5ce>
 80072a4:	697b      	ldr	r3, [r7, #20]
 80072a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072a8:	4a10      	ldr	r2, [pc, #64]	; (80072ec <UART_SetConfig+0x5c4>)
 80072aa:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80072ae:	461a      	mov	r2, r3
 80072b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80072b2:	fbb3 f2f2 	udiv	r2, r3, r2
 80072b6:	697b      	ldr	r3, [r7, #20]
 80072b8:	685b      	ldr	r3, [r3, #4]
 80072ba:	085b      	lsrs	r3, r3, #1
 80072bc:	441a      	add	r2, r3
 80072be:	697b      	ldr	r3, [r7, #20]
 80072c0:	685b      	ldr	r3, [r3, #4]
 80072c2:	fbb2 f3f3 	udiv	r3, r2, r3
 80072c6:	623b      	str	r3, [r7, #32]
 80072c8:	6a3b      	ldr	r3, [r7, #32]
 80072ca:	2b0f      	cmp	r3, #15
 80072cc:	d910      	bls.n	80072f0 <UART_SetConfig+0x5c8>
 80072ce:	6a3b      	ldr	r3, [r7, #32]
 80072d0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80072d4:	d20c      	bcs.n	80072f0 <UART_SetConfig+0x5c8>
 80072d6:	6a3b      	ldr	r3, [r7, #32]
 80072d8:	b29a      	uxth	r2, r3
 80072da:	697b      	ldr	r3, [r7, #20]
 80072dc:	681b      	ldr	r3, [r3, #0]
 80072de:	60da      	str	r2, [r3, #12]
 80072e0:	e009      	b.n	80072f6 <UART_SetConfig+0x5ce>
 80072e2:	bf00      	nop
 80072e4:	40008000 	.word	0x40008000
 80072e8:	00f42400 	.word	0x00f42400
 80072ec:	08009be8 	.word	0x08009be8
 80072f0:	2301      	movs	r3, #1
 80072f2:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 80072f6:	697b      	ldr	r3, [r7, #20]
 80072f8:	2201      	movs	r2, #1
 80072fa:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 80072fe:	697b      	ldr	r3, [r7, #20]
 8007300:	2201      	movs	r2, #1
 8007302:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8007306:	697b      	ldr	r3, [r7, #20]
 8007308:	2200      	movs	r2, #0
 800730a:	671a      	str	r2, [r3, #112]	; 0x70
 800730c:	697b      	ldr	r3, [r7, #20]
 800730e:	2200      	movs	r2, #0
 8007310:	675a      	str	r2, [r3, #116]	; 0x74
 8007312:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 8007316:	4618      	mov	r0, r3
 8007318:	3730      	adds	r7, #48	; 0x30
 800731a:	46bd      	mov	sp, r7
 800731c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

08007320 <UART_AdvFeatureConfig>:
 8007320:	b480      	push	{r7}
 8007322:	b083      	sub	sp, #12
 8007324:	af00      	add	r7, sp, #0
 8007326:	6078      	str	r0, [r7, #4]
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800732c:	f003 0301 	and.w	r3, r3, #1
 8007330:	2b00      	cmp	r3, #0
 8007332:	d00a      	beq.n	800734a <UART_AdvFeatureConfig+0x2a>
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	681b      	ldr	r3, [r3, #0]
 8007338:	685b      	ldr	r3, [r3, #4]
 800733a:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007342:	687b      	ldr	r3, [r7, #4]
 8007344:	681b      	ldr	r3, [r3, #0]
 8007346:	430a      	orrs	r2, r1
 8007348:	605a      	str	r2, [r3, #4]
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800734e:	f003 0302 	and.w	r3, r3, #2
 8007352:	2b00      	cmp	r3, #0
 8007354:	d00a      	beq.n	800736c <UART_AdvFeatureConfig+0x4c>
 8007356:	687b      	ldr	r3, [r7, #4]
 8007358:	681b      	ldr	r3, [r3, #0]
 800735a:	685b      	ldr	r3, [r3, #4]
 800735c:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	681b      	ldr	r3, [r3, #0]
 8007368:	430a      	orrs	r2, r1
 800736a:	605a      	str	r2, [r3, #4]
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007370:	f003 0304 	and.w	r3, r3, #4
 8007374:	2b00      	cmp	r3, #0
 8007376:	d00a      	beq.n	800738e <UART_AdvFeatureConfig+0x6e>
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	681b      	ldr	r3, [r3, #0]
 800737c:	685b      	ldr	r3, [r3, #4]
 800737e:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8007382:	687b      	ldr	r3, [r7, #4]
 8007384:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	430a      	orrs	r2, r1
 800738c:	605a      	str	r2, [r3, #4]
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007392:	f003 0308 	and.w	r3, r3, #8
 8007396:	2b00      	cmp	r3, #0
 8007398:	d00a      	beq.n	80073b0 <UART_AdvFeatureConfig+0x90>
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	681b      	ldr	r3, [r3, #0]
 800739e:	685b      	ldr	r3, [r3, #4]
 80073a0:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	681b      	ldr	r3, [r3, #0]
 80073ac:	430a      	orrs	r2, r1
 80073ae:	605a      	str	r2, [r3, #4]
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80073b4:	f003 0310 	and.w	r3, r3, #16
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	d00a      	beq.n	80073d2 <UART_AdvFeatureConfig+0xb2>
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	689b      	ldr	r3, [r3, #8]
 80073c2:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	681b      	ldr	r3, [r3, #0]
 80073ce:	430a      	orrs	r2, r1
 80073d0:	609a      	str	r2, [r3, #8]
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80073d6:	f003 0320 	and.w	r3, r3, #32
 80073da:	2b00      	cmp	r3, #0
 80073dc:	d00a      	beq.n	80073f4 <UART_AdvFeatureConfig+0xd4>
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	681b      	ldr	r3, [r3, #0]
 80073e2:	689b      	ldr	r3, [r3, #8]
 80073e4:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	430a      	orrs	r2, r1
 80073f2:	609a      	str	r2, [r3, #8]
 80073f4:	687b      	ldr	r3, [r7, #4]
 80073f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80073f8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80073fc:	2b00      	cmp	r3, #0
 80073fe:	d01a      	beq.n	8007436 <UART_AdvFeatureConfig+0x116>
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	681b      	ldr	r3, [r3, #0]
 8007404:	685b      	ldr	r3, [r3, #4]
 8007406:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	681b      	ldr	r3, [r3, #0]
 8007412:	430a      	orrs	r2, r1
 8007414:	605a      	str	r2, [r3, #4]
 8007416:	687b      	ldr	r3, [r7, #4]
 8007418:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800741a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800741e:	d10a      	bne.n	8007436 <UART_AdvFeatureConfig+0x116>
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	681b      	ldr	r3, [r3, #0]
 8007424:	685b      	ldr	r3, [r3, #4]
 8007426:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800742e:	687b      	ldr	r3, [r7, #4]
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	430a      	orrs	r2, r1
 8007434:	605a      	str	r2, [r3, #4]
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800743a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800743e:	2b00      	cmp	r3, #0
 8007440:	d00a      	beq.n	8007458 <UART_AdvFeatureConfig+0x138>
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	681b      	ldr	r3, [r3, #0]
 8007446:	685b      	ldr	r3, [r3, #4]
 8007448:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800744c:	687b      	ldr	r3, [r7, #4]
 800744e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	681b      	ldr	r3, [r3, #0]
 8007454:	430a      	orrs	r2, r1
 8007456:	605a      	str	r2, [r3, #4]
 8007458:	bf00      	nop
 800745a:	370c      	adds	r7, #12
 800745c:	46bd      	mov	sp, r7
 800745e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007462:	4770      	bx	lr

08007464 <UART_CheckIdleState>:
 8007464:	b580      	push	{r7, lr}
 8007466:	b086      	sub	sp, #24
 8007468:	af02      	add	r7, sp, #8
 800746a:	6078      	str	r0, [r7, #4]
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	2200      	movs	r2, #0
 8007470:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8007474:	f7fa fc9e 	bl	8001db4 <HAL_GetTick>
 8007478:	60f8      	str	r0, [r7, #12]
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	681b      	ldr	r3, [r3, #0]
 800747e:	681b      	ldr	r3, [r3, #0]
 8007480:	f003 0308 	and.w	r3, r3, #8
 8007484:	2b08      	cmp	r3, #8
 8007486:	d10e      	bne.n	80074a6 <UART_CheckIdleState+0x42>
 8007488:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800748c:	9300      	str	r3, [sp, #0]
 800748e:	68fb      	ldr	r3, [r7, #12]
 8007490:	2200      	movs	r2, #0
 8007492:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8007496:	6878      	ldr	r0, [r7, #4]
 8007498:	f000 f82f 	bl	80074fa <UART_WaitOnFlagUntilTimeout>
 800749c:	4603      	mov	r3, r0
 800749e:	2b00      	cmp	r3, #0
 80074a0:	d001      	beq.n	80074a6 <UART_CheckIdleState+0x42>
 80074a2:	2303      	movs	r3, #3
 80074a4:	e025      	b.n	80074f2 <UART_CheckIdleState+0x8e>
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	681b      	ldr	r3, [r3, #0]
 80074ac:	f003 0304 	and.w	r3, r3, #4
 80074b0:	2b04      	cmp	r3, #4
 80074b2:	d10e      	bne.n	80074d2 <UART_CheckIdleState+0x6e>
 80074b4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80074b8:	9300      	str	r3, [sp, #0]
 80074ba:	68fb      	ldr	r3, [r7, #12]
 80074bc:	2200      	movs	r2, #0
 80074be:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80074c2:	6878      	ldr	r0, [r7, #4]
 80074c4:	f000 f819 	bl	80074fa <UART_WaitOnFlagUntilTimeout>
 80074c8:	4603      	mov	r3, r0
 80074ca:	2b00      	cmp	r3, #0
 80074cc:	d001      	beq.n	80074d2 <UART_CheckIdleState+0x6e>
 80074ce:	2303      	movs	r3, #3
 80074d0:	e00f      	b.n	80074f2 <UART_CheckIdleState+0x8e>
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	2220      	movs	r2, #32
 80074d6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	2220      	movs	r2, #32
 80074de:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	2200      	movs	r2, #0
 80074e6:	66da      	str	r2, [r3, #108]	; 0x6c
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	2200      	movs	r2, #0
 80074ec:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80074f0:	2300      	movs	r3, #0
 80074f2:	4618      	mov	r0, r3
 80074f4:	3710      	adds	r7, #16
 80074f6:	46bd      	mov	sp, r7
 80074f8:	bd80      	pop	{r7, pc}

080074fa <UART_WaitOnFlagUntilTimeout>:
 80074fa:	b580      	push	{r7, lr}
 80074fc:	b09c      	sub	sp, #112	; 0x70
 80074fe:	af00      	add	r7, sp, #0
 8007500:	60f8      	str	r0, [r7, #12]
 8007502:	60b9      	str	r1, [r7, #8]
 8007504:	603b      	str	r3, [r7, #0]
 8007506:	4613      	mov	r3, r2
 8007508:	71fb      	strb	r3, [r7, #7]
 800750a:	e0a9      	b.n	8007660 <UART_WaitOnFlagUntilTimeout+0x166>
 800750c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800750e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007512:	f000 80a5 	beq.w	8007660 <UART_WaitOnFlagUntilTimeout+0x166>
 8007516:	f7fa fc4d 	bl	8001db4 <HAL_GetTick>
 800751a:	4602      	mov	r2, r0
 800751c:	683b      	ldr	r3, [r7, #0]
 800751e:	1ad3      	subs	r3, r2, r3
 8007520:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8007522:	429a      	cmp	r2, r3
 8007524:	d302      	bcc.n	800752c <UART_WaitOnFlagUntilTimeout+0x32>
 8007526:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8007528:	2b00      	cmp	r3, #0
 800752a:	d140      	bne.n	80075ae <UART_WaitOnFlagUntilTimeout+0xb4>
 800752c:	68fb      	ldr	r3, [r7, #12]
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	653b      	str	r3, [r7, #80]	; 0x50
 8007532:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007534:	e853 3f00 	ldrex	r3, [r3]
 8007538:	64fb      	str	r3, [r7, #76]	; 0x4c
 800753a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800753c:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8007540:	667b      	str	r3, [r7, #100]	; 0x64
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	461a      	mov	r2, r3
 8007548:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800754a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800754c:	65ba      	str	r2, [r7, #88]	; 0x58
 800754e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8007550:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8007552:	e841 2300 	strex	r3, r2, [r1]
 8007556:	657b      	str	r3, [r7, #84]	; 0x54
 8007558:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800755a:	2b00      	cmp	r3, #0
 800755c:	d1e6      	bne.n	800752c <UART_WaitOnFlagUntilTimeout+0x32>
 800755e:	68fb      	ldr	r3, [r7, #12]
 8007560:	681b      	ldr	r3, [r3, #0]
 8007562:	3308      	adds	r3, #8
 8007564:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007566:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007568:	e853 3f00 	ldrex	r3, [r3]
 800756c:	63bb      	str	r3, [r7, #56]	; 0x38
 800756e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007570:	f023 0301 	bic.w	r3, r3, #1
 8007574:	663b      	str	r3, [r7, #96]	; 0x60
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	681b      	ldr	r3, [r3, #0]
 800757a:	3308      	adds	r3, #8
 800757c:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800757e:	64ba      	str	r2, [r7, #72]	; 0x48
 8007580:	647b      	str	r3, [r7, #68]	; 0x44
 8007582:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8007584:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8007586:	e841 2300 	strex	r3, r2, [r1]
 800758a:	643b      	str	r3, [r7, #64]	; 0x40
 800758c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800758e:	2b00      	cmp	r3, #0
 8007590:	d1e5      	bne.n	800755e <UART_WaitOnFlagUntilTimeout+0x64>
 8007592:	68fb      	ldr	r3, [r7, #12]
 8007594:	2220      	movs	r2, #32
 8007596:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800759a:	68fb      	ldr	r3, [r7, #12]
 800759c:	2220      	movs	r2, #32
 800759e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80075a2:	68fb      	ldr	r3, [r7, #12]
 80075a4:	2200      	movs	r2, #0
 80075a6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80075aa:	2303      	movs	r3, #3
 80075ac:	e069      	b.n	8007682 <UART_WaitOnFlagUntilTimeout+0x188>
 80075ae:	68fb      	ldr	r3, [r7, #12]
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	f003 0304 	and.w	r3, r3, #4
 80075b8:	2b00      	cmp	r3, #0
 80075ba:	d051      	beq.n	8007660 <UART_WaitOnFlagUntilTimeout+0x166>
 80075bc:	68fb      	ldr	r3, [r7, #12]
 80075be:	681b      	ldr	r3, [r3, #0]
 80075c0:	69db      	ldr	r3, [r3, #28]
 80075c2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80075c6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80075ca:	d149      	bne.n	8007660 <UART_WaitOnFlagUntilTimeout+0x166>
 80075cc:	68fb      	ldr	r3, [r7, #12]
 80075ce:	681b      	ldr	r3, [r3, #0]
 80075d0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80075d4:	621a      	str	r2, [r3, #32]
 80075d6:	68fb      	ldr	r3, [r7, #12]
 80075d8:	681b      	ldr	r3, [r3, #0]
 80075da:	62bb      	str	r3, [r7, #40]	; 0x28
 80075dc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80075de:	e853 3f00 	ldrex	r3, [r3]
 80075e2:	627b      	str	r3, [r7, #36]	; 0x24
 80075e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80075e6:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80075ea:	66fb      	str	r3, [r7, #108]	; 0x6c
 80075ec:	68fb      	ldr	r3, [r7, #12]
 80075ee:	681b      	ldr	r3, [r3, #0]
 80075f0:	461a      	mov	r2, r3
 80075f2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80075f4:	637b      	str	r3, [r7, #52]	; 0x34
 80075f6:	633a      	str	r2, [r7, #48]	; 0x30
 80075f8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80075fa:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80075fc:	e841 2300 	strex	r3, r2, [r1]
 8007600:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007602:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007604:	2b00      	cmp	r3, #0
 8007606:	d1e6      	bne.n	80075d6 <UART_WaitOnFlagUntilTimeout+0xdc>
 8007608:	68fb      	ldr	r3, [r7, #12]
 800760a:	681b      	ldr	r3, [r3, #0]
 800760c:	3308      	adds	r3, #8
 800760e:	617b      	str	r3, [r7, #20]
 8007610:	697b      	ldr	r3, [r7, #20]
 8007612:	e853 3f00 	ldrex	r3, [r3]
 8007616:	613b      	str	r3, [r7, #16]
 8007618:	693b      	ldr	r3, [r7, #16]
 800761a:	f023 0301 	bic.w	r3, r3, #1
 800761e:	66bb      	str	r3, [r7, #104]	; 0x68
 8007620:	68fb      	ldr	r3, [r7, #12]
 8007622:	681b      	ldr	r3, [r3, #0]
 8007624:	3308      	adds	r3, #8
 8007626:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8007628:	623a      	str	r2, [r7, #32]
 800762a:	61fb      	str	r3, [r7, #28]
 800762c:	69f9      	ldr	r1, [r7, #28]
 800762e:	6a3a      	ldr	r2, [r7, #32]
 8007630:	e841 2300 	strex	r3, r2, [r1]
 8007634:	61bb      	str	r3, [r7, #24]
 8007636:	69bb      	ldr	r3, [r7, #24]
 8007638:	2b00      	cmp	r3, #0
 800763a:	d1e5      	bne.n	8007608 <UART_WaitOnFlagUntilTimeout+0x10e>
 800763c:	68fb      	ldr	r3, [r7, #12]
 800763e:	2220      	movs	r2, #32
 8007640:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8007644:	68fb      	ldr	r3, [r7, #12]
 8007646:	2220      	movs	r2, #32
 8007648:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800764c:	68fb      	ldr	r3, [r7, #12]
 800764e:	2220      	movs	r2, #32
 8007650:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8007654:	68fb      	ldr	r3, [r7, #12]
 8007656:	2200      	movs	r2, #0
 8007658:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800765c:	2303      	movs	r3, #3
 800765e:	e010      	b.n	8007682 <UART_WaitOnFlagUntilTimeout+0x188>
 8007660:	68fb      	ldr	r3, [r7, #12]
 8007662:	681b      	ldr	r3, [r3, #0]
 8007664:	69da      	ldr	r2, [r3, #28]
 8007666:	68bb      	ldr	r3, [r7, #8]
 8007668:	4013      	ands	r3, r2
 800766a:	68ba      	ldr	r2, [r7, #8]
 800766c:	429a      	cmp	r2, r3
 800766e:	bf0c      	ite	eq
 8007670:	2301      	moveq	r3, #1
 8007672:	2300      	movne	r3, #0
 8007674:	b2db      	uxtb	r3, r3
 8007676:	461a      	mov	r2, r3
 8007678:	79fb      	ldrb	r3, [r7, #7]
 800767a:	429a      	cmp	r2, r3
 800767c:	f43f af46 	beq.w	800750c <UART_WaitOnFlagUntilTimeout+0x12>
 8007680:	2300      	movs	r3, #0
 8007682:	4618      	mov	r0, r3
 8007684:	3770      	adds	r7, #112	; 0x70
 8007686:	46bd      	mov	sp, r7
 8007688:	bd80      	pop	{r7, pc}
	...

0800768c <UART_Start_Receive_IT>:
 800768c:	b480      	push	{r7}
 800768e:	b0a3      	sub	sp, #140	; 0x8c
 8007690:	af00      	add	r7, sp, #0
 8007692:	60f8      	str	r0, [r7, #12]
 8007694:	60b9      	str	r1, [r7, #8]
 8007696:	4613      	mov	r3, r2
 8007698:	80fb      	strh	r3, [r7, #6]
 800769a:	68fb      	ldr	r3, [r7, #12]
 800769c:	68ba      	ldr	r2, [r7, #8]
 800769e:	659a      	str	r2, [r3, #88]	; 0x58
 80076a0:	68fb      	ldr	r3, [r7, #12]
 80076a2:	88fa      	ldrh	r2, [r7, #6]
 80076a4:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 80076a8:	68fb      	ldr	r3, [r7, #12]
 80076aa:	88fa      	ldrh	r2, [r7, #6]
 80076ac:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80076b0:	68fb      	ldr	r3, [r7, #12]
 80076b2:	2200      	movs	r2, #0
 80076b4:	671a      	str	r2, [r3, #112]	; 0x70
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	689b      	ldr	r3, [r3, #8]
 80076ba:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80076be:	d10e      	bne.n	80076de <UART_Start_Receive_IT+0x52>
 80076c0:	68fb      	ldr	r3, [r7, #12]
 80076c2:	691b      	ldr	r3, [r3, #16]
 80076c4:	2b00      	cmp	r3, #0
 80076c6:	d105      	bne.n	80076d4 <UART_Start_Receive_IT+0x48>
 80076c8:	68fb      	ldr	r3, [r7, #12]
 80076ca:	f240 12ff 	movw	r2, #511	; 0x1ff
 80076ce:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 80076d2:	e02d      	b.n	8007730 <UART_Start_Receive_IT+0xa4>
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	22ff      	movs	r2, #255	; 0xff
 80076d8:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 80076dc:	e028      	b.n	8007730 <UART_Start_Receive_IT+0xa4>
 80076de:	68fb      	ldr	r3, [r7, #12]
 80076e0:	689b      	ldr	r3, [r3, #8]
 80076e2:	2b00      	cmp	r3, #0
 80076e4:	d10d      	bne.n	8007702 <UART_Start_Receive_IT+0x76>
 80076e6:	68fb      	ldr	r3, [r7, #12]
 80076e8:	691b      	ldr	r3, [r3, #16]
 80076ea:	2b00      	cmp	r3, #0
 80076ec:	d104      	bne.n	80076f8 <UART_Start_Receive_IT+0x6c>
 80076ee:	68fb      	ldr	r3, [r7, #12]
 80076f0:	22ff      	movs	r2, #255	; 0xff
 80076f2:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 80076f6:	e01b      	b.n	8007730 <UART_Start_Receive_IT+0xa4>
 80076f8:	68fb      	ldr	r3, [r7, #12]
 80076fa:	227f      	movs	r2, #127	; 0x7f
 80076fc:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8007700:	e016      	b.n	8007730 <UART_Start_Receive_IT+0xa4>
 8007702:	68fb      	ldr	r3, [r7, #12]
 8007704:	689b      	ldr	r3, [r3, #8]
 8007706:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800770a:	d10d      	bne.n	8007728 <UART_Start_Receive_IT+0x9c>
 800770c:	68fb      	ldr	r3, [r7, #12]
 800770e:	691b      	ldr	r3, [r3, #16]
 8007710:	2b00      	cmp	r3, #0
 8007712:	d104      	bne.n	800771e <UART_Start_Receive_IT+0x92>
 8007714:	68fb      	ldr	r3, [r7, #12]
 8007716:	227f      	movs	r2, #127	; 0x7f
 8007718:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800771c:	e008      	b.n	8007730 <UART_Start_Receive_IT+0xa4>
 800771e:	68fb      	ldr	r3, [r7, #12]
 8007720:	223f      	movs	r2, #63	; 0x3f
 8007722:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8007726:	e003      	b.n	8007730 <UART_Start_Receive_IT+0xa4>
 8007728:	68fb      	ldr	r3, [r7, #12]
 800772a:	2200      	movs	r2, #0
 800772c:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 8007730:	68fb      	ldr	r3, [r7, #12]
 8007732:	2200      	movs	r2, #0
 8007734:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8007738:	68fb      	ldr	r3, [r7, #12]
 800773a:	2222      	movs	r2, #34	; 0x22
 800773c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8007740:	68fb      	ldr	r3, [r7, #12]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	3308      	adds	r3, #8
 8007746:	667b      	str	r3, [r7, #100]	; 0x64
 8007748:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800774a:	e853 3f00 	ldrex	r3, [r3]
 800774e:	663b      	str	r3, [r7, #96]	; 0x60
 8007750:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8007752:	f043 0301 	orr.w	r3, r3, #1
 8007756:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800775a:	68fb      	ldr	r3, [r7, #12]
 800775c:	681b      	ldr	r3, [r3, #0]
 800775e:	3308      	adds	r3, #8
 8007760:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8007764:	673a      	str	r2, [r7, #112]	; 0x70
 8007766:	66fb      	str	r3, [r7, #108]	; 0x6c
 8007768:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 800776a:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800776c:	e841 2300 	strex	r3, r2, [r1]
 8007770:	66bb      	str	r3, [r7, #104]	; 0x68
 8007772:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8007774:	2b00      	cmp	r3, #0
 8007776:	d1e3      	bne.n	8007740 <UART_Start_Receive_IT+0xb4>
 8007778:	68fb      	ldr	r3, [r7, #12]
 800777a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800777c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007780:	d153      	bne.n	800782a <UART_Start_Receive_IT+0x19e>
 8007782:	68fb      	ldr	r3, [r7, #12]
 8007784:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8007788:	88fa      	ldrh	r2, [r7, #6]
 800778a:	429a      	cmp	r2, r3
 800778c:	d34d      	bcc.n	800782a <UART_Start_Receive_IT+0x19e>
 800778e:	68fb      	ldr	r3, [r7, #12]
 8007790:	689b      	ldr	r3, [r3, #8]
 8007792:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007796:	d107      	bne.n	80077a8 <UART_Start_Receive_IT+0x11c>
 8007798:	68fb      	ldr	r3, [r7, #12]
 800779a:	691b      	ldr	r3, [r3, #16]
 800779c:	2b00      	cmp	r3, #0
 800779e:	d103      	bne.n	80077a8 <UART_Start_Receive_IT+0x11c>
 80077a0:	68fb      	ldr	r3, [r7, #12]
 80077a2:	4a4b      	ldr	r2, [pc, #300]	; (80078d0 <UART_Start_Receive_IT+0x244>)
 80077a4:	671a      	str	r2, [r3, #112]	; 0x70
 80077a6:	e002      	b.n	80077ae <UART_Start_Receive_IT+0x122>
 80077a8:	68fb      	ldr	r3, [r7, #12]
 80077aa:	4a4a      	ldr	r2, [pc, #296]	; (80078d4 <UART_Start_Receive_IT+0x248>)
 80077ac:	671a      	str	r2, [r3, #112]	; 0x70
 80077ae:	68fb      	ldr	r3, [r7, #12]
 80077b0:	2200      	movs	r2, #0
 80077b2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80077b6:	68fb      	ldr	r3, [r7, #12]
 80077b8:	691b      	ldr	r3, [r3, #16]
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d01a      	beq.n	80077f4 <UART_Start_Receive_IT+0x168>
 80077be:	68fb      	ldr	r3, [r7, #12]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	653b      	str	r3, [r7, #80]	; 0x50
 80077c4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80077c6:	e853 3f00 	ldrex	r3, [r3]
 80077ca:	64fb      	str	r3, [r7, #76]	; 0x4c
 80077cc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80077ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80077d2:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80077d6:	68fb      	ldr	r3, [r7, #12]
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	461a      	mov	r2, r3
 80077dc:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80077e0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80077e2:	65ba      	str	r2, [r7, #88]	; 0x58
 80077e4:	6db9      	ldr	r1, [r7, #88]	; 0x58
 80077e6:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80077e8:	e841 2300 	strex	r3, r2, [r1]
 80077ec:	657b      	str	r3, [r7, #84]	; 0x54
 80077ee:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80077f0:	2b00      	cmp	r3, #0
 80077f2:	d1e4      	bne.n	80077be <UART_Start_Receive_IT+0x132>
 80077f4:	68fb      	ldr	r3, [r7, #12]
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	3308      	adds	r3, #8
 80077fa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80077fc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80077fe:	e853 3f00 	ldrex	r3, [r3]
 8007802:	63bb      	str	r3, [r7, #56]	; 0x38
 8007804:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007806:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800780a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800780c:	68fb      	ldr	r3, [r7, #12]
 800780e:	681b      	ldr	r3, [r3, #0]
 8007810:	3308      	adds	r3, #8
 8007812:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8007814:	64ba      	str	r2, [r7, #72]	; 0x48
 8007816:	647b      	str	r3, [r7, #68]	; 0x44
 8007818:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800781a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800781c:	e841 2300 	strex	r3, r2, [r1]
 8007820:	643b      	str	r3, [r7, #64]	; 0x40
 8007822:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8007824:	2b00      	cmp	r3, #0
 8007826:	d1e5      	bne.n	80077f4 <UART_Start_Receive_IT+0x168>
 8007828:	e04a      	b.n	80078c0 <UART_Start_Receive_IT+0x234>
 800782a:	68fb      	ldr	r3, [r7, #12]
 800782c:	689b      	ldr	r3, [r3, #8]
 800782e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007832:	d107      	bne.n	8007844 <UART_Start_Receive_IT+0x1b8>
 8007834:	68fb      	ldr	r3, [r7, #12]
 8007836:	691b      	ldr	r3, [r3, #16]
 8007838:	2b00      	cmp	r3, #0
 800783a:	d103      	bne.n	8007844 <UART_Start_Receive_IT+0x1b8>
 800783c:	68fb      	ldr	r3, [r7, #12]
 800783e:	4a26      	ldr	r2, [pc, #152]	; (80078d8 <UART_Start_Receive_IT+0x24c>)
 8007840:	671a      	str	r2, [r3, #112]	; 0x70
 8007842:	e002      	b.n	800784a <UART_Start_Receive_IT+0x1be>
 8007844:	68fb      	ldr	r3, [r7, #12]
 8007846:	4a25      	ldr	r2, [pc, #148]	; (80078dc <UART_Start_Receive_IT+0x250>)
 8007848:	671a      	str	r2, [r3, #112]	; 0x70
 800784a:	68fb      	ldr	r3, [r7, #12]
 800784c:	2200      	movs	r2, #0
 800784e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8007852:	68fb      	ldr	r3, [r7, #12]
 8007854:	691b      	ldr	r3, [r3, #16]
 8007856:	2b00      	cmp	r3, #0
 8007858:	d019      	beq.n	800788e <UART_Start_Receive_IT+0x202>
 800785a:	68fb      	ldr	r3, [r7, #12]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	62bb      	str	r3, [r7, #40]	; 0x28
 8007860:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007862:	e853 3f00 	ldrex	r3, [r3]
 8007866:	627b      	str	r3, [r7, #36]	; 0x24
 8007868:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800786a:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 800786e:	677b      	str	r3, [r7, #116]	; 0x74
 8007870:	68fb      	ldr	r3, [r7, #12]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	461a      	mov	r2, r3
 8007876:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8007878:	637b      	str	r3, [r7, #52]	; 0x34
 800787a:	633a      	str	r2, [r7, #48]	; 0x30
 800787c:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800787e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8007880:	e841 2300 	strex	r3, r2, [r1]
 8007884:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007886:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007888:	2b00      	cmp	r3, #0
 800788a:	d1e6      	bne.n	800785a <UART_Start_Receive_IT+0x1ce>
 800788c:	e018      	b.n	80078c0 <UART_Start_Receive_IT+0x234>
 800788e:	68fb      	ldr	r3, [r7, #12]
 8007890:	681b      	ldr	r3, [r3, #0]
 8007892:	617b      	str	r3, [r7, #20]
 8007894:	697b      	ldr	r3, [r7, #20]
 8007896:	e853 3f00 	ldrex	r3, [r3]
 800789a:	613b      	str	r3, [r7, #16]
 800789c:	693b      	ldr	r3, [r7, #16]
 800789e:	f043 0320 	orr.w	r3, r3, #32
 80078a2:	67bb      	str	r3, [r7, #120]	; 0x78
 80078a4:	68fb      	ldr	r3, [r7, #12]
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	461a      	mov	r2, r3
 80078aa:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80078ac:	623b      	str	r3, [r7, #32]
 80078ae:	61fa      	str	r2, [r7, #28]
 80078b0:	69f9      	ldr	r1, [r7, #28]
 80078b2:	6a3a      	ldr	r2, [r7, #32]
 80078b4:	e841 2300 	strex	r3, r2, [r1]
 80078b8:	61bb      	str	r3, [r7, #24]
 80078ba:	69bb      	ldr	r3, [r7, #24]
 80078bc:	2b00      	cmp	r3, #0
 80078be:	d1e6      	bne.n	800788e <UART_Start_Receive_IT+0x202>
 80078c0:	2300      	movs	r3, #0
 80078c2:	4618      	mov	r0, r3
 80078c4:	378c      	adds	r7, #140	; 0x8c
 80078c6:	46bd      	mov	sp, r7
 80078c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078cc:	4770      	bx	lr
 80078ce:	bf00      	nop
 80078d0:	08007fe9 	.word	0x08007fe9
 80078d4:	08007cf1 	.word	0x08007cf1
 80078d8:	08007b8f 	.word	0x08007b8f
 80078dc:	08007a2f 	.word	0x08007a2f

080078e0 <UART_EndRxTransfer>:
 80078e0:	b480      	push	{r7}
 80078e2:	b095      	sub	sp, #84	; 0x54
 80078e4:	af00      	add	r7, sp, #0
 80078e6:	6078      	str	r0, [r7, #4]
 80078e8:	687b      	ldr	r3, [r7, #4]
 80078ea:	681b      	ldr	r3, [r3, #0]
 80078ec:	637b      	str	r3, [r7, #52]	; 0x34
 80078ee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80078f0:	e853 3f00 	ldrex	r3, [r3]
 80078f4:	633b      	str	r3, [r7, #48]	; 0x30
 80078f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80078f8:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80078fc:	64fb      	str	r3, [r7, #76]	; 0x4c
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	681b      	ldr	r3, [r3, #0]
 8007902:	461a      	mov	r2, r3
 8007904:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007906:	643b      	str	r3, [r7, #64]	; 0x40
 8007908:	63fa      	str	r2, [r7, #60]	; 0x3c
 800790a:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800790c:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800790e:	e841 2300 	strex	r3, r2, [r1]
 8007912:	63bb      	str	r3, [r7, #56]	; 0x38
 8007914:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007916:	2b00      	cmp	r3, #0
 8007918:	d1e6      	bne.n	80078e8 <UART_EndRxTransfer+0x8>
 800791a:	687b      	ldr	r3, [r7, #4]
 800791c:	681b      	ldr	r3, [r3, #0]
 800791e:	3308      	adds	r3, #8
 8007920:	623b      	str	r3, [r7, #32]
 8007922:	6a3b      	ldr	r3, [r7, #32]
 8007924:	e853 3f00 	ldrex	r3, [r3]
 8007928:	61fb      	str	r3, [r7, #28]
 800792a:	69fb      	ldr	r3, [r7, #28]
 800792c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007930:	f023 0301 	bic.w	r3, r3, #1
 8007934:	64bb      	str	r3, [r7, #72]	; 0x48
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	681b      	ldr	r3, [r3, #0]
 800793a:	3308      	adds	r3, #8
 800793c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800793e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007940:	62bb      	str	r3, [r7, #40]	; 0x28
 8007942:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007944:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007946:	e841 2300 	strex	r3, r2, [r1]
 800794a:	627b      	str	r3, [r7, #36]	; 0x24
 800794c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800794e:	2b00      	cmp	r3, #0
 8007950:	d1e3      	bne.n	800791a <UART_EndRxTransfer+0x3a>
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007956:	2b01      	cmp	r3, #1
 8007958:	d118      	bne.n	800798c <UART_EndRxTransfer+0xac>
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	60fb      	str	r3, [r7, #12]
 8007960:	68fb      	ldr	r3, [r7, #12]
 8007962:	e853 3f00 	ldrex	r3, [r3]
 8007966:	60bb      	str	r3, [r7, #8]
 8007968:	68bb      	ldr	r3, [r7, #8]
 800796a:	f023 0310 	bic.w	r3, r3, #16
 800796e:	647b      	str	r3, [r7, #68]	; 0x44
 8007970:	687b      	ldr	r3, [r7, #4]
 8007972:	681b      	ldr	r3, [r3, #0]
 8007974:	461a      	mov	r2, r3
 8007976:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007978:	61bb      	str	r3, [r7, #24]
 800797a:	617a      	str	r2, [r7, #20]
 800797c:	6979      	ldr	r1, [r7, #20]
 800797e:	69ba      	ldr	r2, [r7, #24]
 8007980:	e841 2300 	strex	r3, r2, [r1]
 8007984:	613b      	str	r3, [r7, #16]
 8007986:	693b      	ldr	r3, [r7, #16]
 8007988:	2b00      	cmp	r3, #0
 800798a:	d1e6      	bne.n	800795a <UART_EndRxTransfer+0x7a>
 800798c:	687b      	ldr	r3, [r7, #4]
 800798e:	2220      	movs	r2, #32
 8007990:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8007994:	687b      	ldr	r3, [r7, #4]
 8007996:	2200      	movs	r2, #0
 8007998:	66da      	str	r2, [r3, #108]	; 0x6c
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	2200      	movs	r2, #0
 800799e:	671a      	str	r2, [r3, #112]	; 0x70
 80079a0:	bf00      	nop
 80079a2:	3754      	adds	r7, #84	; 0x54
 80079a4:	46bd      	mov	sp, r7
 80079a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079aa:	4770      	bx	lr

080079ac <UART_DMAAbortOnError>:
 80079ac:	b580      	push	{r7, lr}
 80079ae:	b084      	sub	sp, #16
 80079b0:	af00      	add	r7, sp, #0
 80079b2:	6078      	str	r0, [r7, #4]
 80079b4:	687b      	ldr	r3, [r7, #4]
 80079b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80079b8:	60fb      	str	r3, [r7, #12]
 80079ba:	68fb      	ldr	r3, [r7, #12]
 80079bc:	2200      	movs	r2, #0
 80079be:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80079c2:	68fb      	ldr	r3, [r7, #12]
 80079c4:	2200      	movs	r2, #0
 80079c6:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 80079ca:	68f8      	ldr	r0, [r7, #12]
 80079cc:	f7ff f996 	bl	8006cfc <HAL_UART_ErrorCallback>
 80079d0:	bf00      	nop
 80079d2:	3710      	adds	r7, #16
 80079d4:	46bd      	mov	sp, r7
 80079d6:	bd80      	pop	{r7, pc}

080079d8 <UART_EndTransmit_IT>:
 80079d8:	b580      	push	{r7, lr}
 80079da:	b088      	sub	sp, #32
 80079dc:	af00      	add	r7, sp, #0
 80079de:	6078      	str	r0, [r7, #4]
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	681b      	ldr	r3, [r3, #0]
 80079e4:	60fb      	str	r3, [r7, #12]
 80079e6:	68fb      	ldr	r3, [r7, #12]
 80079e8:	e853 3f00 	ldrex	r3, [r3]
 80079ec:	60bb      	str	r3, [r7, #8]
 80079ee:	68bb      	ldr	r3, [r7, #8]
 80079f0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80079f4:	61fb      	str	r3, [r7, #28]
 80079f6:	687b      	ldr	r3, [r7, #4]
 80079f8:	681b      	ldr	r3, [r3, #0]
 80079fa:	461a      	mov	r2, r3
 80079fc:	69fb      	ldr	r3, [r7, #28]
 80079fe:	61bb      	str	r3, [r7, #24]
 8007a00:	617a      	str	r2, [r7, #20]
 8007a02:	6979      	ldr	r1, [r7, #20]
 8007a04:	69ba      	ldr	r2, [r7, #24]
 8007a06:	e841 2300 	strex	r3, r2, [r1]
 8007a0a:	613b      	str	r3, [r7, #16]
 8007a0c:	693b      	ldr	r3, [r7, #16]
 8007a0e:	2b00      	cmp	r3, #0
 8007a10:	d1e6      	bne.n	80079e0 <UART_EndTransmit_IT+0x8>
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	2220      	movs	r2, #32
 8007a16:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	2200      	movs	r2, #0
 8007a1e:	675a      	str	r2, [r3, #116]	; 0x74
 8007a20:	6878      	ldr	r0, [r7, #4]
 8007a22:	f7ff f961 	bl	8006ce8 <HAL_UART_TxCpltCallback>
 8007a26:	bf00      	nop
 8007a28:	3720      	adds	r7, #32
 8007a2a:	46bd      	mov	sp, r7
 8007a2c:	bd80      	pop	{r7, pc}

08007a2e <UART_RxISR_8BIT>:
 8007a2e:	b580      	push	{r7, lr}
 8007a30:	b096      	sub	sp, #88	; 0x58
 8007a32:	af00      	add	r7, sp, #0
 8007a34:	6078      	str	r0, [r7, #4]
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8007a3c:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8007a40:	687b      	ldr	r3, [r7, #4]
 8007a42:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007a46:	2b22      	cmp	r3, #34	; 0x22
 8007a48:	f040 8095 	bne.w	8007b76 <UART_RxISR_8BIT+0x148>
 8007a4c:	687b      	ldr	r3, [r7, #4]
 8007a4e:	681b      	ldr	r3, [r3, #0]
 8007a50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007a52:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8007a56:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 8007a5a:	b2d9      	uxtb	r1, r3
 8007a5c:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 8007a60:	b2da      	uxtb	r2, r3
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a66:	400a      	ands	r2, r1
 8007a68:	b2d2      	uxtb	r2, r2
 8007a6a:	701a      	strb	r2, [r3, #0]
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a70:	1c5a      	adds	r2, r3, #1
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	659a      	str	r2, [r3, #88]	; 0x58
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8007a7c:	b29b      	uxth	r3, r3
 8007a7e:	3b01      	subs	r3, #1
 8007a80:	b29a      	uxth	r2, r3
 8007a82:	687b      	ldr	r3, [r7, #4]
 8007a84:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8007a8e:	b29b      	uxth	r3, r3
 8007a90:	2b00      	cmp	r3, #0
 8007a92:	d178      	bne.n	8007b86 <UART_RxISR_8BIT+0x158>
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	681b      	ldr	r3, [r3, #0]
 8007a98:	63bb      	str	r3, [r7, #56]	; 0x38
 8007a9a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007a9c:	e853 3f00 	ldrex	r3, [r3]
 8007aa0:	637b      	str	r3, [r7, #52]	; 0x34
 8007aa2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007aa4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8007aa8:	653b      	str	r3, [r7, #80]	; 0x50
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	681b      	ldr	r3, [r3, #0]
 8007aae:	461a      	mov	r2, r3
 8007ab0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007ab2:	647b      	str	r3, [r7, #68]	; 0x44
 8007ab4:	643a      	str	r2, [r7, #64]	; 0x40
 8007ab6:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8007ab8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8007aba:	e841 2300 	strex	r3, r2, [r1]
 8007abe:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007ac0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007ac2:	2b00      	cmp	r3, #0
 8007ac4:	d1e6      	bne.n	8007a94 <UART_RxISR_8BIT+0x66>
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	681b      	ldr	r3, [r3, #0]
 8007aca:	3308      	adds	r3, #8
 8007acc:	627b      	str	r3, [r7, #36]	; 0x24
 8007ace:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ad0:	e853 3f00 	ldrex	r3, [r3]
 8007ad4:	623b      	str	r3, [r7, #32]
 8007ad6:	6a3b      	ldr	r3, [r7, #32]
 8007ad8:	f023 0301 	bic.w	r3, r3, #1
 8007adc:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007ade:	687b      	ldr	r3, [r7, #4]
 8007ae0:	681b      	ldr	r3, [r3, #0]
 8007ae2:	3308      	adds	r3, #8
 8007ae4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8007ae6:	633a      	str	r2, [r7, #48]	; 0x30
 8007ae8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007aea:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8007aec:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8007aee:	e841 2300 	strex	r3, r2, [r1]
 8007af2:	62bb      	str	r3, [r7, #40]	; 0x28
 8007af4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d1e5      	bne.n	8007ac6 <UART_RxISR_8BIT+0x98>
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	2220      	movs	r2, #32
 8007afe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	2200      	movs	r2, #0
 8007b06:	671a      	str	r2, [r3, #112]	; 0x70
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007b0c:	2b01      	cmp	r3, #1
 8007b0e:	d12e      	bne.n	8007b6e <UART_RxISR_8BIT+0x140>
 8007b10:	687b      	ldr	r3, [r7, #4]
 8007b12:	2200      	movs	r2, #0
 8007b14:	66da      	str	r2, [r3, #108]	; 0x6c
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	681b      	ldr	r3, [r3, #0]
 8007b1a:	613b      	str	r3, [r7, #16]
 8007b1c:	693b      	ldr	r3, [r7, #16]
 8007b1e:	e853 3f00 	ldrex	r3, [r3]
 8007b22:	60fb      	str	r3, [r7, #12]
 8007b24:	68fb      	ldr	r3, [r7, #12]
 8007b26:	f023 0310 	bic.w	r3, r3, #16
 8007b2a:	64bb      	str	r3, [r7, #72]	; 0x48
 8007b2c:	687b      	ldr	r3, [r7, #4]
 8007b2e:	681b      	ldr	r3, [r3, #0]
 8007b30:	461a      	mov	r2, r3
 8007b32:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007b34:	61fb      	str	r3, [r7, #28]
 8007b36:	61ba      	str	r2, [r7, #24]
 8007b38:	69b9      	ldr	r1, [r7, #24]
 8007b3a:	69fa      	ldr	r2, [r7, #28]
 8007b3c:	e841 2300 	strex	r3, r2, [r1]
 8007b40:	617b      	str	r3, [r7, #20]
 8007b42:	697b      	ldr	r3, [r7, #20]
 8007b44:	2b00      	cmp	r3, #0
 8007b46:	d1e6      	bne.n	8007b16 <UART_RxISR_8BIT+0xe8>
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	681b      	ldr	r3, [r3, #0]
 8007b4c:	69db      	ldr	r3, [r3, #28]
 8007b4e:	f003 0310 	and.w	r3, r3, #16
 8007b52:	2b10      	cmp	r3, #16
 8007b54:	d103      	bne.n	8007b5e <UART_RxISR_8BIT+0x130>
 8007b56:	687b      	ldr	r3, [r7, #4]
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	2210      	movs	r2, #16
 8007b5c:	621a      	str	r2, [r3, #32]
 8007b5e:	687b      	ldr	r3, [r7, #4]
 8007b60:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8007b64:	4619      	mov	r1, r3
 8007b66:	6878      	ldr	r0, [r7, #4]
 8007b68:	f7ff f8d2 	bl	8006d10 <HAL_UARTEx_RxEventCallback>
 8007b6c:	e00b      	b.n	8007b86 <UART_RxISR_8BIT+0x158>
 8007b6e:	6878      	ldr	r0, [r7, #4]
 8007b70:	f7f9 fd32 	bl	80015d8 <HAL_UART_RxCpltCallback>
 8007b74:	e007      	b.n	8007b86 <UART_RxISR_8BIT+0x158>
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	699a      	ldr	r2, [r3, #24]
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	f042 0208 	orr.w	r2, r2, #8
 8007b84:	619a      	str	r2, [r3, #24]
 8007b86:	bf00      	nop
 8007b88:	3758      	adds	r7, #88	; 0x58
 8007b8a:	46bd      	mov	sp, r7
 8007b8c:	bd80      	pop	{r7, pc}

08007b8e <UART_RxISR_16BIT>:
 8007b8e:	b580      	push	{r7, lr}
 8007b90:	b096      	sub	sp, #88	; 0x58
 8007b92:	af00      	add	r7, sp, #0
 8007b94:	6078      	str	r0, [r7, #4]
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8007b9c:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007ba6:	2b22      	cmp	r3, #34	; 0x22
 8007ba8:	f040 8095 	bne.w	8007cd6 <UART_RxISR_16BIT+0x148>
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	681b      	ldr	r3, [r3, #0]
 8007bb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007bb2:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007bba:	653b      	str	r3, [r7, #80]	; 0x50
 8007bbc:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 8007bc0:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 8007bc4:	4013      	ands	r3, r2
 8007bc6:	b29a      	uxth	r2, r3
 8007bc8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007bca:	801a      	strh	r2, [r3, #0]
 8007bcc:	687b      	ldr	r3, [r7, #4]
 8007bce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007bd0:	1c9a      	adds	r2, r3, #2
 8007bd2:	687b      	ldr	r3, [r7, #4]
 8007bd4:	659a      	str	r2, [r3, #88]	; 0x58
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8007bdc:	b29b      	uxth	r3, r3
 8007bde:	3b01      	subs	r3, #1
 8007be0:	b29a      	uxth	r2, r3
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8007bee:	b29b      	uxth	r3, r3
 8007bf0:	2b00      	cmp	r3, #0
 8007bf2:	d178      	bne.n	8007ce6 <UART_RxISR_16BIT+0x158>
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	681b      	ldr	r3, [r3, #0]
 8007bf8:	637b      	str	r3, [r7, #52]	; 0x34
 8007bfa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007bfc:	e853 3f00 	ldrex	r3, [r3]
 8007c00:	633b      	str	r3, [r7, #48]	; 0x30
 8007c02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007c04:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8007c08:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007c0a:	687b      	ldr	r3, [r7, #4]
 8007c0c:	681b      	ldr	r3, [r3, #0]
 8007c0e:	461a      	mov	r2, r3
 8007c10:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007c12:	643b      	str	r3, [r7, #64]	; 0x40
 8007c14:	63fa      	str	r2, [r7, #60]	; 0x3c
 8007c16:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8007c18:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8007c1a:	e841 2300 	strex	r3, r2, [r1]
 8007c1e:	63bb      	str	r3, [r7, #56]	; 0x38
 8007c20:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007c22:	2b00      	cmp	r3, #0
 8007c24:	d1e6      	bne.n	8007bf4 <UART_RxISR_16BIT+0x66>
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	3308      	adds	r3, #8
 8007c2c:	623b      	str	r3, [r7, #32]
 8007c2e:	6a3b      	ldr	r3, [r7, #32]
 8007c30:	e853 3f00 	ldrex	r3, [r3]
 8007c34:	61fb      	str	r3, [r7, #28]
 8007c36:	69fb      	ldr	r3, [r7, #28]
 8007c38:	f023 0301 	bic.w	r3, r3, #1
 8007c3c:	64bb      	str	r3, [r7, #72]	; 0x48
 8007c3e:	687b      	ldr	r3, [r7, #4]
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	3308      	adds	r3, #8
 8007c44:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8007c46:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007c48:	62bb      	str	r3, [r7, #40]	; 0x28
 8007c4a:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007c4c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007c4e:	e841 2300 	strex	r3, r2, [r1]
 8007c52:	627b      	str	r3, [r7, #36]	; 0x24
 8007c54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007c56:	2b00      	cmp	r3, #0
 8007c58:	d1e5      	bne.n	8007c26 <UART_RxISR_16BIT+0x98>
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	2220      	movs	r2, #32
 8007c5e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8007c62:	687b      	ldr	r3, [r7, #4]
 8007c64:	2200      	movs	r2, #0
 8007c66:	671a      	str	r2, [r3, #112]	; 0x70
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007c6c:	2b01      	cmp	r3, #1
 8007c6e:	d12e      	bne.n	8007cce <UART_RxISR_16BIT+0x140>
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	2200      	movs	r2, #0
 8007c74:	66da      	str	r2, [r3, #108]	; 0x6c
 8007c76:	687b      	ldr	r3, [r7, #4]
 8007c78:	681b      	ldr	r3, [r3, #0]
 8007c7a:	60fb      	str	r3, [r7, #12]
 8007c7c:	68fb      	ldr	r3, [r7, #12]
 8007c7e:	e853 3f00 	ldrex	r3, [r3]
 8007c82:	60bb      	str	r3, [r7, #8]
 8007c84:	68bb      	ldr	r3, [r7, #8]
 8007c86:	f023 0310 	bic.w	r3, r3, #16
 8007c8a:	647b      	str	r3, [r7, #68]	; 0x44
 8007c8c:	687b      	ldr	r3, [r7, #4]
 8007c8e:	681b      	ldr	r3, [r3, #0]
 8007c90:	461a      	mov	r2, r3
 8007c92:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007c94:	61bb      	str	r3, [r7, #24]
 8007c96:	617a      	str	r2, [r7, #20]
 8007c98:	6979      	ldr	r1, [r7, #20]
 8007c9a:	69ba      	ldr	r2, [r7, #24]
 8007c9c:	e841 2300 	strex	r3, r2, [r1]
 8007ca0:	613b      	str	r3, [r7, #16]
 8007ca2:	693b      	ldr	r3, [r7, #16]
 8007ca4:	2b00      	cmp	r3, #0
 8007ca6:	d1e6      	bne.n	8007c76 <UART_RxISR_16BIT+0xe8>
 8007ca8:	687b      	ldr	r3, [r7, #4]
 8007caa:	681b      	ldr	r3, [r3, #0]
 8007cac:	69db      	ldr	r3, [r3, #28]
 8007cae:	f003 0310 	and.w	r3, r3, #16
 8007cb2:	2b10      	cmp	r3, #16
 8007cb4:	d103      	bne.n	8007cbe <UART_RxISR_16BIT+0x130>
 8007cb6:	687b      	ldr	r3, [r7, #4]
 8007cb8:	681b      	ldr	r3, [r3, #0]
 8007cba:	2210      	movs	r2, #16
 8007cbc:	621a      	str	r2, [r3, #32]
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8007cc4:	4619      	mov	r1, r3
 8007cc6:	6878      	ldr	r0, [r7, #4]
 8007cc8:	f7ff f822 	bl	8006d10 <HAL_UARTEx_RxEventCallback>
 8007ccc:	e00b      	b.n	8007ce6 <UART_RxISR_16BIT+0x158>
 8007cce:	6878      	ldr	r0, [r7, #4]
 8007cd0:	f7f9 fc82 	bl	80015d8 <HAL_UART_RxCpltCallback>
 8007cd4:	e007      	b.n	8007ce6 <UART_RxISR_16BIT+0x158>
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	699a      	ldr	r2, [r3, #24]
 8007cdc:	687b      	ldr	r3, [r7, #4]
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	f042 0208 	orr.w	r2, r2, #8
 8007ce4:	619a      	str	r2, [r3, #24]
 8007ce6:	bf00      	nop
 8007ce8:	3758      	adds	r7, #88	; 0x58
 8007cea:	46bd      	mov	sp, r7
 8007cec:	bd80      	pop	{r7, pc}
	...

08007cf0 <UART_RxISR_8BIT_FIFOEN>:
 8007cf0:	b580      	push	{r7, lr}
 8007cf2:	b0a6      	sub	sp, #152	; 0x98
 8007cf4:	af00      	add	r7, sp, #0
 8007cf6:	6078      	str	r0, [r7, #4]
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8007cfe:	f8a7 3092 	strh.w	r3, [r7, #146]	; 0x92
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	69db      	ldr	r3, [r3, #28]
 8007d08:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	681b      	ldr	r3, [r3, #0]
 8007d10:	681b      	ldr	r3, [r3, #0]
 8007d12:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	689b      	ldr	r3, [r3, #8]
 8007d1c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8007d20:	687b      	ldr	r3, [r7, #4]
 8007d22:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007d26:	2b22      	cmp	r3, #34	; 0x22
 8007d28:	f040 814f 	bne.w	8007fca <UART_RxISR_8BIT_FIFOEN+0x2da>
 8007d2c:	687b      	ldr	r3, [r7, #4]
 8007d2e:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8007d32:	f8a7 3086 	strh.w	r3, [r7, #134]	; 0x86
 8007d36:	e0f6      	b.n	8007f26 <UART_RxISR_8BIT_FIFOEN+0x236>
 8007d38:	687b      	ldr	r3, [r7, #4]
 8007d3a:	681b      	ldr	r3, [r3, #0]
 8007d3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007d3e:	f8a7 3084 	strh.w	r3, [r7, #132]	; 0x84
 8007d42:	f8b7 3084 	ldrh.w	r3, [r7, #132]	; 0x84
 8007d46:	b2d9      	uxtb	r1, r3
 8007d48:	f8b7 3092 	ldrh.w	r3, [r7, #146]	; 0x92
 8007d4c:	b2da      	uxtb	r2, r3
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007d52:	400a      	ands	r2, r1
 8007d54:	b2d2      	uxtb	r2, r2
 8007d56:	701a      	strb	r2, [r3, #0]
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007d5c:	1c5a      	adds	r2, r3, #1
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	659a      	str	r2, [r3, #88]	; 0x58
 8007d62:	687b      	ldr	r3, [r7, #4]
 8007d64:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8007d68:	b29b      	uxth	r3, r3
 8007d6a:	3b01      	subs	r3, #1
 8007d6c:	b29a      	uxth	r2, r3
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	681b      	ldr	r3, [r3, #0]
 8007d78:	69db      	ldr	r3, [r3, #28]
 8007d7a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8007d7e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8007d82:	f003 0307 	and.w	r3, r3, #7
 8007d86:	2b00      	cmp	r3, #0
 8007d88:	d053      	beq.n	8007e32 <UART_RxISR_8BIT_FIFOEN+0x142>
 8007d8a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8007d8e:	f003 0301 	and.w	r3, r3, #1
 8007d92:	2b00      	cmp	r3, #0
 8007d94:	d011      	beq.n	8007dba <UART_RxISR_8BIT_FIFOEN+0xca>
 8007d96:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8007d9a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007d9e:	2b00      	cmp	r3, #0
 8007da0:	d00b      	beq.n	8007dba <UART_RxISR_8BIT_FIFOEN+0xca>
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	681b      	ldr	r3, [r3, #0]
 8007da6:	2201      	movs	r2, #1
 8007da8:	621a      	str	r2, [r3, #32]
 8007daa:	687b      	ldr	r3, [r7, #4]
 8007dac:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007db0:	f043 0201 	orr.w	r2, r3, #1
 8007db4:	687b      	ldr	r3, [r7, #4]
 8007db6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8007dba:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8007dbe:	f003 0302 	and.w	r3, r3, #2
 8007dc2:	2b00      	cmp	r3, #0
 8007dc4:	d011      	beq.n	8007dea <UART_RxISR_8BIT_FIFOEN+0xfa>
 8007dc6:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8007dca:	f003 0301 	and.w	r3, r3, #1
 8007dce:	2b00      	cmp	r3, #0
 8007dd0:	d00b      	beq.n	8007dea <UART_RxISR_8BIT_FIFOEN+0xfa>
 8007dd2:	687b      	ldr	r3, [r7, #4]
 8007dd4:	681b      	ldr	r3, [r3, #0]
 8007dd6:	2202      	movs	r2, #2
 8007dd8:	621a      	str	r2, [r3, #32]
 8007dda:	687b      	ldr	r3, [r7, #4]
 8007ddc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007de0:	f043 0204 	orr.w	r2, r3, #4
 8007de4:	687b      	ldr	r3, [r7, #4]
 8007de6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8007dea:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8007dee:	f003 0304 	and.w	r3, r3, #4
 8007df2:	2b00      	cmp	r3, #0
 8007df4:	d011      	beq.n	8007e1a <UART_RxISR_8BIT_FIFOEN+0x12a>
 8007df6:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8007dfa:	f003 0301 	and.w	r3, r3, #1
 8007dfe:	2b00      	cmp	r3, #0
 8007e00:	d00b      	beq.n	8007e1a <UART_RxISR_8BIT_FIFOEN+0x12a>
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	681b      	ldr	r3, [r3, #0]
 8007e06:	2204      	movs	r2, #4
 8007e08:	621a      	str	r2, [r3, #32]
 8007e0a:	687b      	ldr	r3, [r7, #4]
 8007e0c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007e10:	f043 0202 	orr.w	r2, r3, #2
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007e20:	2b00      	cmp	r3, #0
 8007e22:	d006      	beq.n	8007e32 <UART_RxISR_8BIT_FIFOEN+0x142>
 8007e24:	6878      	ldr	r0, [r7, #4]
 8007e26:	f7fe ff69 	bl	8006cfc <HAL_UART_ErrorCallback>
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	2200      	movs	r2, #0
 8007e2e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8007e32:	687b      	ldr	r3, [r7, #4]
 8007e34:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8007e38:	b29b      	uxth	r3, r3
 8007e3a:	2b00      	cmp	r3, #0
 8007e3c:	d173      	bne.n	8007f26 <UART_RxISR_8BIT_FIFOEN+0x236>
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	681b      	ldr	r3, [r3, #0]
 8007e42:	65fb      	str	r3, [r7, #92]	; 0x5c
 8007e44:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8007e46:	e853 3f00 	ldrex	r3, [r3]
 8007e4a:	65bb      	str	r3, [r7, #88]	; 0x58
 8007e4c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8007e4e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007e52:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	681b      	ldr	r3, [r3, #0]
 8007e5a:	461a      	mov	r2, r3
 8007e5c:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8007e60:	66bb      	str	r3, [r7, #104]	; 0x68
 8007e62:	667a      	str	r2, [r7, #100]	; 0x64
 8007e64:	6e79      	ldr	r1, [r7, #100]	; 0x64
 8007e66:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8007e68:	e841 2300 	strex	r3, r2, [r1]
 8007e6c:	663b      	str	r3, [r7, #96]	; 0x60
 8007e6e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	d1e4      	bne.n	8007e3e <UART_RxISR_8BIT_FIFOEN+0x14e>
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	681b      	ldr	r3, [r3, #0]
 8007e78:	3308      	adds	r3, #8
 8007e7a:	64bb      	str	r3, [r7, #72]	; 0x48
 8007e7c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007e7e:	e853 3f00 	ldrex	r3, [r3]
 8007e82:	647b      	str	r3, [r7, #68]	; 0x44
 8007e84:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8007e86:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007e8a:	f023 0301 	bic.w	r3, r3, #1
 8007e8e:	67fb      	str	r3, [r7, #124]	; 0x7c
 8007e90:	687b      	ldr	r3, [r7, #4]
 8007e92:	681b      	ldr	r3, [r3, #0]
 8007e94:	3308      	adds	r3, #8
 8007e96:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8007e98:	657a      	str	r2, [r7, #84]	; 0x54
 8007e9a:	653b      	str	r3, [r7, #80]	; 0x50
 8007e9c:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8007e9e:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8007ea0:	e841 2300 	strex	r3, r2, [r1]
 8007ea4:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007ea6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8007ea8:	2b00      	cmp	r3, #0
 8007eaa:	d1e3      	bne.n	8007e74 <UART_RxISR_8BIT_FIFOEN+0x184>
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	2220      	movs	r2, #32
 8007eb0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	2200      	movs	r2, #0
 8007eb8:	671a      	str	r2, [r3, #112]	; 0x70
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007ebe:	2b01      	cmp	r3, #1
 8007ec0:	d12e      	bne.n	8007f20 <UART_RxISR_8BIT_FIFOEN+0x230>
 8007ec2:	687b      	ldr	r3, [r7, #4]
 8007ec4:	2200      	movs	r2, #0
 8007ec6:	66da      	str	r2, [r3, #108]	; 0x6c
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	637b      	str	r3, [r7, #52]	; 0x34
 8007ece:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007ed0:	e853 3f00 	ldrex	r3, [r3]
 8007ed4:	633b      	str	r3, [r7, #48]	; 0x30
 8007ed6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007ed8:	f023 0310 	bic.w	r3, r3, #16
 8007edc:	67bb      	str	r3, [r7, #120]	; 0x78
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	681b      	ldr	r3, [r3, #0]
 8007ee2:	461a      	mov	r2, r3
 8007ee4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8007ee6:	643b      	str	r3, [r7, #64]	; 0x40
 8007ee8:	63fa      	str	r2, [r7, #60]	; 0x3c
 8007eea:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8007eec:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8007eee:	e841 2300 	strex	r3, r2, [r1]
 8007ef2:	63bb      	str	r3, [r7, #56]	; 0x38
 8007ef4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007ef6:	2b00      	cmp	r3, #0
 8007ef8:	d1e6      	bne.n	8007ec8 <UART_RxISR_8BIT_FIFOEN+0x1d8>
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	69db      	ldr	r3, [r3, #28]
 8007f00:	f003 0310 	and.w	r3, r3, #16
 8007f04:	2b10      	cmp	r3, #16
 8007f06:	d103      	bne.n	8007f10 <UART_RxISR_8BIT_FIFOEN+0x220>
 8007f08:	687b      	ldr	r3, [r7, #4]
 8007f0a:	681b      	ldr	r3, [r3, #0]
 8007f0c:	2210      	movs	r2, #16
 8007f0e:	621a      	str	r2, [r3, #32]
 8007f10:	687b      	ldr	r3, [r7, #4]
 8007f12:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8007f16:	4619      	mov	r1, r3
 8007f18:	6878      	ldr	r0, [r7, #4]
 8007f1a:	f7fe fef9 	bl	8006d10 <HAL_UARTEx_RxEventCallback>
 8007f1e:	e002      	b.n	8007f26 <UART_RxISR_8BIT_FIFOEN+0x236>
 8007f20:	6878      	ldr	r0, [r7, #4]
 8007f22:	f7f9 fb59 	bl	80015d8 <HAL_UART_RxCpltCallback>
 8007f26:	f8b7 3086 	ldrh.w	r3, [r7, #134]	; 0x86
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	d006      	beq.n	8007f3c <UART_RxISR_8BIT_FIFOEN+0x24c>
 8007f2e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8007f32:	f003 0320 	and.w	r3, r3, #32
 8007f36:	2b00      	cmp	r3, #0
 8007f38:	f47f aefe 	bne.w	8007d38 <UART_RxISR_8BIT_FIFOEN+0x48>
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8007f42:	f8a7 3076 	strh.w	r3, [r7, #118]	; 0x76
 8007f46:	f8b7 3076 	ldrh.w	r3, [r7, #118]	; 0x76
 8007f4a:	2b00      	cmp	r3, #0
 8007f4c:	d045      	beq.n	8007fda <UART_RxISR_8BIT_FIFOEN+0x2ea>
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8007f54:	f8b7 2076 	ldrh.w	r2, [r7, #118]	; 0x76
 8007f58:	429a      	cmp	r2, r3
 8007f5a:	d23e      	bcs.n	8007fda <UART_RxISR_8BIT_FIFOEN+0x2ea>
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	681b      	ldr	r3, [r3, #0]
 8007f60:	3308      	adds	r3, #8
 8007f62:	623b      	str	r3, [r7, #32]
 8007f64:	6a3b      	ldr	r3, [r7, #32]
 8007f66:	e853 3f00 	ldrex	r3, [r3]
 8007f6a:	61fb      	str	r3, [r7, #28]
 8007f6c:	69fb      	ldr	r3, [r7, #28]
 8007f6e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007f72:	673b      	str	r3, [r7, #112]	; 0x70
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	3308      	adds	r3, #8
 8007f7a:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8007f7c:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007f7e:	62bb      	str	r3, [r7, #40]	; 0x28
 8007f80:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007f82:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007f84:	e841 2300 	strex	r3, r2, [r1]
 8007f88:	627b      	str	r3, [r7, #36]	; 0x24
 8007f8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f8c:	2b00      	cmp	r3, #0
 8007f8e:	d1e5      	bne.n	8007f5c <UART_RxISR_8BIT_FIFOEN+0x26c>
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	4a14      	ldr	r2, [pc, #80]	; (8007fe4 <UART_RxISR_8BIT_FIFOEN+0x2f4>)
 8007f94:	671a      	str	r2, [r3, #112]	; 0x70
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	681b      	ldr	r3, [r3, #0]
 8007f9a:	60fb      	str	r3, [r7, #12]
 8007f9c:	68fb      	ldr	r3, [r7, #12]
 8007f9e:	e853 3f00 	ldrex	r3, [r3]
 8007fa2:	60bb      	str	r3, [r7, #8]
 8007fa4:	68bb      	ldr	r3, [r7, #8]
 8007fa6:	f043 0320 	orr.w	r3, r3, #32
 8007faa:	66fb      	str	r3, [r7, #108]	; 0x6c
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	461a      	mov	r2, r3
 8007fb2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8007fb4:	61bb      	str	r3, [r7, #24]
 8007fb6:	617a      	str	r2, [r7, #20]
 8007fb8:	6979      	ldr	r1, [r7, #20]
 8007fba:	69ba      	ldr	r2, [r7, #24]
 8007fbc:	e841 2300 	strex	r3, r2, [r1]
 8007fc0:	613b      	str	r3, [r7, #16]
 8007fc2:	693b      	ldr	r3, [r7, #16]
 8007fc4:	2b00      	cmp	r3, #0
 8007fc6:	d1e6      	bne.n	8007f96 <UART_RxISR_8BIT_FIFOEN+0x2a6>
 8007fc8:	e007      	b.n	8007fda <UART_RxISR_8BIT_FIFOEN+0x2ea>
 8007fca:	687b      	ldr	r3, [r7, #4]
 8007fcc:	681b      	ldr	r3, [r3, #0]
 8007fce:	699a      	ldr	r2, [r3, #24]
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	681b      	ldr	r3, [r3, #0]
 8007fd4:	f042 0208 	orr.w	r2, r2, #8
 8007fd8:	619a      	str	r2, [r3, #24]
 8007fda:	bf00      	nop
 8007fdc:	3798      	adds	r7, #152	; 0x98
 8007fde:	46bd      	mov	sp, r7
 8007fe0:	bd80      	pop	{r7, pc}
 8007fe2:	bf00      	nop
 8007fe4:	08007a2f 	.word	0x08007a2f

08007fe8 <UART_RxISR_16BIT_FIFOEN>:
 8007fe8:	b580      	push	{r7, lr}
 8007fea:	b0a8      	sub	sp, #160	; 0xa0
 8007fec:	af00      	add	r7, sp, #0
 8007fee:	6078      	str	r0, [r7, #4]
 8007ff0:	687b      	ldr	r3, [r7, #4]
 8007ff2:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 8007ff6:	f8a7 309a 	strh.w	r3, [r7, #154]	; 0x9a
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	681b      	ldr	r3, [r3, #0]
 8007ffe:	69db      	ldr	r3, [r3, #28]
 8008000:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	681b      	ldr	r3, [r3, #0]
 8008008:	681b      	ldr	r3, [r3, #0]
 800800a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	681b      	ldr	r3, [r3, #0]
 8008012:	689b      	ldr	r3, [r3, #8]
 8008014:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8008018:	687b      	ldr	r3, [r7, #4]
 800801a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800801e:	2b22      	cmp	r3, #34	; 0x22
 8008020:	f040 8153 	bne.w	80082ca <UART_RxISR_16BIT_FIFOEN+0x2e2>
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800802a:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
 800802e:	e0fa      	b.n	8008226 <UART_RxISR_16BIT_FIFOEN+0x23e>
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	681b      	ldr	r3, [r3, #0]
 8008034:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008036:	f8a7 308c 	strh.w	r3, [r7, #140]	; 0x8c
 800803a:	687b      	ldr	r3, [r7, #4]
 800803c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800803e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8008042:	f8b7 208c 	ldrh.w	r2, [r7, #140]	; 0x8c
 8008046:	f8b7 309a 	ldrh.w	r3, [r7, #154]	; 0x9a
 800804a:	4013      	ands	r3, r2
 800804c:	b29a      	uxth	r2, r3
 800804e:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8008052:	801a      	strh	r2, [r3, #0]
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008058:	1c9a      	adds	r2, r3, #2
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	659a      	str	r2, [r3, #88]	; 0x58
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8008064:	b29b      	uxth	r3, r3
 8008066:	3b01      	subs	r3, #1
 8008068:	b29a      	uxth	r2, r3
 800806a:	687b      	ldr	r3, [r7, #4]
 800806c:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	681b      	ldr	r3, [r3, #0]
 8008074:	69db      	ldr	r3, [r3, #28]
 8008076:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800807a:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800807e:	f003 0307 	and.w	r3, r3, #7
 8008082:	2b00      	cmp	r3, #0
 8008084:	d053      	beq.n	800812e <UART_RxISR_16BIT_FIFOEN+0x146>
 8008086:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800808a:	f003 0301 	and.w	r3, r3, #1
 800808e:	2b00      	cmp	r3, #0
 8008090:	d011      	beq.n	80080b6 <UART_RxISR_16BIT_FIFOEN+0xce>
 8008092:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8008096:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800809a:	2b00      	cmp	r3, #0
 800809c:	d00b      	beq.n	80080b6 <UART_RxISR_16BIT_FIFOEN+0xce>
 800809e:	687b      	ldr	r3, [r7, #4]
 80080a0:	681b      	ldr	r3, [r3, #0]
 80080a2:	2201      	movs	r2, #1
 80080a4:	621a      	str	r2, [r3, #32]
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80080ac:	f043 0201 	orr.w	r2, r3, #1
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80080b6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80080ba:	f003 0302 	and.w	r3, r3, #2
 80080be:	2b00      	cmp	r3, #0
 80080c0:	d011      	beq.n	80080e6 <UART_RxISR_16BIT_FIFOEN+0xfe>
 80080c2:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80080c6:	f003 0301 	and.w	r3, r3, #1
 80080ca:	2b00      	cmp	r3, #0
 80080cc:	d00b      	beq.n	80080e6 <UART_RxISR_16BIT_FIFOEN+0xfe>
 80080ce:	687b      	ldr	r3, [r7, #4]
 80080d0:	681b      	ldr	r3, [r3, #0]
 80080d2:	2202      	movs	r2, #2
 80080d4:	621a      	str	r2, [r3, #32]
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80080dc:	f043 0204 	orr.w	r2, r3, #4
 80080e0:	687b      	ldr	r3, [r7, #4]
 80080e2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80080e6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80080ea:	f003 0304 	and.w	r3, r3, #4
 80080ee:	2b00      	cmp	r3, #0
 80080f0:	d011      	beq.n	8008116 <UART_RxISR_16BIT_FIFOEN+0x12e>
 80080f2:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80080f6:	f003 0301 	and.w	r3, r3, #1
 80080fa:	2b00      	cmp	r3, #0
 80080fc:	d00b      	beq.n	8008116 <UART_RxISR_16BIT_FIFOEN+0x12e>
 80080fe:	687b      	ldr	r3, [r7, #4]
 8008100:	681b      	ldr	r3, [r3, #0]
 8008102:	2204      	movs	r2, #4
 8008104:	621a      	str	r2, [r3, #32]
 8008106:	687b      	ldr	r3, [r7, #4]
 8008108:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800810c:	f043 0202 	orr.w	r2, r3, #2
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 8008116:	687b      	ldr	r3, [r7, #4]
 8008118:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800811c:	2b00      	cmp	r3, #0
 800811e:	d006      	beq.n	800812e <UART_RxISR_16BIT_FIFOEN+0x146>
 8008120:	6878      	ldr	r0, [r7, #4]
 8008122:	f7fe fdeb 	bl	8006cfc <HAL_UART_ErrorCallback>
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	2200      	movs	r2, #0
 800812a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8008134:	b29b      	uxth	r3, r3
 8008136:	2b00      	cmp	r3, #0
 8008138:	d175      	bne.n	8008226 <UART_RxISR_16BIT_FIFOEN+0x23e>
 800813a:	687b      	ldr	r3, [r7, #4]
 800813c:	681b      	ldr	r3, [r3, #0]
 800813e:	663b      	str	r3, [r7, #96]	; 0x60
 8008140:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8008142:	e853 3f00 	ldrex	r3, [r3]
 8008146:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008148:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800814a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800814e:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	681b      	ldr	r3, [r3, #0]
 8008156:	461a      	mov	r2, r3
 8008158:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800815c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800815e:	66ba      	str	r2, [r7, #104]	; 0x68
 8008160:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8008162:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8008164:	e841 2300 	strex	r3, r2, [r1]
 8008168:	667b      	str	r3, [r7, #100]	; 0x64
 800816a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800816c:	2b00      	cmp	r3, #0
 800816e:	d1e4      	bne.n	800813a <UART_RxISR_16BIT_FIFOEN+0x152>
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	3308      	adds	r3, #8
 8008176:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008178:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800817a:	e853 3f00 	ldrex	r3, [r3]
 800817e:	64bb      	str	r3, [r7, #72]	; 0x48
 8008180:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008182:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008186:	f023 0301 	bic.w	r3, r3, #1
 800818a:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800818e:	687b      	ldr	r3, [r7, #4]
 8008190:	681b      	ldr	r3, [r3, #0]
 8008192:	3308      	adds	r3, #8
 8008194:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8008198:	65ba      	str	r2, [r7, #88]	; 0x58
 800819a:	657b      	str	r3, [r7, #84]	; 0x54
 800819c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800819e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80081a0:	e841 2300 	strex	r3, r2, [r1]
 80081a4:	653b      	str	r3, [r7, #80]	; 0x50
 80081a6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80081a8:	2b00      	cmp	r3, #0
 80081aa:	d1e1      	bne.n	8008170 <UART_RxISR_16BIT_FIFOEN+0x188>
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	2220      	movs	r2, #32
 80081b0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	2200      	movs	r2, #0
 80081b8:	671a      	str	r2, [r3, #112]	; 0x70
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80081be:	2b01      	cmp	r3, #1
 80081c0:	d12e      	bne.n	8008220 <UART_RxISR_16BIT_FIFOEN+0x238>
 80081c2:	687b      	ldr	r3, [r7, #4]
 80081c4:	2200      	movs	r2, #0
 80081c6:	66da      	str	r2, [r3, #108]	; 0x6c
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	63bb      	str	r3, [r7, #56]	; 0x38
 80081ce:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80081d0:	e853 3f00 	ldrex	r3, [r3]
 80081d4:	637b      	str	r3, [r7, #52]	; 0x34
 80081d6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80081d8:	f023 0310 	bic.w	r3, r3, #16
 80081dc:	67fb      	str	r3, [r7, #124]	; 0x7c
 80081de:	687b      	ldr	r3, [r7, #4]
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	461a      	mov	r2, r3
 80081e4:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80081e6:	647b      	str	r3, [r7, #68]	; 0x44
 80081e8:	643a      	str	r2, [r7, #64]	; 0x40
 80081ea:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80081ec:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80081ee:	e841 2300 	strex	r3, r2, [r1]
 80081f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80081f4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80081f6:	2b00      	cmp	r3, #0
 80081f8:	d1e6      	bne.n	80081c8 <UART_RxISR_16BIT_FIFOEN+0x1e0>
 80081fa:	687b      	ldr	r3, [r7, #4]
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	69db      	ldr	r3, [r3, #28]
 8008200:	f003 0310 	and.w	r3, r3, #16
 8008204:	2b10      	cmp	r3, #16
 8008206:	d103      	bne.n	8008210 <UART_RxISR_16BIT_FIFOEN+0x228>
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	681b      	ldr	r3, [r3, #0]
 800820c:	2210      	movs	r2, #16
 800820e:	621a      	str	r2, [r3, #32]
 8008210:	687b      	ldr	r3, [r7, #4]
 8008212:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 8008216:	4619      	mov	r1, r3
 8008218:	6878      	ldr	r0, [r7, #4]
 800821a:	f7fe fd79 	bl	8006d10 <HAL_UARTEx_RxEventCallback>
 800821e:	e002      	b.n	8008226 <UART_RxISR_16BIT_FIFOEN+0x23e>
 8008220:	6878      	ldr	r0, [r7, #4]
 8008222:	f7f9 f9d9 	bl	80015d8 <HAL_UART_RxCpltCallback>
 8008226:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 800822a:	2b00      	cmp	r3, #0
 800822c:	d006      	beq.n	800823c <UART_RxISR_16BIT_FIFOEN+0x254>
 800822e:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8008232:	f003 0320 	and.w	r3, r3, #32
 8008236:	2b00      	cmp	r3, #0
 8008238:	f47f aefa 	bne.w	8008030 <UART_RxISR_16BIT_FIFOEN+0x48>
 800823c:	687b      	ldr	r3, [r7, #4]
 800823e:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8008242:	f8a7 307a 	strh.w	r3, [r7, #122]	; 0x7a
 8008246:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 800824a:	2b00      	cmp	r3, #0
 800824c:	d045      	beq.n	80082da <UART_RxISR_16BIT_FIFOEN+0x2f2>
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 8008254:	f8b7 207a 	ldrh.w	r2, [r7, #122]	; 0x7a
 8008258:	429a      	cmp	r2, r3
 800825a:	d23e      	bcs.n	80082da <UART_RxISR_16BIT_FIFOEN+0x2f2>
 800825c:	687b      	ldr	r3, [r7, #4]
 800825e:	681b      	ldr	r3, [r3, #0]
 8008260:	3308      	adds	r3, #8
 8008262:	627b      	str	r3, [r7, #36]	; 0x24
 8008264:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008266:	e853 3f00 	ldrex	r3, [r3]
 800826a:	623b      	str	r3, [r7, #32]
 800826c:	6a3b      	ldr	r3, [r7, #32]
 800826e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008272:	677b      	str	r3, [r7, #116]	; 0x74
 8008274:	687b      	ldr	r3, [r7, #4]
 8008276:	681b      	ldr	r3, [r3, #0]
 8008278:	3308      	adds	r3, #8
 800827a:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 800827c:	633a      	str	r2, [r7, #48]	; 0x30
 800827e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008280:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8008282:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8008284:	e841 2300 	strex	r3, r2, [r1]
 8008288:	62bb      	str	r3, [r7, #40]	; 0x28
 800828a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800828c:	2b00      	cmp	r3, #0
 800828e:	d1e5      	bne.n	800825c <UART_RxISR_16BIT_FIFOEN+0x274>
 8008290:	687b      	ldr	r3, [r7, #4]
 8008292:	4a14      	ldr	r2, [pc, #80]	; (80082e4 <UART_RxISR_16BIT_FIFOEN+0x2fc>)
 8008294:	671a      	str	r2, [r3, #112]	; 0x70
 8008296:	687b      	ldr	r3, [r7, #4]
 8008298:	681b      	ldr	r3, [r3, #0]
 800829a:	613b      	str	r3, [r7, #16]
 800829c:	693b      	ldr	r3, [r7, #16]
 800829e:	e853 3f00 	ldrex	r3, [r3]
 80082a2:	60fb      	str	r3, [r7, #12]
 80082a4:	68fb      	ldr	r3, [r7, #12]
 80082a6:	f043 0320 	orr.w	r3, r3, #32
 80082aa:	673b      	str	r3, [r7, #112]	; 0x70
 80082ac:	687b      	ldr	r3, [r7, #4]
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	461a      	mov	r2, r3
 80082b2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80082b4:	61fb      	str	r3, [r7, #28]
 80082b6:	61ba      	str	r2, [r7, #24]
 80082b8:	69b9      	ldr	r1, [r7, #24]
 80082ba:	69fa      	ldr	r2, [r7, #28]
 80082bc:	e841 2300 	strex	r3, r2, [r1]
 80082c0:	617b      	str	r3, [r7, #20]
 80082c2:	697b      	ldr	r3, [r7, #20]
 80082c4:	2b00      	cmp	r3, #0
 80082c6:	d1e6      	bne.n	8008296 <UART_RxISR_16BIT_FIFOEN+0x2ae>
 80082c8:	e007      	b.n	80082da <UART_RxISR_16BIT_FIFOEN+0x2f2>
 80082ca:	687b      	ldr	r3, [r7, #4]
 80082cc:	681b      	ldr	r3, [r3, #0]
 80082ce:	699a      	ldr	r2, [r3, #24]
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	681b      	ldr	r3, [r3, #0]
 80082d4:	f042 0208 	orr.w	r2, r2, #8
 80082d8:	619a      	str	r2, [r3, #24]
 80082da:	bf00      	nop
 80082dc:	37a0      	adds	r7, #160	; 0xa0
 80082de:	46bd      	mov	sp, r7
 80082e0:	bd80      	pop	{r7, pc}
 80082e2:	bf00      	nop
 80082e4:	08007b8f 	.word	0x08007b8f

080082e8 <HAL_UARTEx_WakeupCallback>:
 80082e8:	b480      	push	{r7}
 80082ea:	b083      	sub	sp, #12
 80082ec:	af00      	add	r7, sp, #0
 80082ee:	6078      	str	r0, [r7, #4]
 80082f0:	bf00      	nop
 80082f2:	370c      	adds	r7, #12
 80082f4:	46bd      	mov	sp, r7
 80082f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082fa:	4770      	bx	lr

080082fc <HAL_UARTEx_RxFifoFullCallback>:
 80082fc:	b480      	push	{r7}
 80082fe:	b083      	sub	sp, #12
 8008300:	af00      	add	r7, sp, #0
 8008302:	6078      	str	r0, [r7, #4]
 8008304:	bf00      	nop
 8008306:	370c      	adds	r7, #12
 8008308:	46bd      	mov	sp, r7
 800830a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800830e:	4770      	bx	lr

08008310 <HAL_UARTEx_TxFifoEmptyCallback>:
 8008310:	b480      	push	{r7}
 8008312:	b083      	sub	sp, #12
 8008314:	af00      	add	r7, sp, #0
 8008316:	6078      	str	r0, [r7, #4]
 8008318:	bf00      	nop
 800831a:	370c      	adds	r7, #12
 800831c:	46bd      	mov	sp, r7
 800831e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008322:	4770      	bx	lr

08008324 <HAL_UARTEx_DisableFifoMode>:
 8008324:	b480      	push	{r7}
 8008326:	b085      	sub	sp, #20
 8008328:	af00      	add	r7, sp, #0
 800832a:	6078      	str	r0, [r7, #4]
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8008332:	2b01      	cmp	r3, #1
 8008334:	d101      	bne.n	800833a <HAL_UARTEx_DisableFifoMode+0x16>
 8008336:	2302      	movs	r3, #2
 8008338:	e027      	b.n	800838a <HAL_UARTEx_DisableFifoMode+0x66>
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	2201      	movs	r2, #1
 800833e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	2224      	movs	r2, #36	; 0x24
 8008346:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800834a:	687b      	ldr	r3, [r7, #4]
 800834c:	681b      	ldr	r3, [r3, #0]
 800834e:	681b      	ldr	r3, [r3, #0]
 8008350:	60fb      	str	r3, [r7, #12]
 8008352:	687b      	ldr	r3, [r7, #4]
 8008354:	681b      	ldr	r3, [r3, #0]
 8008356:	681a      	ldr	r2, [r3, #0]
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	f022 0201 	bic.w	r2, r2, #1
 8008360:	601a      	str	r2, [r3, #0]
 8008362:	68fb      	ldr	r3, [r7, #12]
 8008364:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8008368:	60fb      	str	r3, [r7, #12]
 800836a:	687b      	ldr	r3, [r7, #4]
 800836c:	2200      	movs	r2, #0
 800836e:	665a      	str	r2, [r3, #100]	; 0x64
 8008370:	687b      	ldr	r3, [r7, #4]
 8008372:	681b      	ldr	r3, [r3, #0]
 8008374:	68fa      	ldr	r2, [r7, #12]
 8008376:	601a      	str	r2, [r3, #0]
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	2220      	movs	r2, #32
 800837c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8008380:	687b      	ldr	r3, [r7, #4]
 8008382:	2200      	movs	r2, #0
 8008384:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8008388:	2300      	movs	r3, #0
 800838a:	4618      	mov	r0, r3
 800838c:	3714      	adds	r7, #20
 800838e:	46bd      	mov	sp, r7
 8008390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008394:	4770      	bx	lr

08008396 <HAL_UARTEx_SetTxFifoThreshold>:
 8008396:	b580      	push	{r7, lr}
 8008398:	b084      	sub	sp, #16
 800839a:	af00      	add	r7, sp, #0
 800839c:	6078      	str	r0, [r7, #4]
 800839e:	6039      	str	r1, [r7, #0]
 80083a0:	687b      	ldr	r3, [r7, #4]
 80083a2:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 80083a6:	2b01      	cmp	r3, #1
 80083a8:	d101      	bne.n	80083ae <HAL_UARTEx_SetTxFifoThreshold+0x18>
 80083aa:	2302      	movs	r3, #2
 80083ac:	e02d      	b.n	800840a <HAL_UARTEx_SetTxFifoThreshold+0x74>
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	2201      	movs	r2, #1
 80083b2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	2224      	movs	r2, #36	; 0x24
 80083ba:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80083be:	687b      	ldr	r3, [r7, #4]
 80083c0:	681b      	ldr	r3, [r3, #0]
 80083c2:	681b      	ldr	r3, [r3, #0]
 80083c4:	60fb      	str	r3, [r7, #12]
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	681b      	ldr	r3, [r3, #0]
 80083ca:	681a      	ldr	r2, [r3, #0]
 80083cc:	687b      	ldr	r3, [r7, #4]
 80083ce:	681b      	ldr	r3, [r3, #0]
 80083d0:	f022 0201 	bic.w	r2, r2, #1
 80083d4:	601a      	str	r2, [r3, #0]
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	681b      	ldr	r3, [r3, #0]
 80083da:	689b      	ldr	r3, [r3, #8]
 80083dc:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	681b      	ldr	r3, [r3, #0]
 80083e4:	683a      	ldr	r2, [r7, #0]
 80083e6:	430a      	orrs	r2, r1
 80083e8:	609a      	str	r2, [r3, #8]
 80083ea:	6878      	ldr	r0, [r7, #4]
 80083ec:	f000 f850 	bl	8008490 <UARTEx_SetNbDataToProcess>
 80083f0:	687b      	ldr	r3, [r7, #4]
 80083f2:	681b      	ldr	r3, [r3, #0]
 80083f4:	68fa      	ldr	r2, [r7, #12]
 80083f6:	601a      	str	r2, [r3, #0]
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	2220      	movs	r2, #32
 80083fc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	2200      	movs	r2, #0
 8008404:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8008408:	2300      	movs	r3, #0
 800840a:	4618      	mov	r0, r3
 800840c:	3710      	adds	r7, #16
 800840e:	46bd      	mov	sp, r7
 8008410:	bd80      	pop	{r7, pc}

08008412 <HAL_UARTEx_SetRxFifoThreshold>:
 8008412:	b580      	push	{r7, lr}
 8008414:	b084      	sub	sp, #16
 8008416:	af00      	add	r7, sp, #0
 8008418:	6078      	str	r0, [r7, #4]
 800841a:	6039      	str	r1, [r7, #0]
 800841c:	687b      	ldr	r3, [r7, #4]
 800841e:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 8008422:	2b01      	cmp	r3, #1
 8008424:	d101      	bne.n	800842a <HAL_UARTEx_SetRxFifoThreshold+0x18>
 8008426:	2302      	movs	r3, #2
 8008428:	e02d      	b.n	8008486 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	2201      	movs	r2, #1
 800842e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	2224      	movs	r2, #36	; 0x24
 8008436:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	681b      	ldr	r3, [r3, #0]
 800843e:	681b      	ldr	r3, [r3, #0]
 8008440:	60fb      	str	r3, [r7, #12]
 8008442:	687b      	ldr	r3, [r7, #4]
 8008444:	681b      	ldr	r3, [r3, #0]
 8008446:	681a      	ldr	r2, [r3, #0]
 8008448:	687b      	ldr	r3, [r7, #4]
 800844a:	681b      	ldr	r3, [r3, #0]
 800844c:	f022 0201 	bic.w	r2, r2, #1
 8008450:	601a      	str	r2, [r3, #0]
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	681b      	ldr	r3, [r3, #0]
 8008456:	689b      	ldr	r3, [r3, #8]
 8008458:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	681b      	ldr	r3, [r3, #0]
 8008460:	683a      	ldr	r2, [r7, #0]
 8008462:	430a      	orrs	r2, r1
 8008464:	609a      	str	r2, [r3, #8]
 8008466:	6878      	ldr	r0, [r7, #4]
 8008468:	f000 f812 	bl	8008490 <UARTEx_SetNbDataToProcess>
 800846c:	687b      	ldr	r3, [r7, #4]
 800846e:	681b      	ldr	r3, [r3, #0]
 8008470:	68fa      	ldr	r2, [r7, #12]
 8008472:	601a      	str	r2, [r3, #0]
 8008474:	687b      	ldr	r3, [r7, #4]
 8008476:	2220      	movs	r2, #32
 8008478:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800847c:	687b      	ldr	r3, [r7, #4]
 800847e:	2200      	movs	r2, #0
 8008480:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 8008484:	2300      	movs	r3, #0
 8008486:	4618      	mov	r0, r3
 8008488:	3710      	adds	r7, #16
 800848a:	46bd      	mov	sp, r7
 800848c:	bd80      	pop	{r7, pc}
	...

08008490 <UARTEx_SetNbDataToProcess>:
 8008490:	b480      	push	{r7}
 8008492:	b085      	sub	sp, #20
 8008494:	af00      	add	r7, sp, #0
 8008496:	6078      	str	r0, [r7, #4]
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800849c:	2b00      	cmp	r3, #0
 800849e:	d108      	bne.n	80084b2 <UARTEx_SetNbDataToProcess+0x22>
 80084a0:	687b      	ldr	r3, [r7, #4]
 80084a2:	2201      	movs	r2, #1
 80084a4:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	2201      	movs	r2, #1
 80084ac:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 80084b0:	e031      	b.n	8008516 <UARTEx_SetNbDataToProcess+0x86>
 80084b2:	2308      	movs	r3, #8
 80084b4:	73fb      	strb	r3, [r7, #15]
 80084b6:	2308      	movs	r3, #8
 80084b8:	73bb      	strb	r3, [r7, #14]
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	681b      	ldr	r3, [r3, #0]
 80084be:	689b      	ldr	r3, [r3, #8]
 80084c0:	0e5b      	lsrs	r3, r3, #25
 80084c2:	b2db      	uxtb	r3, r3
 80084c4:	f003 0307 	and.w	r3, r3, #7
 80084c8:	737b      	strb	r3, [r7, #13]
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	681b      	ldr	r3, [r3, #0]
 80084ce:	689b      	ldr	r3, [r3, #8]
 80084d0:	0f5b      	lsrs	r3, r3, #29
 80084d2:	b2db      	uxtb	r3, r3
 80084d4:	f003 0307 	and.w	r3, r3, #7
 80084d8:	733b      	strb	r3, [r7, #12]
 80084da:	7bbb      	ldrb	r3, [r7, #14]
 80084dc:	7b3a      	ldrb	r2, [r7, #12]
 80084de:	4911      	ldr	r1, [pc, #68]	; (8008524 <UARTEx_SetNbDataToProcess+0x94>)
 80084e0:	5c8a      	ldrb	r2, [r1, r2]
 80084e2:	fb02 f303 	mul.w	r3, r2, r3
 80084e6:	7b3a      	ldrb	r2, [r7, #12]
 80084e8:	490f      	ldr	r1, [pc, #60]	; (8008528 <UARTEx_SetNbDataToProcess+0x98>)
 80084ea:	5c8a      	ldrb	r2, [r1, r2]
 80084ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80084f0:	b29a      	uxth	r2, r3
 80084f2:	687b      	ldr	r3, [r7, #4]
 80084f4:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 80084f8:	7bfb      	ldrb	r3, [r7, #15]
 80084fa:	7b7a      	ldrb	r2, [r7, #13]
 80084fc:	4909      	ldr	r1, [pc, #36]	; (8008524 <UARTEx_SetNbDataToProcess+0x94>)
 80084fe:	5c8a      	ldrb	r2, [r1, r2]
 8008500:	fb02 f303 	mul.w	r3, r2, r3
 8008504:	7b7a      	ldrb	r2, [r7, #13]
 8008506:	4908      	ldr	r1, [pc, #32]	; (8008528 <UARTEx_SetNbDataToProcess+0x98>)
 8008508:	5c8a      	ldrb	r2, [r1, r2]
 800850a:	fb93 f3f2 	sdiv	r3, r3, r2
 800850e:	b29a      	uxth	r2, r3
 8008510:	687b      	ldr	r3, [r7, #4]
 8008512:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8008516:	bf00      	nop
 8008518:	3714      	adds	r7, #20
 800851a:	46bd      	mov	sp, r7
 800851c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008520:	4770      	bx	lr
 8008522:	bf00      	nop
 8008524:	08009c00 	.word	0x08009c00
 8008528:	08009c08 	.word	0x08009c08

0800852c <atoi>:
 800852c:	220a      	movs	r2, #10
 800852e:	2100      	movs	r1, #0
 8008530:	f000 b944 	b.w	80087bc <strtol>

08008534 <__errno>:
 8008534:	4b01      	ldr	r3, [pc, #4]	; (800853c <__errno+0x8>)
 8008536:	6818      	ldr	r0, [r3, #0]
 8008538:	4770      	bx	lr
 800853a:	bf00      	nop
 800853c:	200001d0 	.word	0x200001d0

08008540 <__libc_init_array>:
 8008540:	b570      	push	{r4, r5, r6, lr}
 8008542:	4d0d      	ldr	r5, [pc, #52]	; (8008578 <__libc_init_array+0x38>)
 8008544:	4c0d      	ldr	r4, [pc, #52]	; (800857c <__libc_init_array+0x3c>)
 8008546:	1b64      	subs	r4, r4, r5
 8008548:	10a4      	asrs	r4, r4, #2
 800854a:	2600      	movs	r6, #0
 800854c:	42a6      	cmp	r6, r4
 800854e:	d109      	bne.n	8008564 <__libc_init_array+0x24>
 8008550:	4d0b      	ldr	r5, [pc, #44]	; (8008580 <__libc_init_array+0x40>)
 8008552:	4c0c      	ldr	r4, [pc, #48]	; (8008584 <__libc_init_array+0x44>)
 8008554:	f001 faf2 	bl	8009b3c <_init>
 8008558:	1b64      	subs	r4, r4, r5
 800855a:	10a4      	asrs	r4, r4, #2
 800855c:	2600      	movs	r6, #0
 800855e:	42a6      	cmp	r6, r4
 8008560:	d105      	bne.n	800856e <__libc_init_array+0x2e>
 8008562:	bd70      	pop	{r4, r5, r6, pc}
 8008564:	f855 3b04 	ldr.w	r3, [r5], #4
 8008568:	4798      	blx	r3
 800856a:	3601      	adds	r6, #1
 800856c:	e7ee      	b.n	800854c <__libc_init_array+0xc>
 800856e:	f855 3b04 	ldr.w	r3, [r5], #4
 8008572:	4798      	blx	r3
 8008574:	3601      	adds	r6, #1
 8008576:	e7f2      	b.n	800855e <__libc_init_array+0x1e>
 8008578:	08009e60 	.word	0x08009e60
 800857c:	08009e60 	.word	0x08009e60
 8008580:	08009e60 	.word	0x08009e60
 8008584:	08009e64 	.word	0x08009e64

08008588 <memset>:
 8008588:	4402      	add	r2, r0
 800858a:	4603      	mov	r3, r0
 800858c:	4293      	cmp	r3, r2
 800858e:	d100      	bne.n	8008592 <memset+0xa>
 8008590:	4770      	bx	lr
 8008592:	f803 1b01 	strb.w	r1, [r3], #1
 8008596:	e7f9      	b.n	800858c <memset+0x4>

08008598 <sniprintf>:
 8008598:	b40c      	push	{r2, r3}
 800859a:	b530      	push	{r4, r5, lr}
 800859c:	4b17      	ldr	r3, [pc, #92]	; (80085fc <sniprintf+0x64>)
 800859e:	1e0c      	subs	r4, r1, #0
 80085a0:	681d      	ldr	r5, [r3, #0]
 80085a2:	b09d      	sub	sp, #116	; 0x74
 80085a4:	da08      	bge.n	80085b8 <sniprintf+0x20>
 80085a6:	238b      	movs	r3, #139	; 0x8b
 80085a8:	602b      	str	r3, [r5, #0]
 80085aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80085ae:	b01d      	add	sp, #116	; 0x74
 80085b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80085b4:	b002      	add	sp, #8
 80085b6:	4770      	bx	lr
 80085b8:	f44f 7302 	mov.w	r3, #520	; 0x208
 80085bc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80085c0:	bf14      	ite	ne
 80085c2:	f104 33ff 	addne.w	r3, r4, #4294967295	; 0xffffffff
 80085c6:	4623      	moveq	r3, r4
 80085c8:	9304      	str	r3, [sp, #16]
 80085ca:	9307      	str	r3, [sp, #28]
 80085cc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80085d0:	9002      	str	r0, [sp, #8]
 80085d2:	9006      	str	r0, [sp, #24]
 80085d4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80085d8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80085da:	ab21      	add	r3, sp, #132	; 0x84
 80085dc:	a902      	add	r1, sp, #8
 80085de:	4628      	mov	r0, r5
 80085e0:	9301      	str	r3, [sp, #4]
 80085e2:	f000 fa69 	bl	8008ab8 <_svfiprintf_r>
 80085e6:	1c43      	adds	r3, r0, #1
 80085e8:	bfbc      	itt	lt
 80085ea:	238b      	movlt	r3, #139	; 0x8b
 80085ec:	602b      	strlt	r3, [r5, #0]
 80085ee:	2c00      	cmp	r4, #0
 80085f0:	d0dd      	beq.n	80085ae <sniprintf+0x16>
 80085f2:	9b02      	ldr	r3, [sp, #8]
 80085f4:	2200      	movs	r2, #0
 80085f6:	701a      	strb	r2, [r3, #0]
 80085f8:	e7d9      	b.n	80085ae <sniprintf+0x16>
 80085fa:	bf00      	nop
 80085fc:	200001d0 	.word	0x200001d0

08008600 <strtok>:
 8008600:	4b16      	ldr	r3, [pc, #88]	; (800865c <strtok+0x5c>)
 8008602:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008604:	681e      	ldr	r6, [r3, #0]
 8008606:	6db4      	ldr	r4, [r6, #88]	; 0x58
 8008608:	4605      	mov	r5, r0
 800860a:	b9fc      	cbnz	r4, 800864c <strtok+0x4c>
 800860c:	2050      	movs	r0, #80	; 0x50
 800860e:	9101      	str	r1, [sp, #4]
 8008610:	f000 f90e 	bl	8008830 <malloc>
 8008614:	9901      	ldr	r1, [sp, #4]
 8008616:	65b0      	str	r0, [r6, #88]	; 0x58
 8008618:	4602      	mov	r2, r0
 800861a:	b920      	cbnz	r0, 8008626 <strtok+0x26>
 800861c:	4b10      	ldr	r3, [pc, #64]	; (8008660 <strtok+0x60>)
 800861e:	4811      	ldr	r0, [pc, #68]	; (8008664 <strtok+0x64>)
 8008620:	2157      	movs	r1, #87	; 0x57
 8008622:	f000 f8d5 	bl	80087d0 <__assert_func>
 8008626:	e9c0 4400 	strd	r4, r4, [r0]
 800862a:	e9c0 4402 	strd	r4, r4, [r0, #8]
 800862e:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8008632:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8008636:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 800863a:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 800863e:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8008642:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8008646:	6184      	str	r4, [r0, #24]
 8008648:	7704      	strb	r4, [r0, #28]
 800864a:	6244      	str	r4, [r0, #36]	; 0x24
 800864c:	6db2      	ldr	r2, [r6, #88]	; 0x58
 800864e:	2301      	movs	r3, #1
 8008650:	4628      	mov	r0, r5
 8008652:	b002      	add	sp, #8
 8008654:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008658:	f000 b806 	b.w	8008668 <__strtok_r>
 800865c:	200001d0 	.word	0x200001d0
 8008660:	08009c14 	.word	0x08009c14
 8008664:	08009c2b 	.word	0x08009c2b

08008668 <__strtok_r>:
 8008668:	b5f0      	push	{r4, r5, r6, r7, lr}
 800866a:	b908      	cbnz	r0, 8008670 <__strtok_r+0x8>
 800866c:	6810      	ldr	r0, [r2, #0]
 800866e:	b188      	cbz	r0, 8008694 <__strtok_r+0x2c>
 8008670:	4604      	mov	r4, r0
 8008672:	4620      	mov	r0, r4
 8008674:	f814 5b01 	ldrb.w	r5, [r4], #1
 8008678:	460f      	mov	r7, r1
 800867a:	f817 6b01 	ldrb.w	r6, [r7], #1
 800867e:	b91e      	cbnz	r6, 8008688 <__strtok_r+0x20>
 8008680:	b965      	cbnz	r5, 800869c <__strtok_r+0x34>
 8008682:	6015      	str	r5, [r2, #0]
 8008684:	4628      	mov	r0, r5
 8008686:	e005      	b.n	8008694 <__strtok_r+0x2c>
 8008688:	42b5      	cmp	r5, r6
 800868a:	d1f6      	bne.n	800867a <__strtok_r+0x12>
 800868c:	2b00      	cmp	r3, #0
 800868e:	d1f0      	bne.n	8008672 <__strtok_r+0xa>
 8008690:	6014      	str	r4, [r2, #0]
 8008692:	7003      	strb	r3, [r0, #0]
 8008694:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008696:	461c      	mov	r4, r3
 8008698:	e00c      	b.n	80086b4 <__strtok_r+0x4c>
 800869a:	b915      	cbnz	r5, 80086a2 <__strtok_r+0x3a>
 800869c:	f814 3b01 	ldrb.w	r3, [r4], #1
 80086a0:	460e      	mov	r6, r1
 80086a2:	f816 5b01 	ldrb.w	r5, [r6], #1
 80086a6:	42ab      	cmp	r3, r5
 80086a8:	d1f7      	bne.n	800869a <__strtok_r+0x32>
 80086aa:	2b00      	cmp	r3, #0
 80086ac:	d0f3      	beq.n	8008696 <__strtok_r+0x2e>
 80086ae:	2300      	movs	r3, #0
 80086b0:	f804 3c01 	strb.w	r3, [r4, #-1]
 80086b4:	6014      	str	r4, [r2, #0]
 80086b6:	e7ed      	b.n	8008694 <__strtok_r+0x2c>

080086b8 <_strtol_l.constprop.0>:
 80086b8:	2b01      	cmp	r3, #1
 80086ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80086be:	d001      	beq.n	80086c4 <_strtol_l.constprop.0+0xc>
 80086c0:	2b24      	cmp	r3, #36	; 0x24
 80086c2:	d906      	bls.n	80086d2 <_strtol_l.constprop.0+0x1a>
 80086c4:	f7ff ff36 	bl	8008534 <__errno>
 80086c8:	2316      	movs	r3, #22
 80086ca:	6003      	str	r3, [r0, #0]
 80086cc:	2000      	movs	r0, #0
 80086ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80086d2:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80087b8 <_strtol_l.constprop.0+0x100>
 80086d6:	460d      	mov	r5, r1
 80086d8:	462e      	mov	r6, r5
 80086da:	f815 4b01 	ldrb.w	r4, [r5], #1
 80086de:	f814 700c 	ldrb.w	r7, [r4, ip]
 80086e2:	f017 0708 	ands.w	r7, r7, #8
 80086e6:	d1f7      	bne.n	80086d8 <_strtol_l.constprop.0+0x20>
 80086e8:	2c2d      	cmp	r4, #45	; 0x2d
 80086ea:	d132      	bne.n	8008752 <_strtol_l.constprop.0+0x9a>
 80086ec:	782c      	ldrb	r4, [r5, #0]
 80086ee:	2701      	movs	r7, #1
 80086f0:	1cb5      	adds	r5, r6, #2
 80086f2:	2b00      	cmp	r3, #0
 80086f4:	d05b      	beq.n	80087ae <_strtol_l.constprop.0+0xf6>
 80086f6:	2b10      	cmp	r3, #16
 80086f8:	d109      	bne.n	800870e <_strtol_l.constprop.0+0x56>
 80086fa:	2c30      	cmp	r4, #48	; 0x30
 80086fc:	d107      	bne.n	800870e <_strtol_l.constprop.0+0x56>
 80086fe:	782c      	ldrb	r4, [r5, #0]
 8008700:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8008704:	2c58      	cmp	r4, #88	; 0x58
 8008706:	d14d      	bne.n	80087a4 <_strtol_l.constprop.0+0xec>
 8008708:	786c      	ldrb	r4, [r5, #1]
 800870a:	2310      	movs	r3, #16
 800870c:	3502      	adds	r5, #2
 800870e:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8008712:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8008716:	f04f 0c00 	mov.w	ip, #0
 800871a:	fbb8 f9f3 	udiv	r9, r8, r3
 800871e:	4666      	mov	r6, ip
 8008720:	fb03 8a19 	mls	sl, r3, r9, r8
 8008724:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8008728:	f1be 0f09 	cmp.w	lr, #9
 800872c:	d816      	bhi.n	800875c <_strtol_l.constprop.0+0xa4>
 800872e:	4674      	mov	r4, lr
 8008730:	42a3      	cmp	r3, r4
 8008732:	dd24      	ble.n	800877e <_strtol_l.constprop.0+0xc6>
 8008734:	f1bc 0f00 	cmp.w	ip, #0
 8008738:	db1e      	blt.n	8008778 <_strtol_l.constprop.0+0xc0>
 800873a:	45b1      	cmp	r9, r6
 800873c:	d31c      	bcc.n	8008778 <_strtol_l.constprop.0+0xc0>
 800873e:	d101      	bne.n	8008744 <_strtol_l.constprop.0+0x8c>
 8008740:	45a2      	cmp	sl, r4
 8008742:	db19      	blt.n	8008778 <_strtol_l.constprop.0+0xc0>
 8008744:	fb06 4603 	mla	r6, r6, r3, r4
 8008748:	f04f 0c01 	mov.w	ip, #1
 800874c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8008750:	e7e8      	b.n	8008724 <_strtol_l.constprop.0+0x6c>
 8008752:	2c2b      	cmp	r4, #43	; 0x2b
 8008754:	bf04      	itt	eq
 8008756:	782c      	ldrbeq	r4, [r5, #0]
 8008758:	1cb5      	addeq	r5, r6, #2
 800875a:	e7ca      	b.n	80086f2 <_strtol_l.constprop.0+0x3a>
 800875c:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8008760:	f1be 0f19 	cmp.w	lr, #25
 8008764:	d801      	bhi.n	800876a <_strtol_l.constprop.0+0xb2>
 8008766:	3c37      	subs	r4, #55	; 0x37
 8008768:	e7e2      	b.n	8008730 <_strtol_l.constprop.0+0x78>
 800876a:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 800876e:	f1be 0f19 	cmp.w	lr, #25
 8008772:	d804      	bhi.n	800877e <_strtol_l.constprop.0+0xc6>
 8008774:	3c57      	subs	r4, #87	; 0x57
 8008776:	e7db      	b.n	8008730 <_strtol_l.constprop.0+0x78>
 8008778:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 800877c:	e7e6      	b.n	800874c <_strtol_l.constprop.0+0x94>
 800877e:	f1bc 0f00 	cmp.w	ip, #0
 8008782:	da05      	bge.n	8008790 <_strtol_l.constprop.0+0xd8>
 8008784:	2322      	movs	r3, #34	; 0x22
 8008786:	6003      	str	r3, [r0, #0]
 8008788:	4646      	mov	r6, r8
 800878a:	b942      	cbnz	r2, 800879e <_strtol_l.constprop.0+0xe6>
 800878c:	4630      	mov	r0, r6
 800878e:	e79e      	b.n	80086ce <_strtol_l.constprop.0+0x16>
 8008790:	b107      	cbz	r7, 8008794 <_strtol_l.constprop.0+0xdc>
 8008792:	4276      	negs	r6, r6
 8008794:	2a00      	cmp	r2, #0
 8008796:	d0f9      	beq.n	800878c <_strtol_l.constprop.0+0xd4>
 8008798:	f1bc 0f00 	cmp.w	ip, #0
 800879c:	d000      	beq.n	80087a0 <_strtol_l.constprop.0+0xe8>
 800879e:	1e69      	subs	r1, r5, #1
 80087a0:	6011      	str	r1, [r2, #0]
 80087a2:	e7f3      	b.n	800878c <_strtol_l.constprop.0+0xd4>
 80087a4:	2430      	movs	r4, #48	; 0x30
 80087a6:	2b00      	cmp	r3, #0
 80087a8:	d1b1      	bne.n	800870e <_strtol_l.constprop.0+0x56>
 80087aa:	2308      	movs	r3, #8
 80087ac:	e7af      	b.n	800870e <_strtol_l.constprop.0+0x56>
 80087ae:	2c30      	cmp	r4, #48	; 0x30
 80087b0:	d0a5      	beq.n	80086fe <_strtol_l.constprop.0+0x46>
 80087b2:	230a      	movs	r3, #10
 80087b4:	e7ab      	b.n	800870e <_strtol_l.constprop.0+0x56>
 80087b6:	bf00      	nop
 80087b8:	08009cc5 	.word	0x08009cc5

080087bc <strtol>:
 80087bc:	4613      	mov	r3, r2
 80087be:	460a      	mov	r2, r1
 80087c0:	4601      	mov	r1, r0
 80087c2:	4802      	ldr	r0, [pc, #8]	; (80087cc <strtol+0x10>)
 80087c4:	6800      	ldr	r0, [r0, #0]
 80087c6:	f7ff bf77 	b.w	80086b8 <_strtol_l.constprop.0>
 80087ca:	bf00      	nop
 80087cc:	200001d0 	.word	0x200001d0

080087d0 <__assert_func>:
 80087d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80087d2:	4614      	mov	r4, r2
 80087d4:	461a      	mov	r2, r3
 80087d6:	4b09      	ldr	r3, [pc, #36]	; (80087fc <__assert_func+0x2c>)
 80087d8:	681b      	ldr	r3, [r3, #0]
 80087da:	4605      	mov	r5, r0
 80087dc:	68d8      	ldr	r0, [r3, #12]
 80087de:	b14c      	cbz	r4, 80087f4 <__assert_func+0x24>
 80087e0:	4b07      	ldr	r3, [pc, #28]	; (8008800 <__assert_func+0x30>)
 80087e2:	9100      	str	r1, [sp, #0]
 80087e4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80087e8:	4906      	ldr	r1, [pc, #24]	; (8008804 <__assert_func+0x34>)
 80087ea:	462b      	mov	r3, r5
 80087ec:	f000 f80e 	bl	800880c <fiprintf>
 80087f0:	f000 fe20 	bl	8009434 <abort>
 80087f4:	4b04      	ldr	r3, [pc, #16]	; (8008808 <__assert_func+0x38>)
 80087f6:	461c      	mov	r4, r3
 80087f8:	e7f3      	b.n	80087e2 <__assert_func+0x12>
 80087fa:	bf00      	nop
 80087fc:	200001d0 	.word	0x200001d0
 8008800:	08009c88 	.word	0x08009c88
 8008804:	08009c95 	.word	0x08009c95
 8008808:	08009cc3 	.word	0x08009cc3

0800880c <fiprintf>:
 800880c:	b40e      	push	{r1, r2, r3}
 800880e:	b503      	push	{r0, r1, lr}
 8008810:	4601      	mov	r1, r0
 8008812:	ab03      	add	r3, sp, #12
 8008814:	4805      	ldr	r0, [pc, #20]	; (800882c <fiprintf+0x20>)
 8008816:	f853 2b04 	ldr.w	r2, [r3], #4
 800881a:	6800      	ldr	r0, [r0, #0]
 800881c:	9301      	str	r3, [sp, #4]
 800881e:	f000 fa75 	bl	8008d0c <_vfiprintf_r>
 8008822:	b002      	add	sp, #8
 8008824:	f85d eb04 	ldr.w	lr, [sp], #4
 8008828:	b003      	add	sp, #12
 800882a:	4770      	bx	lr
 800882c:	200001d0 	.word	0x200001d0

08008830 <malloc>:
 8008830:	4b02      	ldr	r3, [pc, #8]	; (800883c <malloc+0xc>)
 8008832:	4601      	mov	r1, r0
 8008834:	6818      	ldr	r0, [r3, #0]
 8008836:	f000 b86f 	b.w	8008918 <_malloc_r>
 800883a:	bf00      	nop
 800883c:	200001d0 	.word	0x200001d0

08008840 <_free_r>:
 8008840:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008842:	2900      	cmp	r1, #0
 8008844:	d044      	beq.n	80088d0 <_free_r+0x90>
 8008846:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800884a:	9001      	str	r0, [sp, #4]
 800884c:	2b00      	cmp	r3, #0
 800884e:	f1a1 0404 	sub.w	r4, r1, #4
 8008852:	bfb8      	it	lt
 8008854:	18e4      	addlt	r4, r4, r3
 8008856:	f001 f83d 	bl	80098d4 <__malloc_lock>
 800885a:	4a1e      	ldr	r2, [pc, #120]	; (80088d4 <_free_r+0x94>)
 800885c:	9801      	ldr	r0, [sp, #4]
 800885e:	6813      	ldr	r3, [r2, #0]
 8008860:	b933      	cbnz	r3, 8008870 <_free_r+0x30>
 8008862:	6063      	str	r3, [r4, #4]
 8008864:	6014      	str	r4, [r2, #0]
 8008866:	b003      	add	sp, #12
 8008868:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800886c:	f001 b838 	b.w	80098e0 <__malloc_unlock>
 8008870:	42a3      	cmp	r3, r4
 8008872:	d908      	bls.n	8008886 <_free_r+0x46>
 8008874:	6825      	ldr	r5, [r4, #0]
 8008876:	1961      	adds	r1, r4, r5
 8008878:	428b      	cmp	r3, r1
 800887a:	bf01      	itttt	eq
 800887c:	6819      	ldreq	r1, [r3, #0]
 800887e:	685b      	ldreq	r3, [r3, #4]
 8008880:	1949      	addeq	r1, r1, r5
 8008882:	6021      	streq	r1, [r4, #0]
 8008884:	e7ed      	b.n	8008862 <_free_r+0x22>
 8008886:	461a      	mov	r2, r3
 8008888:	685b      	ldr	r3, [r3, #4]
 800888a:	b10b      	cbz	r3, 8008890 <_free_r+0x50>
 800888c:	42a3      	cmp	r3, r4
 800888e:	d9fa      	bls.n	8008886 <_free_r+0x46>
 8008890:	6811      	ldr	r1, [r2, #0]
 8008892:	1855      	adds	r5, r2, r1
 8008894:	42a5      	cmp	r5, r4
 8008896:	d10b      	bne.n	80088b0 <_free_r+0x70>
 8008898:	6824      	ldr	r4, [r4, #0]
 800889a:	4421      	add	r1, r4
 800889c:	1854      	adds	r4, r2, r1
 800889e:	42a3      	cmp	r3, r4
 80088a0:	6011      	str	r1, [r2, #0]
 80088a2:	d1e0      	bne.n	8008866 <_free_r+0x26>
 80088a4:	681c      	ldr	r4, [r3, #0]
 80088a6:	685b      	ldr	r3, [r3, #4]
 80088a8:	6053      	str	r3, [r2, #4]
 80088aa:	4421      	add	r1, r4
 80088ac:	6011      	str	r1, [r2, #0]
 80088ae:	e7da      	b.n	8008866 <_free_r+0x26>
 80088b0:	d902      	bls.n	80088b8 <_free_r+0x78>
 80088b2:	230c      	movs	r3, #12
 80088b4:	6003      	str	r3, [r0, #0]
 80088b6:	e7d6      	b.n	8008866 <_free_r+0x26>
 80088b8:	6825      	ldr	r5, [r4, #0]
 80088ba:	1961      	adds	r1, r4, r5
 80088bc:	428b      	cmp	r3, r1
 80088be:	bf04      	itt	eq
 80088c0:	6819      	ldreq	r1, [r3, #0]
 80088c2:	685b      	ldreq	r3, [r3, #4]
 80088c4:	6063      	str	r3, [r4, #4]
 80088c6:	bf04      	itt	eq
 80088c8:	1949      	addeq	r1, r1, r5
 80088ca:	6021      	streq	r1, [r4, #0]
 80088cc:	6054      	str	r4, [r2, #4]
 80088ce:	e7ca      	b.n	8008866 <_free_r+0x26>
 80088d0:	b003      	add	sp, #12
 80088d2:	bd30      	pop	{r4, r5, pc}
 80088d4:	2000044c 	.word	0x2000044c

080088d8 <sbrk_aligned>:
 80088d8:	b570      	push	{r4, r5, r6, lr}
 80088da:	4e0e      	ldr	r6, [pc, #56]	; (8008914 <sbrk_aligned+0x3c>)
 80088dc:	460c      	mov	r4, r1
 80088de:	6831      	ldr	r1, [r6, #0]
 80088e0:	4605      	mov	r5, r0
 80088e2:	b911      	cbnz	r1, 80088ea <sbrk_aligned+0x12>
 80088e4:	f000 fcd6 	bl	8009294 <_sbrk_r>
 80088e8:	6030      	str	r0, [r6, #0]
 80088ea:	4621      	mov	r1, r4
 80088ec:	4628      	mov	r0, r5
 80088ee:	f000 fcd1 	bl	8009294 <_sbrk_r>
 80088f2:	1c43      	adds	r3, r0, #1
 80088f4:	d00a      	beq.n	800890c <sbrk_aligned+0x34>
 80088f6:	1cc4      	adds	r4, r0, #3
 80088f8:	f024 0403 	bic.w	r4, r4, #3
 80088fc:	42a0      	cmp	r0, r4
 80088fe:	d007      	beq.n	8008910 <sbrk_aligned+0x38>
 8008900:	1a21      	subs	r1, r4, r0
 8008902:	4628      	mov	r0, r5
 8008904:	f000 fcc6 	bl	8009294 <_sbrk_r>
 8008908:	3001      	adds	r0, #1
 800890a:	d101      	bne.n	8008910 <sbrk_aligned+0x38>
 800890c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8008910:	4620      	mov	r0, r4
 8008912:	bd70      	pop	{r4, r5, r6, pc}
 8008914:	20000450 	.word	0x20000450

08008918 <_malloc_r>:
 8008918:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800891c:	1ccd      	adds	r5, r1, #3
 800891e:	f025 0503 	bic.w	r5, r5, #3
 8008922:	3508      	adds	r5, #8
 8008924:	2d0c      	cmp	r5, #12
 8008926:	bf38      	it	cc
 8008928:	250c      	movcc	r5, #12
 800892a:	2d00      	cmp	r5, #0
 800892c:	4607      	mov	r7, r0
 800892e:	db01      	blt.n	8008934 <_malloc_r+0x1c>
 8008930:	42a9      	cmp	r1, r5
 8008932:	d905      	bls.n	8008940 <_malloc_r+0x28>
 8008934:	230c      	movs	r3, #12
 8008936:	603b      	str	r3, [r7, #0]
 8008938:	2600      	movs	r6, #0
 800893a:	4630      	mov	r0, r6
 800893c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008940:	4e2e      	ldr	r6, [pc, #184]	; (80089fc <_malloc_r+0xe4>)
 8008942:	f000 ffc7 	bl	80098d4 <__malloc_lock>
 8008946:	6833      	ldr	r3, [r6, #0]
 8008948:	461c      	mov	r4, r3
 800894a:	bb34      	cbnz	r4, 800899a <_malloc_r+0x82>
 800894c:	4629      	mov	r1, r5
 800894e:	4638      	mov	r0, r7
 8008950:	f7ff ffc2 	bl	80088d8 <sbrk_aligned>
 8008954:	1c43      	adds	r3, r0, #1
 8008956:	4604      	mov	r4, r0
 8008958:	d14d      	bne.n	80089f6 <_malloc_r+0xde>
 800895a:	6834      	ldr	r4, [r6, #0]
 800895c:	4626      	mov	r6, r4
 800895e:	2e00      	cmp	r6, #0
 8008960:	d140      	bne.n	80089e4 <_malloc_r+0xcc>
 8008962:	6823      	ldr	r3, [r4, #0]
 8008964:	4631      	mov	r1, r6
 8008966:	4638      	mov	r0, r7
 8008968:	eb04 0803 	add.w	r8, r4, r3
 800896c:	f000 fc92 	bl	8009294 <_sbrk_r>
 8008970:	4580      	cmp	r8, r0
 8008972:	d13a      	bne.n	80089ea <_malloc_r+0xd2>
 8008974:	6821      	ldr	r1, [r4, #0]
 8008976:	3503      	adds	r5, #3
 8008978:	1a6d      	subs	r5, r5, r1
 800897a:	f025 0503 	bic.w	r5, r5, #3
 800897e:	3508      	adds	r5, #8
 8008980:	2d0c      	cmp	r5, #12
 8008982:	bf38      	it	cc
 8008984:	250c      	movcc	r5, #12
 8008986:	4629      	mov	r1, r5
 8008988:	4638      	mov	r0, r7
 800898a:	f7ff ffa5 	bl	80088d8 <sbrk_aligned>
 800898e:	3001      	adds	r0, #1
 8008990:	d02b      	beq.n	80089ea <_malloc_r+0xd2>
 8008992:	6823      	ldr	r3, [r4, #0]
 8008994:	442b      	add	r3, r5
 8008996:	6023      	str	r3, [r4, #0]
 8008998:	e00e      	b.n	80089b8 <_malloc_r+0xa0>
 800899a:	6822      	ldr	r2, [r4, #0]
 800899c:	1b52      	subs	r2, r2, r5
 800899e:	d41e      	bmi.n	80089de <_malloc_r+0xc6>
 80089a0:	2a0b      	cmp	r2, #11
 80089a2:	d916      	bls.n	80089d2 <_malloc_r+0xba>
 80089a4:	1961      	adds	r1, r4, r5
 80089a6:	42a3      	cmp	r3, r4
 80089a8:	6025      	str	r5, [r4, #0]
 80089aa:	bf18      	it	ne
 80089ac:	6059      	strne	r1, [r3, #4]
 80089ae:	6863      	ldr	r3, [r4, #4]
 80089b0:	bf08      	it	eq
 80089b2:	6031      	streq	r1, [r6, #0]
 80089b4:	5162      	str	r2, [r4, r5]
 80089b6:	604b      	str	r3, [r1, #4]
 80089b8:	4638      	mov	r0, r7
 80089ba:	f104 060b 	add.w	r6, r4, #11
 80089be:	f000 ff8f 	bl	80098e0 <__malloc_unlock>
 80089c2:	f026 0607 	bic.w	r6, r6, #7
 80089c6:	1d23      	adds	r3, r4, #4
 80089c8:	1af2      	subs	r2, r6, r3
 80089ca:	d0b6      	beq.n	800893a <_malloc_r+0x22>
 80089cc:	1b9b      	subs	r3, r3, r6
 80089ce:	50a3      	str	r3, [r4, r2]
 80089d0:	e7b3      	b.n	800893a <_malloc_r+0x22>
 80089d2:	6862      	ldr	r2, [r4, #4]
 80089d4:	42a3      	cmp	r3, r4
 80089d6:	bf0c      	ite	eq
 80089d8:	6032      	streq	r2, [r6, #0]
 80089da:	605a      	strne	r2, [r3, #4]
 80089dc:	e7ec      	b.n	80089b8 <_malloc_r+0xa0>
 80089de:	4623      	mov	r3, r4
 80089e0:	6864      	ldr	r4, [r4, #4]
 80089e2:	e7b2      	b.n	800894a <_malloc_r+0x32>
 80089e4:	4634      	mov	r4, r6
 80089e6:	6876      	ldr	r6, [r6, #4]
 80089e8:	e7b9      	b.n	800895e <_malloc_r+0x46>
 80089ea:	230c      	movs	r3, #12
 80089ec:	603b      	str	r3, [r7, #0]
 80089ee:	4638      	mov	r0, r7
 80089f0:	f000 ff76 	bl	80098e0 <__malloc_unlock>
 80089f4:	e7a1      	b.n	800893a <_malloc_r+0x22>
 80089f6:	6025      	str	r5, [r4, #0]
 80089f8:	e7de      	b.n	80089b8 <_malloc_r+0xa0>
 80089fa:	bf00      	nop
 80089fc:	2000044c 	.word	0x2000044c

08008a00 <__ssputs_r>:
 8008a00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008a04:	688e      	ldr	r6, [r1, #8]
 8008a06:	429e      	cmp	r6, r3
 8008a08:	4682      	mov	sl, r0
 8008a0a:	460c      	mov	r4, r1
 8008a0c:	4690      	mov	r8, r2
 8008a0e:	461f      	mov	r7, r3
 8008a10:	d838      	bhi.n	8008a84 <__ssputs_r+0x84>
 8008a12:	898a      	ldrh	r2, [r1, #12]
 8008a14:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8008a18:	d032      	beq.n	8008a80 <__ssputs_r+0x80>
 8008a1a:	6825      	ldr	r5, [r4, #0]
 8008a1c:	6909      	ldr	r1, [r1, #16]
 8008a1e:	eba5 0901 	sub.w	r9, r5, r1
 8008a22:	6965      	ldr	r5, [r4, #20]
 8008a24:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8008a28:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8008a2c:	3301      	adds	r3, #1
 8008a2e:	444b      	add	r3, r9
 8008a30:	106d      	asrs	r5, r5, #1
 8008a32:	429d      	cmp	r5, r3
 8008a34:	bf38      	it	cc
 8008a36:	461d      	movcc	r5, r3
 8008a38:	0553      	lsls	r3, r2, #21
 8008a3a:	d531      	bpl.n	8008aa0 <__ssputs_r+0xa0>
 8008a3c:	4629      	mov	r1, r5
 8008a3e:	f7ff ff6b 	bl	8008918 <_malloc_r>
 8008a42:	4606      	mov	r6, r0
 8008a44:	b950      	cbnz	r0, 8008a5c <__ssputs_r+0x5c>
 8008a46:	230c      	movs	r3, #12
 8008a48:	f8ca 3000 	str.w	r3, [sl]
 8008a4c:	89a3      	ldrh	r3, [r4, #12]
 8008a4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008a52:	81a3      	strh	r3, [r4, #12]
 8008a54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008a58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008a5c:	6921      	ldr	r1, [r4, #16]
 8008a5e:	464a      	mov	r2, r9
 8008a60:	f000 ff10 	bl	8009884 <memcpy>
 8008a64:	89a3      	ldrh	r3, [r4, #12]
 8008a66:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8008a6a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008a6e:	81a3      	strh	r3, [r4, #12]
 8008a70:	6126      	str	r6, [r4, #16]
 8008a72:	6165      	str	r5, [r4, #20]
 8008a74:	444e      	add	r6, r9
 8008a76:	eba5 0509 	sub.w	r5, r5, r9
 8008a7a:	6026      	str	r6, [r4, #0]
 8008a7c:	60a5      	str	r5, [r4, #8]
 8008a7e:	463e      	mov	r6, r7
 8008a80:	42be      	cmp	r6, r7
 8008a82:	d900      	bls.n	8008a86 <__ssputs_r+0x86>
 8008a84:	463e      	mov	r6, r7
 8008a86:	6820      	ldr	r0, [r4, #0]
 8008a88:	4632      	mov	r2, r6
 8008a8a:	4641      	mov	r1, r8
 8008a8c:	f000 ff08 	bl	80098a0 <memmove>
 8008a90:	68a3      	ldr	r3, [r4, #8]
 8008a92:	1b9b      	subs	r3, r3, r6
 8008a94:	60a3      	str	r3, [r4, #8]
 8008a96:	6823      	ldr	r3, [r4, #0]
 8008a98:	4433      	add	r3, r6
 8008a9a:	6023      	str	r3, [r4, #0]
 8008a9c:	2000      	movs	r0, #0
 8008a9e:	e7db      	b.n	8008a58 <__ssputs_r+0x58>
 8008aa0:	462a      	mov	r2, r5
 8008aa2:	f000 ff23 	bl	80098ec <_realloc_r>
 8008aa6:	4606      	mov	r6, r0
 8008aa8:	2800      	cmp	r0, #0
 8008aaa:	d1e1      	bne.n	8008a70 <__ssputs_r+0x70>
 8008aac:	6921      	ldr	r1, [r4, #16]
 8008aae:	4650      	mov	r0, sl
 8008ab0:	f7ff fec6 	bl	8008840 <_free_r>
 8008ab4:	e7c7      	b.n	8008a46 <__ssputs_r+0x46>
	...

08008ab8 <_svfiprintf_r>:
 8008ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008abc:	4698      	mov	r8, r3
 8008abe:	898b      	ldrh	r3, [r1, #12]
 8008ac0:	061b      	lsls	r3, r3, #24
 8008ac2:	b09d      	sub	sp, #116	; 0x74
 8008ac4:	4607      	mov	r7, r0
 8008ac6:	460d      	mov	r5, r1
 8008ac8:	4614      	mov	r4, r2
 8008aca:	d50e      	bpl.n	8008aea <_svfiprintf_r+0x32>
 8008acc:	690b      	ldr	r3, [r1, #16]
 8008ace:	b963      	cbnz	r3, 8008aea <_svfiprintf_r+0x32>
 8008ad0:	2140      	movs	r1, #64	; 0x40
 8008ad2:	f7ff ff21 	bl	8008918 <_malloc_r>
 8008ad6:	6028      	str	r0, [r5, #0]
 8008ad8:	6128      	str	r0, [r5, #16]
 8008ada:	b920      	cbnz	r0, 8008ae6 <_svfiprintf_r+0x2e>
 8008adc:	230c      	movs	r3, #12
 8008ade:	603b      	str	r3, [r7, #0]
 8008ae0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008ae4:	e0d1      	b.n	8008c8a <_svfiprintf_r+0x1d2>
 8008ae6:	2340      	movs	r3, #64	; 0x40
 8008ae8:	616b      	str	r3, [r5, #20]
 8008aea:	2300      	movs	r3, #0
 8008aec:	9309      	str	r3, [sp, #36]	; 0x24
 8008aee:	2320      	movs	r3, #32
 8008af0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8008af4:	f8cd 800c 	str.w	r8, [sp, #12]
 8008af8:	2330      	movs	r3, #48	; 0x30
 8008afa:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8008ca4 <_svfiprintf_r+0x1ec>
 8008afe:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8008b02:	f04f 0901 	mov.w	r9, #1
 8008b06:	4623      	mov	r3, r4
 8008b08:	469a      	mov	sl, r3
 8008b0a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008b0e:	b10a      	cbz	r2, 8008b14 <_svfiprintf_r+0x5c>
 8008b10:	2a25      	cmp	r2, #37	; 0x25
 8008b12:	d1f9      	bne.n	8008b08 <_svfiprintf_r+0x50>
 8008b14:	ebba 0b04 	subs.w	fp, sl, r4
 8008b18:	d00b      	beq.n	8008b32 <_svfiprintf_r+0x7a>
 8008b1a:	465b      	mov	r3, fp
 8008b1c:	4622      	mov	r2, r4
 8008b1e:	4629      	mov	r1, r5
 8008b20:	4638      	mov	r0, r7
 8008b22:	f7ff ff6d 	bl	8008a00 <__ssputs_r>
 8008b26:	3001      	adds	r0, #1
 8008b28:	f000 80aa 	beq.w	8008c80 <_svfiprintf_r+0x1c8>
 8008b2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008b2e:	445a      	add	r2, fp
 8008b30:	9209      	str	r2, [sp, #36]	; 0x24
 8008b32:	f89a 3000 	ldrb.w	r3, [sl]
 8008b36:	2b00      	cmp	r3, #0
 8008b38:	f000 80a2 	beq.w	8008c80 <_svfiprintf_r+0x1c8>
 8008b3c:	2300      	movs	r3, #0
 8008b3e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8008b42:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008b46:	f10a 0a01 	add.w	sl, sl, #1
 8008b4a:	9304      	str	r3, [sp, #16]
 8008b4c:	9307      	str	r3, [sp, #28]
 8008b4e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8008b52:	931a      	str	r3, [sp, #104]	; 0x68
 8008b54:	4654      	mov	r4, sl
 8008b56:	2205      	movs	r2, #5
 8008b58:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008b5c:	4851      	ldr	r0, [pc, #324]	; (8008ca4 <_svfiprintf_r+0x1ec>)
 8008b5e:	f7f7 fb77 	bl	8000250 <memchr>
 8008b62:	9a04      	ldr	r2, [sp, #16]
 8008b64:	b9d8      	cbnz	r0, 8008b9e <_svfiprintf_r+0xe6>
 8008b66:	06d0      	lsls	r0, r2, #27
 8008b68:	bf44      	itt	mi
 8008b6a:	2320      	movmi	r3, #32
 8008b6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008b70:	0711      	lsls	r1, r2, #28
 8008b72:	bf44      	itt	mi
 8008b74:	232b      	movmi	r3, #43	; 0x2b
 8008b76:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008b7a:	f89a 3000 	ldrb.w	r3, [sl]
 8008b7e:	2b2a      	cmp	r3, #42	; 0x2a
 8008b80:	d015      	beq.n	8008bae <_svfiprintf_r+0xf6>
 8008b82:	9a07      	ldr	r2, [sp, #28]
 8008b84:	4654      	mov	r4, sl
 8008b86:	2000      	movs	r0, #0
 8008b88:	f04f 0c0a 	mov.w	ip, #10
 8008b8c:	4621      	mov	r1, r4
 8008b8e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008b92:	3b30      	subs	r3, #48	; 0x30
 8008b94:	2b09      	cmp	r3, #9
 8008b96:	d94e      	bls.n	8008c36 <_svfiprintf_r+0x17e>
 8008b98:	b1b0      	cbz	r0, 8008bc8 <_svfiprintf_r+0x110>
 8008b9a:	9207      	str	r2, [sp, #28]
 8008b9c:	e014      	b.n	8008bc8 <_svfiprintf_r+0x110>
 8008b9e:	eba0 0308 	sub.w	r3, r0, r8
 8008ba2:	fa09 f303 	lsl.w	r3, r9, r3
 8008ba6:	4313      	orrs	r3, r2
 8008ba8:	9304      	str	r3, [sp, #16]
 8008baa:	46a2      	mov	sl, r4
 8008bac:	e7d2      	b.n	8008b54 <_svfiprintf_r+0x9c>
 8008bae:	9b03      	ldr	r3, [sp, #12]
 8008bb0:	1d19      	adds	r1, r3, #4
 8008bb2:	681b      	ldr	r3, [r3, #0]
 8008bb4:	9103      	str	r1, [sp, #12]
 8008bb6:	2b00      	cmp	r3, #0
 8008bb8:	bfbb      	ittet	lt
 8008bba:	425b      	neglt	r3, r3
 8008bbc:	f042 0202 	orrlt.w	r2, r2, #2
 8008bc0:	9307      	strge	r3, [sp, #28]
 8008bc2:	9307      	strlt	r3, [sp, #28]
 8008bc4:	bfb8      	it	lt
 8008bc6:	9204      	strlt	r2, [sp, #16]
 8008bc8:	7823      	ldrb	r3, [r4, #0]
 8008bca:	2b2e      	cmp	r3, #46	; 0x2e
 8008bcc:	d10c      	bne.n	8008be8 <_svfiprintf_r+0x130>
 8008bce:	7863      	ldrb	r3, [r4, #1]
 8008bd0:	2b2a      	cmp	r3, #42	; 0x2a
 8008bd2:	d135      	bne.n	8008c40 <_svfiprintf_r+0x188>
 8008bd4:	9b03      	ldr	r3, [sp, #12]
 8008bd6:	1d1a      	adds	r2, r3, #4
 8008bd8:	681b      	ldr	r3, [r3, #0]
 8008bda:	9203      	str	r2, [sp, #12]
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	bfb8      	it	lt
 8008be0:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8008be4:	3402      	adds	r4, #2
 8008be6:	9305      	str	r3, [sp, #20]
 8008be8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8008cb4 <_svfiprintf_r+0x1fc>
 8008bec:	7821      	ldrb	r1, [r4, #0]
 8008bee:	2203      	movs	r2, #3
 8008bf0:	4650      	mov	r0, sl
 8008bf2:	f7f7 fb2d 	bl	8000250 <memchr>
 8008bf6:	b140      	cbz	r0, 8008c0a <_svfiprintf_r+0x152>
 8008bf8:	2340      	movs	r3, #64	; 0x40
 8008bfa:	eba0 000a 	sub.w	r0, r0, sl
 8008bfe:	fa03 f000 	lsl.w	r0, r3, r0
 8008c02:	9b04      	ldr	r3, [sp, #16]
 8008c04:	4303      	orrs	r3, r0
 8008c06:	3401      	adds	r4, #1
 8008c08:	9304      	str	r3, [sp, #16]
 8008c0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008c0e:	4826      	ldr	r0, [pc, #152]	; (8008ca8 <_svfiprintf_r+0x1f0>)
 8008c10:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8008c14:	2206      	movs	r2, #6
 8008c16:	f7f7 fb1b 	bl	8000250 <memchr>
 8008c1a:	2800      	cmp	r0, #0
 8008c1c:	d038      	beq.n	8008c90 <_svfiprintf_r+0x1d8>
 8008c1e:	4b23      	ldr	r3, [pc, #140]	; (8008cac <_svfiprintf_r+0x1f4>)
 8008c20:	bb1b      	cbnz	r3, 8008c6a <_svfiprintf_r+0x1b2>
 8008c22:	9b03      	ldr	r3, [sp, #12]
 8008c24:	3307      	adds	r3, #7
 8008c26:	f023 0307 	bic.w	r3, r3, #7
 8008c2a:	3308      	adds	r3, #8
 8008c2c:	9303      	str	r3, [sp, #12]
 8008c2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c30:	4433      	add	r3, r6
 8008c32:	9309      	str	r3, [sp, #36]	; 0x24
 8008c34:	e767      	b.n	8008b06 <_svfiprintf_r+0x4e>
 8008c36:	fb0c 3202 	mla	r2, ip, r2, r3
 8008c3a:	460c      	mov	r4, r1
 8008c3c:	2001      	movs	r0, #1
 8008c3e:	e7a5      	b.n	8008b8c <_svfiprintf_r+0xd4>
 8008c40:	2300      	movs	r3, #0
 8008c42:	3401      	adds	r4, #1
 8008c44:	9305      	str	r3, [sp, #20]
 8008c46:	4619      	mov	r1, r3
 8008c48:	f04f 0c0a 	mov.w	ip, #10
 8008c4c:	4620      	mov	r0, r4
 8008c4e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008c52:	3a30      	subs	r2, #48	; 0x30
 8008c54:	2a09      	cmp	r2, #9
 8008c56:	d903      	bls.n	8008c60 <_svfiprintf_r+0x1a8>
 8008c58:	2b00      	cmp	r3, #0
 8008c5a:	d0c5      	beq.n	8008be8 <_svfiprintf_r+0x130>
 8008c5c:	9105      	str	r1, [sp, #20]
 8008c5e:	e7c3      	b.n	8008be8 <_svfiprintf_r+0x130>
 8008c60:	fb0c 2101 	mla	r1, ip, r1, r2
 8008c64:	4604      	mov	r4, r0
 8008c66:	2301      	movs	r3, #1
 8008c68:	e7f0      	b.n	8008c4c <_svfiprintf_r+0x194>
 8008c6a:	ab03      	add	r3, sp, #12
 8008c6c:	9300      	str	r3, [sp, #0]
 8008c6e:	462a      	mov	r2, r5
 8008c70:	4b0f      	ldr	r3, [pc, #60]	; (8008cb0 <_svfiprintf_r+0x1f8>)
 8008c72:	a904      	add	r1, sp, #16
 8008c74:	4638      	mov	r0, r7
 8008c76:	f3af 8000 	nop.w
 8008c7a:	1c42      	adds	r2, r0, #1
 8008c7c:	4606      	mov	r6, r0
 8008c7e:	d1d6      	bne.n	8008c2e <_svfiprintf_r+0x176>
 8008c80:	89ab      	ldrh	r3, [r5, #12]
 8008c82:	065b      	lsls	r3, r3, #25
 8008c84:	f53f af2c 	bmi.w	8008ae0 <_svfiprintf_r+0x28>
 8008c88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008c8a:	b01d      	add	sp, #116	; 0x74
 8008c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c90:	ab03      	add	r3, sp, #12
 8008c92:	9300      	str	r3, [sp, #0]
 8008c94:	462a      	mov	r2, r5
 8008c96:	4b06      	ldr	r3, [pc, #24]	; (8008cb0 <_svfiprintf_r+0x1f8>)
 8008c98:	a904      	add	r1, sp, #16
 8008c9a:	4638      	mov	r0, r7
 8008c9c:	f000 f9d4 	bl	8009048 <_printf_i>
 8008ca0:	e7eb      	b.n	8008c7a <_svfiprintf_r+0x1c2>
 8008ca2:	bf00      	nop
 8008ca4:	08009dc5 	.word	0x08009dc5
 8008ca8:	08009dcf 	.word	0x08009dcf
 8008cac:	00000000 	.word	0x00000000
 8008cb0:	08008a01 	.word	0x08008a01
 8008cb4:	08009dcb 	.word	0x08009dcb

08008cb8 <__sfputc_r>:
 8008cb8:	6893      	ldr	r3, [r2, #8]
 8008cba:	3b01      	subs	r3, #1
 8008cbc:	2b00      	cmp	r3, #0
 8008cbe:	b410      	push	{r4}
 8008cc0:	6093      	str	r3, [r2, #8]
 8008cc2:	da08      	bge.n	8008cd6 <__sfputc_r+0x1e>
 8008cc4:	6994      	ldr	r4, [r2, #24]
 8008cc6:	42a3      	cmp	r3, r4
 8008cc8:	db01      	blt.n	8008cce <__sfputc_r+0x16>
 8008cca:	290a      	cmp	r1, #10
 8008ccc:	d103      	bne.n	8008cd6 <__sfputc_r+0x1e>
 8008cce:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008cd2:	f000 baef 	b.w	80092b4 <__swbuf_r>
 8008cd6:	6813      	ldr	r3, [r2, #0]
 8008cd8:	1c58      	adds	r0, r3, #1
 8008cda:	6010      	str	r0, [r2, #0]
 8008cdc:	7019      	strb	r1, [r3, #0]
 8008cde:	4608      	mov	r0, r1
 8008ce0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008ce4:	4770      	bx	lr

08008ce6 <__sfputs_r>:
 8008ce6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ce8:	4606      	mov	r6, r0
 8008cea:	460f      	mov	r7, r1
 8008cec:	4614      	mov	r4, r2
 8008cee:	18d5      	adds	r5, r2, r3
 8008cf0:	42ac      	cmp	r4, r5
 8008cf2:	d101      	bne.n	8008cf8 <__sfputs_r+0x12>
 8008cf4:	2000      	movs	r0, #0
 8008cf6:	e007      	b.n	8008d08 <__sfputs_r+0x22>
 8008cf8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008cfc:	463a      	mov	r2, r7
 8008cfe:	4630      	mov	r0, r6
 8008d00:	f7ff ffda 	bl	8008cb8 <__sfputc_r>
 8008d04:	1c43      	adds	r3, r0, #1
 8008d06:	d1f3      	bne.n	8008cf0 <__sfputs_r+0xa>
 8008d08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008d0c <_vfiprintf_r>:
 8008d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d10:	460d      	mov	r5, r1
 8008d12:	b09d      	sub	sp, #116	; 0x74
 8008d14:	4614      	mov	r4, r2
 8008d16:	4698      	mov	r8, r3
 8008d18:	4606      	mov	r6, r0
 8008d1a:	b118      	cbz	r0, 8008d24 <_vfiprintf_r+0x18>
 8008d1c:	6983      	ldr	r3, [r0, #24]
 8008d1e:	b90b      	cbnz	r3, 8008d24 <_vfiprintf_r+0x18>
 8008d20:	f000 fcaa 	bl	8009678 <__sinit>
 8008d24:	4b89      	ldr	r3, [pc, #548]	; (8008f4c <_vfiprintf_r+0x240>)
 8008d26:	429d      	cmp	r5, r3
 8008d28:	d11b      	bne.n	8008d62 <_vfiprintf_r+0x56>
 8008d2a:	6875      	ldr	r5, [r6, #4]
 8008d2c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008d2e:	07d9      	lsls	r1, r3, #31
 8008d30:	d405      	bmi.n	8008d3e <_vfiprintf_r+0x32>
 8008d32:	89ab      	ldrh	r3, [r5, #12]
 8008d34:	059a      	lsls	r2, r3, #22
 8008d36:	d402      	bmi.n	8008d3e <_vfiprintf_r+0x32>
 8008d38:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8008d3a:	f000 fd3b 	bl	80097b4 <__retarget_lock_acquire_recursive>
 8008d3e:	89ab      	ldrh	r3, [r5, #12]
 8008d40:	071b      	lsls	r3, r3, #28
 8008d42:	d501      	bpl.n	8008d48 <_vfiprintf_r+0x3c>
 8008d44:	692b      	ldr	r3, [r5, #16]
 8008d46:	b9eb      	cbnz	r3, 8008d84 <_vfiprintf_r+0x78>
 8008d48:	4629      	mov	r1, r5
 8008d4a:	4630      	mov	r0, r6
 8008d4c:	f000 fb04 	bl	8009358 <__swsetup_r>
 8008d50:	b1c0      	cbz	r0, 8008d84 <_vfiprintf_r+0x78>
 8008d52:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008d54:	07dc      	lsls	r4, r3, #31
 8008d56:	d50e      	bpl.n	8008d76 <_vfiprintf_r+0x6a>
 8008d58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8008d5c:	b01d      	add	sp, #116	; 0x74
 8008d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008d62:	4b7b      	ldr	r3, [pc, #492]	; (8008f50 <_vfiprintf_r+0x244>)
 8008d64:	429d      	cmp	r5, r3
 8008d66:	d101      	bne.n	8008d6c <_vfiprintf_r+0x60>
 8008d68:	68b5      	ldr	r5, [r6, #8]
 8008d6a:	e7df      	b.n	8008d2c <_vfiprintf_r+0x20>
 8008d6c:	4b79      	ldr	r3, [pc, #484]	; (8008f54 <_vfiprintf_r+0x248>)
 8008d6e:	429d      	cmp	r5, r3
 8008d70:	bf08      	it	eq
 8008d72:	68f5      	ldreq	r5, [r6, #12]
 8008d74:	e7da      	b.n	8008d2c <_vfiprintf_r+0x20>
 8008d76:	89ab      	ldrh	r3, [r5, #12]
 8008d78:	0598      	lsls	r0, r3, #22
 8008d7a:	d4ed      	bmi.n	8008d58 <_vfiprintf_r+0x4c>
 8008d7c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8008d7e:	f000 fd1a 	bl	80097b6 <__retarget_lock_release_recursive>
 8008d82:	e7e9      	b.n	8008d58 <_vfiprintf_r+0x4c>
 8008d84:	2300      	movs	r3, #0
 8008d86:	9309      	str	r3, [sp, #36]	; 0x24
 8008d88:	2320      	movs	r3, #32
 8008d8a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8008d8e:	f8cd 800c 	str.w	r8, [sp, #12]
 8008d92:	2330      	movs	r3, #48	; 0x30
 8008d94:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8008f58 <_vfiprintf_r+0x24c>
 8008d98:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8008d9c:	f04f 0901 	mov.w	r9, #1
 8008da0:	4623      	mov	r3, r4
 8008da2:	469a      	mov	sl, r3
 8008da4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008da8:	b10a      	cbz	r2, 8008dae <_vfiprintf_r+0xa2>
 8008daa:	2a25      	cmp	r2, #37	; 0x25
 8008dac:	d1f9      	bne.n	8008da2 <_vfiprintf_r+0x96>
 8008dae:	ebba 0b04 	subs.w	fp, sl, r4
 8008db2:	d00b      	beq.n	8008dcc <_vfiprintf_r+0xc0>
 8008db4:	465b      	mov	r3, fp
 8008db6:	4622      	mov	r2, r4
 8008db8:	4629      	mov	r1, r5
 8008dba:	4630      	mov	r0, r6
 8008dbc:	f7ff ff93 	bl	8008ce6 <__sfputs_r>
 8008dc0:	3001      	adds	r0, #1
 8008dc2:	f000 80aa 	beq.w	8008f1a <_vfiprintf_r+0x20e>
 8008dc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008dc8:	445a      	add	r2, fp
 8008dca:	9209      	str	r2, [sp, #36]	; 0x24
 8008dcc:	f89a 3000 	ldrb.w	r3, [sl]
 8008dd0:	2b00      	cmp	r3, #0
 8008dd2:	f000 80a2 	beq.w	8008f1a <_vfiprintf_r+0x20e>
 8008dd6:	2300      	movs	r3, #0
 8008dd8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8008ddc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008de0:	f10a 0a01 	add.w	sl, sl, #1
 8008de4:	9304      	str	r3, [sp, #16]
 8008de6:	9307      	str	r3, [sp, #28]
 8008de8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8008dec:	931a      	str	r3, [sp, #104]	; 0x68
 8008dee:	4654      	mov	r4, sl
 8008df0:	2205      	movs	r2, #5
 8008df2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008df6:	4858      	ldr	r0, [pc, #352]	; (8008f58 <_vfiprintf_r+0x24c>)
 8008df8:	f7f7 fa2a 	bl	8000250 <memchr>
 8008dfc:	9a04      	ldr	r2, [sp, #16]
 8008dfe:	b9d8      	cbnz	r0, 8008e38 <_vfiprintf_r+0x12c>
 8008e00:	06d1      	lsls	r1, r2, #27
 8008e02:	bf44      	itt	mi
 8008e04:	2320      	movmi	r3, #32
 8008e06:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008e0a:	0713      	lsls	r3, r2, #28
 8008e0c:	bf44      	itt	mi
 8008e0e:	232b      	movmi	r3, #43	; 0x2b
 8008e10:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8008e14:	f89a 3000 	ldrb.w	r3, [sl]
 8008e18:	2b2a      	cmp	r3, #42	; 0x2a
 8008e1a:	d015      	beq.n	8008e48 <_vfiprintf_r+0x13c>
 8008e1c:	9a07      	ldr	r2, [sp, #28]
 8008e1e:	4654      	mov	r4, sl
 8008e20:	2000      	movs	r0, #0
 8008e22:	f04f 0c0a 	mov.w	ip, #10
 8008e26:	4621      	mov	r1, r4
 8008e28:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008e2c:	3b30      	subs	r3, #48	; 0x30
 8008e2e:	2b09      	cmp	r3, #9
 8008e30:	d94e      	bls.n	8008ed0 <_vfiprintf_r+0x1c4>
 8008e32:	b1b0      	cbz	r0, 8008e62 <_vfiprintf_r+0x156>
 8008e34:	9207      	str	r2, [sp, #28]
 8008e36:	e014      	b.n	8008e62 <_vfiprintf_r+0x156>
 8008e38:	eba0 0308 	sub.w	r3, r0, r8
 8008e3c:	fa09 f303 	lsl.w	r3, r9, r3
 8008e40:	4313      	orrs	r3, r2
 8008e42:	9304      	str	r3, [sp, #16]
 8008e44:	46a2      	mov	sl, r4
 8008e46:	e7d2      	b.n	8008dee <_vfiprintf_r+0xe2>
 8008e48:	9b03      	ldr	r3, [sp, #12]
 8008e4a:	1d19      	adds	r1, r3, #4
 8008e4c:	681b      	ldr	r3, [r3, #0]
 8008e4e:	9103      	str	r1, [sp, #12]
 8008e50:	2b00      	cmp	r3, #0
 8008e52:	bfbb      	ittet	lt
 8008e54:	425b      	neglt	r3, r3
 8008e56:	f042 0202 	orrlt.w	r2, r2, #2
 8008e5a:	9307      	strge	r3, [sp, #28]
 8008e5c:	9307      	strlt	r3, [sp, #28]
 8008e5e:	bfb8      	it	lt
 8008e60:	9204      	strlt	r2, [sp, #16]
 8008e62:	7823      	ldrb	r3, [r4, #0]
 8008e64:	2b2e      	cmp	r3, #46	; 0x2e
 8008e66:	d10c      	bne.n	8008e82 <_vfiprintf_r+0x176>
 8008e68:	7863      	ldrb	r3, [r4, #1]
 8008e6a:	2b2a      	cmp	r3, #42	; 0x2a
 8008e6c:	d135      	bne.n	8008eda <_vfiprintf_r+0x1ce>
 8008e6e:	9b03      	ldr	r3, [sp, #12]
 8008e70:	1d1a      	adds	r2, r3, #4
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	9203      	str	r2, [sp, #12]
 8008e76:	2b00      	cmp	r3, #0
 8008e78:	bfb8      	it	lt
 8008e7a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8008e7e:	3402      	adds	r4, #2
 8008e80:	9305      	str	r3, [sp, #20]
 8008e82:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8008f68 <_vfiprintf_r+0x25c>
 8008e86:	7821      	ldrb	r1, [r4, #0]
 8008e88:	2203      	movs	r2, #3
 8008e8a:	4650      	mov	r0, sl
 8008e8c:	f7f7 f9e0 	bl	8000250 <memchr>
 8008e90:	b140      	cbz	r0, 8008ea4 <_vfiprintf_r+0x198>
 8008e92:	2340      	movs	r3, #64	; 0x40
 8008e94:	eba0 000a 	sub.w	r0, r0, sl
 8008e98:	fa03 f000 	lsl.w	r0, r3, r0
 8008e9c:	9b04      	ldr	r3, [sp, #16]
 8008e9e:	4303      	orrs	r3, r0
 8008ea0:	3401      	adds	r4, #1
 8008ea2:	9304      	str	r3, [sp, #16]
 8008ea4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008ea8:	482c      	ldr	r0, [pc, #176]	; (8008f5c <_vfiprintf_r+0x250>)
 8008eaa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8008eae:	2206      	movs	r2, #6
 8008eb0:	f7f7 f9ce 	bl	8000250 <memchr>
 8008eb4:	2800      	cmp	r0, #0
 8008eb6:	d03f      	beq.n	8008f38 <_vfiprintf_r+0x22c>
 8008eb8:	4b29      	ldr	r3, [pc, #164]	; (8008f60 <_vfiprintf_r+0x254>)
 8008eba:	bb1b      	cbnz	r3, 8008f04 <_vfiprintf_r+0x1f8>
 8008ebc:	9b03      	ldr	r3, [sp, #12]
 8008ebe:	3307      	adds	r3, #7
 8008ec0:	f023 0307 	bic.w	r3, r3, #7
 8008ec4:	3308      	adds	r3, #8
 8008ec6:	9303      	str	r3, [sp, #12]
 8008ec8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008eca:	443b      	add	r3, r7
 8008ecc:	9309      	str	r3, [sp, #36]	; 0x24
 8008ece:	e767      	b.n	8008da0 <_vfiprintf_r+0x94>
 8008ed0:	fb0c 3202 	mla	r2, ip, r2, r3
 8008ed4:	460c      	mov	r4, r1
 8008ed6:	2001      	movs	r0, #1
 8008ed8:	e7a5      	b.n	8008e26 <_vfiprintf_r+0x11a>
 8008eda:	2300      	movs	r3, #0
 8008edc:	3401      	adds	r4, #1
 8008ede:	9305      	str	r3, [sp, #20]
 8008ee0:	4619      	mov	r1, r3
 8008ee2:	f04f 0c0a 	mov.w	ip, #10
 8008ee6:	4620      	mov	r0, r4
 8008ee8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008eec:	3a30      	subs	r2, #48	; 0x30
 8008eee:	2a09      	cmp	r2, #9
 8008ef0:	d903      	bls.n	8008efa <_vfiprintf_r+0x1ee>
 8008ef2:	2b00      	cmp	r3, #0
 8008ef4:	d0c5      	beq.n	8008e82 <_vfiprintf_r+0x176>
 8008ef6:	9105      	str	r1, [sp, #20]
 8008ef8:	e7c3      	b.n	8008e82 <_vfiprintf_r+0x176>
 8008efa:	fb0c 2101 	mla	r1, ip, r1, r2
 8008efe:	4604      	mov	r4, r0
 8008f00:	2301      	movs	r3, #1
 8008f02:	e7f0      	b.n	8008ee6 <_vfiprintf_r+0x1da>
 8008f04:	ab03      	add	r3, sp, #12
 8008f06:	9300      	str	r3, [sp, #0]
 8008f08:	462a      	mov	r2, r5
 8008f0a:	4b16      	ldr	r3, [pc, #88]	; (8008f64 <_vfiprintf_r+0x258>)
 8008f0c:	a904      	add	r1, sp, #16
 8008f0e:	4630      	mov	r0, r6
 8008f10:	f3af 8000 	nop.w
 8008f14:	4607      	mov	r7, r0
 8008f16:	1c78      	adds	r0, r7, #1
 8008f18:	d1d6      	bne.n	8008ec8 <_vfiprintf_r+0x1bc>
 8008f1a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008f1c:	07d9      	lsls	r1, r3, #31
 8008f1e:	d405      	bmi.n	8008f2c <_vfiprintf_r+0x220>
 8008f20:	89ab      	ldrh	r3, [r5, #12]
 8008f22:	059a      	lsls	r2, r3, #22
 8008f24:	d402      	bmi.n	8008f2c <_vfiprintf_r+0x220>
 8008f26:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8008f28:	f000 fc45 	bl	80097b6 <__retarget_lock_release_recursive>
 8008f2c:	89ab      	ldrh	r3, [r5, #12]
 8008f2e:	065b      	lsls	r3, r3, #25
 8008f30:	f53f af12 	bmi.w	8008d58 <_vfiprintf_r+0x4c>
 8008f34:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008f36:	e711      	b.n	8008d5c <_vfiprintf_r+0x50>
 8008f38:	ab03      	add	r3, sp, #12
 8008f3a:	9300      	str	r3, [sp, #0]
 8008f3c:	462a      	mov	r2, r5
 8008f3e:	4b09      	ldr	r3, [pc, #36]	; (8008f64 <_vfiprintf_r+0x258>)
 8008f40:	a904      	add	r1, sp, #16
 8008f42:	4630      	mov	r0, r6
 8008f44:	f000 f880 	bl	8009048 <_printf_i>
 8008f48:	e7e4      	b.n	8008f14 <_vfiprintf_r+0x208>
 8008f4a:	bf00      	nop
 8008f4c:	08009e18 	.word	0x08009e18
 8008f50:	08009e38 	.word	0x08009e38
 8008f54:	08009df8 	.word	0x08009df8
 8008f58:	08009dc5 	.word	0x08009dc5
 8008f5c:	08009dcf 	.word	0x08009dcf
 8008f60:	00000000 	.word	0x00000000
 8008f64:	08008ce7 	.word	0x08008ce7
 8008f68:	08009dcb 	.word	0x08009dcb

08008f6c <_printf_common>:
 8008f6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008f70:	4616      	mov	r6, r2
 8008f72:	4699      	mov	r9, r3
 8008f74:	688a      	ldr	r2, [r1, #8]
 8008f76:	690b      	ldr	r3, [r1, #16]
 8008f78:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8008f7c:	4293      	cmp	r3, r2
 8008f7e:	bfb8      	it	lt
 8008f80:	4613      	movlt	r3, r2
 8008f82:	6033      	str	r3, [r6, #0]
 8008f84:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8008f88:	4607      	mov	r7, r0
 8008f8a:	460c      	mov	r4, r1
 8008f8c:	b10a      	cbz	r2, 8008f92 <_printf_common+0x26>
 8008f8e:	3301      	adds	r3, #1
 8008f90:	6033      	str	r3, [r6, #0]
 8008f92:	6823      	ldr	r3, [r4, #0]
 8008f94:	0699      	lsls	r1, r3, #26
 8008f96:	bf42      	ittt	mi
 8008f98:	6833      	ldrmi	r3, [r6, #0]
 8008f9a:	3302      	addmi	r3, #2
 8008f9c:	6033      	strmi	r3, [r6, #0]
 8008f9e:	6825      	ldr	r5, [r4, #0]
 8008fa0:	f015 0506 	ands.w	r5, r5, #6
 8008fa4:	d106      	bne.n	8008fb4 <_printf_common+0x48>
 8008fa6:	f104 0a19 	add.w	sl, r4, #25
 8008faa:	68e3      	ldr	r3, [r4, #12]
 8008fac:	6832      	ldr	r2, [r6, #0]
 8008fae:	1a9b      	subs	r3, r3, r2
 8008fb0:	42ab      	cmp	r3, r5
 8008fb2:	dc26      	bgt.n	8009002 <_printf_common+0x96>
 8008fb4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8008fb8:	1e13      	subs	r3, r2, #0
 8008fba:	6822      	ldr	r2, [r4, #0]
 8008fbc:	bf18      	it	ne
 8008fbe:	2301      	movne	r3, #1
 8008fc0:	0692      	lsls	r2, r2, #26
 8008fc2:	d42b      	bmi.n	800901c <_printf_common+0xb0>
 8008fc4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8008fc8:	4649      	mov	r1, r9
 8008fca:	4638      	mov	r0, r7
 8008fcc:	47c0      	blx	r8
 8008fce:	3001      	adds	r0, #1
 8008fd0:	d01e      	beq.n	8009010 <_printf_common+0xa4>
 8008fd2:	6823      	ldr	r3, [r4, #0]
 8008fd4:	68e5      	ldr	r5, [r4, #12]
 8008fd6:	6832      	ldr	r2, [r6, #0]
 8008fd8:	f003 0306 	and.w	r3, r3, #6
 8008fdc:	2b04      	cmp	r3, #4
 8008fde:	bf08      	it	eq
 8008fe0:	1aad      	subeq	r5, r5, r2
 8008fe2:	68a3      	ldr	r3, [r4, #8]
 8008fe4:	6922      	ldr	r2, [r4, #16]
 8008fe6:	bf0c      	ite	eq
 8008fe8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8008fec:	2500      	movne	r5, #0
 8008fee:	4293      	cmp	r3, r2
 8008ff0:	bfc4      	itt	gt
 8008ff2:	1a9b      	subgt	r3, r3, r2
 8008ff4:	18ed      	addgt	r5, r5, r3
 8008ff6:	2600      	movs	r6, #0
 8008ff8:	341a      	adds	r4, #26
 8008ffa:	42b5      	cmp	r5, r6
 8008ffc:	d11a      	bne.n	8009034 <_printf_common+0xc8>
 8008ffe:	2000      	movs	r0, #0
 8009000:	e008      	b.n	8009014 <_printf_common+0xa8>
 8009002:	2301      	movs	r3, #1
 8009004:	4652      	mov	r2, sl
 8009006:	4649      	mov	r1, r9
 8009008:	4638      	mov	r0, r7
 800900a:	47c0      	blx	r8
 800900c:	3001      	adds	r0, #1
 800900e:	d103      	bne.n	8009018 <_printf_common+0xac>
 8009010:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009018:	3501      	adds	r5, #1
 800901a:	e7c6      	b.n	8008faa <_printf_common+0x3e>
 800901c:	18e1      	adds	r1, r4, r3
 800901e:	1c5a      	adds	r2, r3, #1
 8009020:	2030      	movs	r0, #48	; 0x30
 8009022:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8009026:	4422      	add	r2, r4
 8009028:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800902c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8009030:	3302      	adds	r3, #2
 8009032:	e7c7      	b.n	8008fc4 <_printf_common+0x58>
 8009034:	2301      	movs	r3, #1
 8009036:	4622      	mov	r2, r4
 8009038:	4649      	mov	r1, r9
 800903a:	4638      	mov	r0, r7
 800903c:	47c0      	blx	r8
 800903e:	3001      	adds	r0, #1
 8009040:	d0e6      	beq.n	8009010 <_printf_common+0xa4>
 8009042:	3601      	adds	r6, #1
 8009044:	e7d9      	b.n	8008ffa <_printf_common+0x8e>
	...

08009048 <_printf_i>:
 8009048:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800904c:	7e0f      	ldrb	r7, [r1, #24]
 800904e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8009050:	2f78      	cmp	r7, #120	; 0x78
 8009052:	4691      	mov	r9, r2
 8009054:	4680      	mov	r8, r0
 8009056:	460c      	mov	r4, r1
 8009058:	469a      	mov	sl, r3
 800905a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800905e:	d807      	bhi.n	8009070 <_printf_i+0x28>
 8009060:	2f62      	cmp	r7, #98	; 0x62
 8009062:	d80a      	bhi.n	800907a <_printf_i+0x32>
 8009064:	2f00      	cmp	r7, #0
 8009066:	f000 80d8 	beq.w	800921a <_printf_i+0x1d2>
 800906a:	2f58      	cmp	r7, #88	; 0x58
 800906c:	f000 80a3 	beq.w	80091b6 <_printf_i+0x16e>
 8009070:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009074:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8009078:	e03a      	b.n	80090f0 <_printf_i+0xa8>
 800907a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800907e:	2b15      	cmp	r3, #21
 8009080:	d8f6      	bhi.n	8009070 <_printf_i+0x28>
 8009082:	a101      	add	r1, pc, #4	; (adr r1, 8009088 <_printf_i+0x40>)
 8009084:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009088:	080090e1 	.word	0x080090e1
 800908c:	080090f5 	.word	0x080090f5
 8009090:	08009071 	.word	0x08009071
 8009094:	08009071 	.word	0x08009071
 8009098:	08009071 	.word	0x08009071
 800909c:	08009071 	.word	0x08009071
 80090a0:	080090f5 	.word	0x080090f5
 80090a4:	08009071 	.word	0x08009071
 80090a8:	08009071 	.word	0x08009071
 80090ac:	08009071 	.word	0x08009071
 80090b0:	08009071 	.word	0x08009071
 80090b4:	08009201 	.word	0x08009201
 80090b8:	08009125 	.word	0x08009125
 80090bc:	080091e3 	.word	0x080091e3
 80090c0:	08009071 	.word	0x08009071
 80090c4:	08009071 	.word	0x08009071
 80090c8:	08009223 	.word	0x08009223
 80090cc:	08009071 	.word	0x08009071
 80090d0:	08009125 	.word	0x08009125
 80090d4:	08009071 	.word	0x08009071
 80090d8:	08009071 	.word	0x08009071
 80090dc:	080091eb 	.word	0x080091eb
 80090e0:	682b      	ldr	r3, [r5, #0]
 80090e2:	1d1a      	adds	r2, r3, #4
 80090e4:	681b      	ldr	r3, [r3, #0]
 80090e6:	602a      	str	r2, [r5, #0]
 80090e8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80090ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80090f0:	2301      	movs	r3, #1
 80090f2:	e0a3      	b.n	800923c <_printf_i+0x1f4>
 80090f4:	6820      	ldr	r0, [r4, #0]
 80090f6:	6829      	ldr	r1, [r5, #0]
 80090f8:	0606      	lsls	r6, r0, #24
 80090fa:	f101 0304 	add.w	r3, r1, #4
 80090fe:	d50a      	bpl.n	8009116 <_printf_i+0xce>
 8009100:	680e      	ldr	r6, [r1, #0]
 8009102:	602b      	str	r3, [r5, #0]
 8009104:	2e00      	cmp	r6, #0
 8009106:	da03      	bge.n	8009110 <_printf_i+0xc8>
 8009108:	232d      	movs	r3, #45	; 0x2d
 800910a:	4276      	negs	r6, r6
 800910c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009110:	485e      	ldr	r0, [pc, #376]	; (800928c <_printf_i+0x244>)
 8009112:	230a      	movs	r3, #10
 8009114:	e019      	b.n	800914a <_printf_i+0x102>
 8009116:	680e      	ldr	r6, [r1, #0]
 8009118:	602b      	str	r3, [r5, #0]
 800911a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800911e:	bf18      	it	ne
 8009120:	b236      	sxthne	r6, r6
 8009122:	e7ef      	b.n	8009104 <_printf_i+0xbc>
 8009124:	682b      	ldr	r3, [r5, #0]
 8009126:	6820      	ldr	r0, [r4, #0]
 8009128:	1d19      	adds	r1, r3, #4
 800912a:	6029      	str	r1, [r5, #0]
 800912c:	0601      	lsls	r1, r0, #24
 800912e:	d501      	bpl.n	8009134 <_printf_i+0xec>
 8009130:	681e      	ldr	r6, [r3, #0]
 8009132:	e002      	b.n	800913a <_printf_i+0xf2>
 8009134:	0646      	lsls	r6, r0, #25
 8009136:	d5fb      	bpl.n	8009130 <_printf_i+0xe8>
 8009138:	881e      	ldrh	r6, [r3, #0]
 800913a:	4854      	ldr	r0, [pc, #336]	; (800928c <_printf_i+0x244>)
 800913c:	2f6f      	cmp	r7, #111	; 0x6f
 800913e:	bf0c      	ite	eq
 8009140:	2308      	moveq	r3, #8
 8009142:	230a      	movne	r3, #10
 8009144:	2100      	movs	r1, #0
 8009146:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800914a:	6865      	ldr	r5, [r4, #4]
 800914c:	60a5      	str	r5, [r4, #8]
 800914e:	2d00      	cmp	r5, #0
 8009150:	bfa2      	ittt	ge
 8009152:	6821      	ldrge	r1, [r4, #0]
 8009154:	f021 0104 	bicge.w	r1, r1, #4
 8009158:	6021      	strge	r1, [r4, #0]
 800915a:	b90e      	cbnz	r6, 8009160 <_printf_i+0x118>
 800915c:	2d00      	cmp	r5, #0
 800915e:	d04d      	beq.n	80091fc <_printf_i+0x1b4>
 8009160:	4615      	mov	r5, r2
 8009162:	fbb6 f1f3 	udiv	r1, r6, r3
 8009166:	fb03 6711 	mls	r7, r3, r1, r6
 800916a:	5dc7      	ldrb	r7, [r0, r7]
 800916c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8009170:	4637      	mov	r7, r6
 8009172:	42bb      	cmp	r3, r7
 8009174:	460e      	mov	r6, r1
 8009176:	d9f4      	bls.n	8009162 <_printf_i+0x11a>
 8009178:	2b08      	cmp	r3, #8
 800917a:	d10b      	bne.n	8009194 <_printf_i+0x14c>
 800917c:	6823      	ldr	r3, [r4, #0]
 800917e:	07de      	lsls	r6, r3, #31
 8009180:	d508      	bpl.n	8009194 <_printf_i+0x14c>
 8009182:	6923      	ldr	r3, [r4, #16]
 8009184:	6861      	ldr	r1, [r4, #4]
 8009186:	4299      	cmp	r1, r3
 8009188:	bfde      	ittt	le
 800918a:	2330      	movle	r3, #48	; 0x30
 800918c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8009190:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8009194:	1b52      	subs	r2, r2, r5
 8009196:	6122      	str	r2, [r4, #16]
 8009198:	f8cd a000 	str.w	sl, [sp]
 800919c:	464b      	mov	r3, r9
 800919e:	aa03      	add	r2, sp, #12
 80091a0:	4621      	mov	r1, r4
 80091a2:	4640      	mov	r0, r8
 80091a4:	f7ff fee2 	bl	8008f6c <_printf_common>
 80091a8:	3001      	adds	r0, #1
 80091aa:	d14c      	bne.n	8009246 <_printf_i+0x1fe>
 80091ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80091b0:	b004      	add	sp, #16
 80091b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80091b6:	4835      	ldr	r0, [pc, #212]	; (800928c <_printf_i+0x244>)
 80091b8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80091bc:	6829      	ldr	r1, [r5, #0]
 80091be:	6823      	ldr	r3, [r4, #0]
 80091c0:	f851 6b04 	ldr.w	r6, [r1], #4
 80091c4:	6029      	str	r1, [r5, #0]
 80091c6:	061d      	lsls	r5, r3, #24
 80091c8:	d514      	bpl.n	80091f4 <_printf_i+0x1ac>
 80091ca:	07df      	lsls	r7, r3, #31
 80091cc:	bf44      	itt	mi
 80091ce:	f043 0320 	orrmi.w	r3, r3, #32
 80091d2:	6023      	strmi	r3, [r4, #0]
 80091d4:	b91e      	cbnz	r6, 80091de <_printf_i+0x196>
 80091d6:	6823      	ldr	r3, [r4, #0]
 80091d8:	f023 0320 	bic.w	r3, r3, #32
 80091dc:	6023      	str	r3, [r4, #0]
 80091de:	2310      	movs	r3, #16
 80091e0:	e7b0      	b.n	8009144 <_printf_i+0xfc>
 80091e2:	6823      	ldr	r3, [r4, #0]
 80091e4:	f043 0320 	orr.w	r3, r3, #32
 80091e8:	6023      	str	r3, [r4, #0]
 80091ea:	2378      	movs	r3, #120	; 0x78
 80091ec:	4828      	ldr	r0, [pc, #160]	; (8009290 <_printf_i+0x248>)
 80091ee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80091f2:	e7e3      	b.n	80091bc <_printf_i+0x174>
 80091f4:	0659      	lsls	r1, r3, #25
 80091f6:	bf48      	it	mi
 80091f8:	b2b6      	uxthmi	r6, r6
 80091fa:	e7e6      	b.n	80091ca <_printf_i+0x182>
 80091fc:	4615      	mov	r5, r2
 80091fe:	e7bb      	b.n	8009178 <_printf_i+0x130>
 8009200:	682b      	ldr	r3, [r5, #0]
 8009202:	6826      	ldr	r6, [r4, #0]
 8009204:	6961      	ldr	r1, [r4, #20]
 8009206:	1d18      	adds	r0, r3, #4
 8009208:	6028      	str	r0, [r5, #0]
 800920a:	0635      	lsls	r5, r6, #24
 800920c:	681b      	ldr	r3, [r3, #0]
 800920e:	d501      	bpl.n	8009214 <_printf_i+0x1cc>
 8009210:	6019      	str	r1, [r3, #0]
 8009212:	e002      	b.n	800921a <_printf_i+0x1d2>
 8009214:	0670      	lsls	r0, r6, #25
 8009216:	d5fb      	bpl.n	8009210 <_printf_i+0x1c8>
 8009218:	8019      	strh	r1, [r3, #0]
 800921a:	2300      	movs	r3, #0
 800921c:	6123      	str	r3, [r4, #16]
 800921e:	4615      	mov	r5, r2
 8009220:	e7ba      	b.n	8009198 <_printf_i+0x150>
 8009222:	682b      	ldr	r3, [r5, #0]
 8009224:	1d1a      	adds	r2, r3, #4
 8009226:	602a      	str	r2, [r5, #0]
 8009228:	681d      	ldr	r5, [r3, #0]
 800922a:	6862      	ldr	r2, [r4, #4]
 800922c:	2100      	movs	r1, #0
 800922e:	4628      	mov	r0, r5
 8009230:	f7f7 f80e 	bl	8000250 <memchr>
 8009234:	b108      	cbz	r0, 800923a <_printf_i+0x1f2>
 8009236:	1b40      	subs	r0, r0, r5
 8009238:	6060      	str	r0, [r4, #4]
 800923a:	6863      	ldr	r3, [r4, #4]
 800923c:	6123      	str	r3, [r4, #16]
 800923e:	2300      	movs	r3, #0
 8009240:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009244:	e7a8      	b.n	8009198 <_printf_i+0x150>
 8009246:	6923      	ldr	r3, [r4, #16]
 8009248:	462a      	mov	r2, r5
 800924a:	4649      	mov	r1, r9
 800924c:	4640      	mov	r0, r8
 800924e:	47d0      	blx	sl
 8009250:	3001      	adds	r0, #1
 8009252:	d0ab      	beq.n	80091ac <_printf_i+0x164>
 8009254:	6823      	ldr	r3, [r4, #0]
 8009256:	079b      	lsls	r3, r3, #30
 8009258:	d413      	bmi.n	8009282 <_printf_i+0x23a>
 800925a:	68e0      	ldr	r0, [r4, #12]
 800925c:	9b03      	ldr	r3, [sp, #12]
 800925e:	4298      	cmp	r0, r3
 8009260:	bfb8      	it	lt
 8009262:	4618      	movlt	r0, r3
 8009264:	e7a4      	b.n	80091b0 <_printf_i+0x168>
 8009266:	2301      	movs	r3, #1
 8009268:	4632      	mov	r2, r6
 800926a:	4649      	mov	r1, r9
 800926c:	4640      	mov	r0, r8
 800926e:	47d0      	blx	sl
 8009270:	3001      	adds	r0, #1
 8009272:	d09b      	beq.n	80091ac <_printf_i+0x164>
 8009274:	3501      	adds	r5, #1
 8009276:	68e3      	ldr	r3, [r4, #12]
 8009278:	9903      	ldr	r1, [sp, #12]
 800927a:	1a5b      	subs	r3, r3, r1
 800927c:	42ab      	cmp	r3, r5
 800927e:	dcf2      	bgt.n	8009266 <_printf_i+0x21e>
 8009280:	e7eb      	b.n	800925a <_printf_i+0x212>
 8009282:	2500      	movs	r5, #0
 8009284:	f104 0619 	add.w	r6, r4, #25
 8009288:	e7f5      	b.n	8009276 <_printf_i+0x22e>
 800928a:	bf00      	nop
 800928c:	08009dd6 	.word	0x08009dd6
 8009290:	08009de7 	.word	0x08009de7

08009294 <_sbrk_r>:
 8009294:	b538      	push	{r3, r4, r5, lr}
 8009296:	4d06      	ldr	r5, [pc, #24]	; (80092b0 <_sbrk_r+0x1c>)
 8009298:	2300      	movs	r3, #0
 800929a:	4604      	mov	r4, r0
 800929c:	4608      	mov	r0, r1
 800929e:	602b      	str	r3, [r5, #0]
 80092a0:	f7f8 fb08 	bl	80018b4 <_sbrk>
 80092a4:	1c43      	adds	r3, r0, #1
 80092a6:	d102      	bne.n	80092ae <_sbrk_r+0x1a>
 80092a8:	682b      	ldr	r3, [r5, #0]
 80092aa:	b103      	cbz	r3, 80092ae <_sbrk_r+0x1a>
 80092ac:	6023      	str	r3, [r4, #0]
 80092ae:	bd38      	pop	{r3, r4, r5, pc}
 80092b0:	20000458 	.word	0x20000458

080092b4 <__swbuf_r>:
 80092b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80092b6:	460e      	mov	r6, r1
 80092b8:	4614      	mov	r4, r2
 80092ba:	4605      	mov	r5, r0
 80092bc:	b118      	cbz	r0, 80092c6 <__swbuf_r+0x12>
 80092be:	6983      	ldr	r3, [r0, #24]
 80092c0:	b90b      	cbnz	r3, 80092c6 <__swbuf_r+0x12>
 80092c2:	f000 f9d9 	bl	8009678 <__sinit>
 80092c6:	4b21      	ldr	r3, [pc, #132]	; (800934c <__swbuf_r+0x98>)
 80092c8:	429c      	cmp	r4, r3
 80092ca:	d12b      	bne.n	8009324 <__swbuf_r+0x70>
 80092cc:	686c      	ldr	r4, [r5, #4]
 80092ce:	69a3      	ldr	r3, [r4, #24]
 80092d0:	60a3      	str	r3, [r4, #8]
 80092d2:	89a3      	ldrh	r3, [r4, #12]
 80092d4:	071a      	lsls	r2, r3, #28
 80092d6:	d52f      	bpl.n	8009338 <__swbuf_r+0x84>
 80092d8:	6923      	ldr	r3, [r4, #16]
 80092da:	b36b      	cbz	r3, 8009338 <__swbuf_r+0x84>
 80092dc:	6923      	ldr	r3, [r4, #16]
 80092de:	6820      	ldr	r0, [r4, #0]
 80092e0:	1ac0      	subs	r0, r0, r3
 80092e2:	6963      	ldr	r3, [r4, #20]
 80092e4:	b2f6      	uxtb	r6, r6
 80092e6:	4283      	cmp	r3, r0
 80092e8:	4637      	mov	r7, r6
 80092ea:	dc04      	bgt.n	80092f6 <__swbuf_r+0x42>
 80092ec:	4621      	mov	r1, r4
 80092ee:	4628      	mov	r0, r5
 80092f0:	f000 f92e 	bl	8009550 <_fflush_r>
 80092f4:	bb30      	cbnz	r0, 8009344 <__swbuf_r+0x90>
 80092f6:	68a3      	ldr	r3, [r4, #8]
 80092f8:	3b01      	subs	r3, #1
 80092fa:	60a3      	str	r3, [r4, #8]
 80092fc:	6823      	ldr	r3, [r4, #0]
 80092fe:	1c5a      	adds	r2, r3, #1
 8009300:	6022      	str	r2, [r4, #0]
 8009302:	701e      	strb	r6, [r3, #0]
 8009304:	6963      	ldr	r3, [r4, #20]
 8009306:	3001      	adds	r0, #1
 8009308:	4283      	cmp	r3, r0
 800930a:	d004      	beq.n	8009316 <__swbuf_r+0x62>
 800930c:	89a3      	ldrh	r3, [r4, #12]
 800930e:	07db      	lsls	r3, r3, #31
 8009310:	d506      	bpl.n	8009320 <__swbuf_r+0x6c>
 8009312:	2e0a      	cmp	r6, #10
 8009314:	d104      	bne.n	8009320 <__swbuf_r+0x6c>
 8009316:	4621      	mov	r1, r4
 8009318:	4628      	mov	r0, r5
 800931a:	f000 f919 	bl	8009550 <_fflush_r>
 800931e:	b988      	cbnz	r0, 8009344 <__swbuf_r+0x90>
 8009320:	4638      	mov	r0, r7
 8009322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009324:	4b0a      	ldr	r3, [pc, #40]	; (8009350 <__swbuf_r+0x9c>)
 8009326:	429c      	cmp	r4, r3
 8009328:	d101      	bne.n	800932e <__swbuf_r+0x7a>
 800932a:	68ac      	ldr	r4, [r5, #8]
 800932c:	e7cf      	b.n	80092ce <__swbuf_r+0x1a>
 800932e:	4b09      	ldr	r3, [pc, #36]	; (8009354 <__swbuf_r+0xa0>)
 8009330:	429c      	cmp	r4, r3
 8009332:	bf08      	it	eq
 8009334:	68ec      	ldreq	r4, [r5, #12]
 8009336:	e7ca      	b.n	80092ce <__swbuf_r+0x1a>
 8009338:	4621      	mov	r1, r4
 800933a:	4628      	mov	r0, r5
 800933c:	f000 f80c 	bl	8009358 <__swsetup_r>
 8009340:	2800      	cmp	r0, #0
 8009342:	d0cb      	beq.n	80092dc <__swbuf_r+0x28>
 8009344:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8009348:	e7ea      	b.n	8009320 <__swbuf_r+0x6c>
 800934a:	bf00      	nop
 800934c:	08009e18 	.word	0x08009e18
 8009350:	08009e38 	.word	0x08009e38
 8009354:	08009df8 	.word	0x08009df8

08009358 <__swsetup_r>:
 8009358:	4b32      	ldr	r3, [pc, #200]	; (8009424 <__swsetup_r+0xcc>)
 800935a:	b570      	push	{r4, r5, r6, lr}
 800935c:	681d      	ldr	r5, [r3, #0]
 800935e:	4606      	mov	r6, r0
 8009360:	460c      	mov	r4, r1
 8009362:	b125      	cbz	r5, 800936e <__swsetup_r+0x16>
 8009364:	69ab      	ldr	r3, [r5, #24]
 8009366:	b913      	cbnz	r3, 800936e <__swsetup_r+0x16>
 8009368:	4628      	mov	r0, r5
 800936a:	f000 f985 	bl	8009678 <__sinit>
 800936e:	4b2e      	ldr	r3, [pc, #184]	; (8009428 <__swsetup_r+0xd0>)
 8009370:	429c      	cmp	r4, r3
 8009372:	d10f      	bne.n	8009394 <__swsetup_r+0x3c>
 8009374:	686c      	ldr	r4, [r5, #4]
 8009376:	89a3      	ldrh	r3, [r4, #12]
 8009378:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800937c:	0719      	lsls	r1, r3, #28
 800937e:	d42c      	bmi.n	80093da <__swsetup_r+0x82>
 8009380:	06dd      	lsls	r5, r3, #27
 8009382:	d411      	bmi.n	80093a8 <__swsetup_r+0x50>
 8009384:	2309      	movs	r3, #9
 8009386:	6033      	str	r3, [r6, #0]
 8009388:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800938c:	81a3      	strh	r3, [r4, #12]
 800938e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009392:	e03e      	b.n	8009412 <__swsetup_r+0xba>
 8009394:	4b25      	ldr	r3, [pc, #148]	; (800942c <__swsetup_r+0xd4>)
 8009396:	429c      	cmp	r4, r3
 8009398:	d101      	bne.n	800939e <__swsetup_r+0x46>
 800939a:	68ac      	ldr	r4, [r5, #8]
 800939c:	e7eb      	b.n	8009376 <__swsetup_r+0x1e>
 800939e:	4b24      	ldr	r3, [pc, #144]	; (8009430 <__swsetup_r+0xd8>)
 80093a0:	429c      	cmp	r4, r3
 80093a2:	bf08      	it	eq
 80093a4:	68ec      	ldreq	r4, [r5, #12]
 80093a6:	e7e6      	b.n	8009376 <__swsetup_r+0x1e>
 80093a8:	0758      	lsls	r0, r3, #29
 80093aa:	d512      	bpl.n	80093d2 <__swsetup_r+0x7a>
 80093ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80093ae:	b141      	cbz	r1, 80093c2 <__swsetup_r+0x6a>
 80093b0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80093b4:	4299      	cmp	r1, r3
 80093b6:	d002      	beq.n	80093be <__swsetup_r+0x66>
 80093b8:	4630      	mov	r0, r6
 80093ba:	f7ff fa41 	bl	8008840 <_free_r>
 80093be:	2300      	movs	r3, #0
 80093c0:	6363      	str	r3, [r4, #52]	; 0x34
 80093c2:	89a3      	ldrh	r3, [r4, #12]
 80093c4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80093c8:	81a3      	strh	r3, [r4, #12]
 80093ca:	2300      	movs	r3, #0
 80093cc:	6063      	str	r3, [r4, #4]
 80093ce:	6923      	ldr	r3, [r4, #16]
 80093d0:	6023      	str	r3, [r4, #0]
 80093d2:	89a3      	ldrh	r3, [r4, #12]
 80093d4:	f043 0308 	orr.w	r3, r3, #8
 80093d8:	81a3      	strh	r3, [r4, #12]
 80093da:	6923      	ldr	r3, [r4, #16]
 80093dc:	b94b      	cbnz	r3, 80093f2 <__swsetup_r+0x9a>
 80093de:	89a3      	ldrh	r3, [r4, #12]
 80093e0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80093e4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80093e8:	d003      	beq.n	80093f2 <__swsetup_r+0x9a>
 80093ea:	4621      	mov	r1, r4
 80093ec:	4630      	mov	r0, r6
 80093ee:	f000 fa09 	bl	8009804 <__smakebuf_r>
 80093f2:	89a0      	ldrh	r0, [r4, #12]
 80093f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80093f8:	f010 0301 	ands.w	r3, r0, #1
 80093fc:	d00a      	beq.n	8009414 <__swsetup_r+0xbc>
 80093fe:	2300      	movs	r3, #0
 8009400:	60a3      	str	r3, [r4, #8]
 8009402:	6963      	ldr	r3, [r4, #20]
 8009404:	425b      	negs	r3, r3
 8009406:	61a3      	str	r3, [r4, #24]
 8009408:	6923      	ldr	r3, [r4, #16]
 800940a:	b943      	cbnz	r3, 800941e <__swsetup_r+0xc6>
 800940c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8009410:	d1ba      	bne.n	8009388 <__swsetup_r+0x30>
 8009412:	bd70      	pop	{r4, r5, r6, pc}
 8009414:	0781      	lsls	r1, r0, #30
 8009416:	bf58      	it	pl
 8009418:	6963      	ldrpl	r3, [r4, #20]
 800941a:	60a3      	str	r3, [r4, #8]
 800941c:	e7f4      	b.n	8009408 <__swsetup_r+0xb0>
 800941e:	2000      	movs	r0, #0
 8009420:	e7f7      	b.n	8009412 <__swsetup_r+0xba>
 8009422:	bf00      	nop
 8009424:	200001d0 	.word	0x200001d0
 8009428:	08009e18 	.word	0x08009e18
 800942c:	08009e38 	.word	0x08009e38
 8009430:	08009df8 	.word	0x08009df8

08009434 <abort>:
 8009434:	b508      	push	{r3, lr}
 8009436:	2006      	movs	r0, #6
 8009438:	f000 fab0 	bl	800999c <raise>
 800943c:	2001      	movs	r0, #1
 800943e:	f7f8 f9c1 	bl	80017c4 <_exit>
	...

08009444 <__sflush_r>:
 8009444:	898a      	ldrh	r2, [r1, #12]
 8009446:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800944a:	4605      	mov	r5, r0
 800944c:	0710      	lsls	r0, r2, #28
 800944e:	460c      	mov	r4, r1
 8009450:	d458      	bmi.n	8009504 <__sflush_r+0xc0>
 8009452:	684b      	ldr	r3, [r1, #4]
 8009454:	2b00      	cmp	r3, #0
 8009456:	dc05      	bgt.n	8009464 <__sflush_r+0x20>
 8009458:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800945a:	2b00      	cmp	r3, #0
 800945c:	dc02      	bgt.n	8009464 <__sflush_r+0x20>
 800945e:	2000      	movs	r0, #0
 8009460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009464:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009466:	2e00      	cmp	r6, #0
 8009468:	d0f9      	beq.n	800945e <__sflush_r+0x1a>
 800946a:	2300      	movs	r3, #0
 800946c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8009470:	682f      	ldr	r7, [r5, #0]
 8009472:	602b      	str	r3, [r5, #0]
 8009474:	d032      	beq.n	80094dc <__sflush_r+0x98>
 8009476:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8009478:	89a3      	ldrh	r3, [r4, #12]
 800947a:	075a      	lsls	r2, r3, #29
 800947c:	d505      	bpl.n	800948a <__sflush_r+0x46>
 800947e:	6863      	ldr	r3, [r4, #4]
 8009480:	1ac0      	subs	r0, r0, r3
 8009482:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8009484:	b10b      	cbz	r3, 800948a <__sflush_r+0x46>
 8009486:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009488:	1ac0      	subs	r0, r0, r3
 800948a:	2300      	movs	r3, #0
 800948c:	4602      	mov	r2, r0
 800948e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8009490:	6a21      	ldr	r1, [r4, #32]
 8009492:	4628      	mov	r0, r5
 8009494:	47b0      	blx	r6
 8009496:	1c43      	adds	r3, r0, #1
 8009498:	89a3      	ldrh	r3, [r4, #12]
 800949a:	d106      	bne.n	80094aa <__sflush_r+0x66>
 800949c:	6829      	ldr	r1, [r5, #0]
 800949e:	291d      	cmp	r1, #29
 80094a0:	d82c      	bhi.n	80094fc <__sflush_r+0xb8>
 80094a2:	4a2a      	ldr	r2, [pc, #168]	; (800954c <__sflush_r+0x108>)
 80094a4:	40ca      	lsrs	r2, r1
 80094a6:	07d6      	lsls	r6, r2, #31
 80094a8:	d528      	bpl.n	80094fc <__sflush_r+0xb8>
 80094aa:	2200      	movs	r2, #0
 80094ac:	6062      	str	r2, [r4, #4]
 80094ae:	04d9      	lsls	r1, r3, #19
 80094b0:	6922      	ldr	r2, [r4, #16]
 80094b2:	6022      	str	r2, [r4, #0]
 80094b4:	d504      	bpl.n	80094c0 <__sflush_r+0x7c>
 80094b6:	1c42      	adds	r2, r0, #1
 80094b8:	d101      	bne.n	80094be <__sflush_r+0x7a>
 80094ba:	682b      	ldr	r3, [r5, #0]
 80094bc:	b903      	cbnz	r3, 80094c0 <__sflush_r+0x7c>
 80094be:	6560      	str	r0, [r4, #84]	; 0x54
 80094c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80094c2:	602f      	str	r7, [r5, #0]
 80094c4:	2900      	cmp	r1, #0
 80094c6:	d0ca      	beq.n	800945e <__sflush_r+0x1a>
 80094c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80094cc:	4299      	cmp	r1, r3
 80094ce:	d002      	beq.n	80094d6 <__sflush_r+0x92>
 80094d0:	4628      	mov	r0, r5
 80094d2:	f7ff f9b5 	bl	8008840 <_free_r>
 80094d6:	2000      	movs	r0, #0
 80094d8:	6360      	str	r0, [r4, #52]	; 0x34
 80094da:	e7c1      	b.n	8009460 <__sflush_r+0x1c>
 80094dc:	6a21      	ldr	r1, [r4, #32]
 80094de:	2301      	movs	r3, #1
 80094e0:	4628      	mov	r0, r5
 80094e2:	47b0      	blx	r6
 80094e4:	1c41      	adds	r1, r0, #1
 80094e6:	d1c7      	bne.n	8009478 <__sflush_r+0x34>
 80094e8:	682b      	ldr	r3, [r5, #0]
 80094ea:	2b00      	cmp	r3, #0
 80094ec:	d0c4      	beq.n	8009478 <__sflush_r+0x34>
 80094ee:	2b1d      	cmp	r3, #29
 80094f0:	d001      	beq.n	80094f6 <__sflush_r+0xb2>
 80094f2:	2b16      	cmp	r3, #22
 80094f4:	d101      	bne.n	80094fa <__sflush_r+0xb6>
 80094f6:	602f      	str	r7, [r5, #0]
 80094f8:	e7b1      	b.n	800945e <__sflush_r+0x1a>
 80094fa:	89a3      	ldrh	r3, [r4, #12]
 80094fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009500:	81a3      	strh	r3, [r4, #12]
 8009502:	e7ad      	b.n	8009460 <__sflush_r+0x1c>
 8009504:	690f      	ldr	r7, [r1, #16]
 8009506:	2f00      	cmp	r7, #0
 8009508:	d0a9      	beq.n	800945e <__sflush_r+0x1a>
 800950a:	0793      	lsls	r3, r2, #30
 800950c:	680e      	ldr	r6, [r1, #0]
 800950e:	bf08      	it	eq
 8009510:	694b      	ldreq	r3, [r1, #20]
 8009512:	600f      	str	r7, [r1, #0]
 8009514:	bf18      	it	ne
 8009516:	2300      	movne	r3, #0
 8009518:	eba6 0807 	sub.w	r8, r6, r7
 800951c:	608b      	str	r3, [r1, #8]
 800951e:	f1b8 0f00 	cmp.w	r8, #0
 8009522:	dd9c      	ble.n	800945e <__sflush_r+0x1a>
 8009524:	6a21      	ldr	r1, [r4, #32]
 8009526:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8009528:	4643      	mov	r3, r8
 800952a:	463a      	mov	r2, r7
 800952c:	4628      	mov	r0, r5
 800952e:	47b0      	blx	r6
 8009530:	2800      	cmp	r0, #0
 8009532:	dc06      	bgt.n	8009542 <__sflush_r+0xfe>
 8009534:	89a3      	ldrh	r3, [r4, #12]
 8009536:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800953a:	81a3      	strh	r3, [r4, #12]
 800953c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009540:	e78e      	b.n	8009460 <__sflush_r+0x1c>
 8009542:	4407      	add	r7, r0
 8009544:	eba8 0800 	sub.w	r8, r8, r0
 8009548:	e7e9      	b.n	800951e <__sflush_r+0xda>
 800954a:	bf00      	nop
 800954c:	20400001 	.word	0x20400001

08009550 <_fflush_r>:
 8009550:	b538      	push	{r3, r4, r5, lr}
 8009552:	690b      	ldr	r3, [r1, #16]
 8009554:	4605      	mov	r5, r0
 8009556:	460c      	mov	r4, r1
 8009558:	b913      	cbnz	r3, 8009560 <_fflush_r+0x10>
 800955a:	2500      	movs	r5, #0
 800955c:	4628      	mov	r0, r5
 800955e:	bd38      	pop	{r3, r4, r5, pc}
 8009560:	b118      	cbz	r0, 800956a <_fflush_r+0x1a>
 8009562:	6983      	ldr	r3, [r0, #24]
 8009564:	b90b      	cbnz	r3, 800956a <_fflush_r+0x1a>
 8009566:	f000 f887 	bl	8009678 <__sinit>
 800956a:	4b14      	ldr	r3, [pc, #80]	; (80095bc <_fflush_r+0x6c>)
 800956c:	429c      	cmp	r4, r3
 800956e:	d11b      	bne.n	80095a8 <_fflush_r+0x58>
 8009570:	686c      	ldr	r4, [r5, #4]
 8009572:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009576:	2b00      	cmp	r3, #0
 8009578:	d0ef      	beq.n	800955a <_fflush_r+0xa>
 800957a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800957c:	07d0      	lsls	r0, r2, #31
 800957e:	d404      	bmi.n	800958a <_fflush_r+0x3a>
 8009580:	0599      	lsls	r1, r3, #22
 8009582:	d402      	bmi.n	800958a <_fflush_r+0x3a>
 8009584:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009586:	f000 f915 	bl	80097b4 <__retarget_lock_acquire_recursive>
 800958a:	4628      	mov	r0, r5
 800958c:	4621      	mov	r1, r4
 800958e:	f7ff ff59 	bl	8009444 <__sflush_r>
 8009592:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8009594:	07da      	lsls	r2, r3, #31
 8009596:	4605      	mov	r5, r0
 8009598:	d4e0      	bmi.n	800955c <_fflush_r+0xc>
 800959a:	89a3      	ldrh	r3, [r4, #12]
 800959c:	059b      	lsls	r3, r3, #22
 800959e:	d4dd      	bmi.n	800955c <_fflush_r+0xc>
 80095a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80095a2:	f000 f908 	bl	80097b6 <__retarget_lock_release_recursive>
 80095a6:	e7d9      	b.n	800955c <_fflush_r+0xc>
 80095a8:	4b05      	ldr	r3, [pc, #20]	; (80095c0 <_fflush_r+0x70>)
 80095aa:	429c      	cmp	r4, r3
 80095ac:	d101      	bne.n	80095b2 <_fflush_r+0x62>
 80095ae:	68ac      	ldr	r4, [r5, #8]
 80095b0:	e7df      	b.n	8009572 <_fflush_r+0x22>
 80095b2:	4b04      	ldr	r3, [pc, #16]	; (80095c4 <_fflush_r+0x74>)
 80095b4:	429c      	cmp	r4, r3
 80095b6:	bf08      	it	eq
 80095b8:	68ec      	ldreq	r4, [r5, #12]
 80095ba:	e7da      	b.n	8009572 <_fflush_r+0x22>
 80095bc:	08009e18 	.word	0x08009e18
 80095c0:	08009e38 	.word	0x08009e38
 80095c4:	08009df8 	.word	0x08009df8

080095c8 <std>:
 80095c8:	2300      	movs	r3, #0
 80095ca:	b510      	push	{r4, lr}
 80095cc:	4604      	mov	r4, r0
 80095ce:	e9c0 3300 	strd	r3, r3, [r0]
 80095d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80095d6:	6083      	str	r3, [r0, #8]
 80095d8:	8181      	strh	r1, [r0, #12]
 80095da:	6643      	str	r3, [r0, #100]	; 0x64
 80095dc:	81c2      	strh	r2, [r0, #14]
 80095de:	6183      	str	r3, [r0, #24]
 80095e0:	4619      	mov	r1, r3
 80095e2:	2208      	movs	r2, #8
 80095e4:	305c      	adds	r0, #92	; 0x5c
 80095e6:	f7fe ffcf 	bl	8008588 <memset>
 80095ea:	4b05      	ldr	r3, [pc, #20]	; (8009600 <std+0x38>)
 80095ec:	6263      	str	r3, [r4, #36]	; 0x24
 80095ee:	4b05      	ldr	r3, [pc, #20]	; (8009604 <std+0x3c>)
 80095f0:	62a3      	str	r3, [r4, #40]	; 0x28
 80095f2:	4b05      	ldr	r3, [pc, #20]	; (8009608 <std+0x40>)
 80095f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80095f6:	4b05      	ldr	r3, [pc, #20]	; (800960c <std+0x44>)
 80095f8:	6224      	str	r4, [r4, #32]
 80095fa:	6323      	str	r3, [r4, #48]	; 0x30
 80095fc:	bd10      	pop	{r4, pc}
 80095fe:	bf00      	nop
 8009600:	080099d5 	.word	0x080099d5
 8009604:	080099f7 	.word	0x080099f7
 8009608:	08009a2f 	.word	0x08009a2f
 800960c:	08009a53 	.word	0x08009a53

08009610 <_cleanup_r>:
 8009610:	4901      	ldr	r1, [pc, #4]	; (8009618 <_cleanup_r+0x8>)
 8009612:	f000 b8af 	b.w	8009774 <_fwalk_reent>
 8009616:	bf00      	nop
 8009618:	08009551 	.word	0x08009551

0800961c <__sfmoreglue>:
 800961c:	b570      	push	{r4, r5, r6, lr}
 800961e:	2268      	movs	r2, #104	; 0x68
 8009620:	1e4d      	subs	r5, r1, #1
 8009622:	4355      	muls	r5, r2
 8009624:	460e      	mov	r6, r1
 8009626:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800962a:	f7ff f975 	bl	8008918 <_malloc_r>
 800962e:	4604      	mov	r4, r0
 8009630:	b140      	cbz	r0, 8009644 <__sfmoreglue+0x28>
 8009632:	2100      	movs	r1, #0
 8009634:	e9c0 1600 	strd	r1, r6, [r0]
 8009638:	300c      	adds	r0, #12
 800963a:	60a0      	str	r0, [r4, #8]
 800963c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8009640:	f7fe ffa2 	bl	8008588 <memset>
 8009644:	4620      	mov	r0, r4
 8009646:	bd70      	pop	{r4, r5, r6, pc}

08009648 <__sfp_lock_acquire>:
 8009648:	4801      	ldr	r0, [pc, #4]	; (8009650 <__sfp_lock_acquire+0x8>)
 800964a:	f000 b8b3 	b.w	80097b4 <__retarget_lock_acquire_recursive>
 800964e:	bf00      	nop
 8009650:	20000455 	.word	0x20000455

08009654 <__sfp_lock_release>:
 8009654:	4801      	ldr	r0, [pc, #4]	; (800965c <__sfp_lock_release+0x8>)
 8009656:	f000 b8ae 	b.w	80097b6 <__retarget_lock_release_recursive>
 800965a:	bf00      	nop
 800965c:	20000455 	.word	0x20000455

08009660 <__sinit_lock_acquire>:
 8009660:	4801      	ldr	r0, [pc, #4]	; (8009668 <__sinit_lock_acquire+0x8>)
 8009662:	f000 b8a7 	b.w	80097b4 <__retarget_lock_acquire_recursive>
 8009666:	bf00      	nop
 8009668:	20000456 	.word	0x20000456

0800966c <__sinit_lock_release>:
 800966c:	4801      	ldr	r0, [pc, #4]	; (8009674 <__sinit_lock_release+0x8>)
 800966e:	f000 b8a2 	b.w	80097b6 <__retarget_lock_release_recursive>
 8009672:	bf00      	nop
 8009674:	20000456 	.word	0x20000456

08009678 <__sinit>:
 8009678:	b510      	push	{r4, lr}
 800967a:	4604      	mov	r4, r0
 800967c:	f7ff fff0 	bl	8009660 <__sinit_lock_acquire>
 8009680:	69a3      	ldr	r3, [r4, #24]
 8009682:	b11b      	cbz	r3, 800968c <__sinit+0x14>
 8009684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009688:	f7ff bff0 	b.w	800966c <__sinit_lock_release>
 800968c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8009690:	6523      	str	r3, [r4, #80]	; 0x50
 8009692:	4b13      	ldr	r3, [pc, #76]	; (80096e0 <__sinit+0x68>)
 8009694:	4a13      	ldr	r2, [pc, #76]	; (80096e4 <__sinit+0x6c>)
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	62a2      	str	r2, [r4, #40]	; 0x28
 800969a:	42a3      	cmp	r3, r4
 800969c:	bf04      	itt	eq
 800969e:	2301      	moveq	r3, #1
 80096a0:	61a3      	streq	r3, [r4, #24]
 80096a2:	4620      	mov	r0, r4
 80096a4:	f000 f820 	bl	80096e8 <__sfp>
 80096a8:	6060      	str	r0, [r4, #4]
 80096aa:	4620      	mov	r0, r4
 80096ac:	f000 f81c 	bl	80096e8 <__sfp>
 80096b0:	60a0      	str	r0, [r4, #8]
 80096b2:	4620      	mov	r0, r4
 80096b4:	f000 f818 	bl	80096e8 <__sfp>
 80096b8:	2200      	movs	r2, #0
 80096ba:	60e0      	str	r0, [r4, #12]
 80096bc:	2104      	movs	r1, #4
 80096be:	6860      	ldr	r0, [r4, #4]
 80096c0:	f7ff ff82 	bl	80095c8 <std>
 80096c4:	68a0      	ldr	r0, [r4, #8]
 80096c6:	2201      	movs	r2, #1
 80096c8:	2109      	movs	r1, #9
 80096ca:	f7ff ff7d 	bl	80095c8 <std>
 80096ce:	68e0      	ldr	r0, [r4, #12]
 80096d0:	2202      	movs	r2, #2
 80096d2:	2112      	movs	r1, #18
 80096d4:	f7ff ff78 	bl	80095c8 <std>
 80096d8:	2301      	movs	r3, #1
 80096da:	61a3      	str	r3, [r4, #24]
 80096dc:	e7d2      	b.n	8009684 <__sinit+0xc>
 80096de:	bf00      	nop
 80096e0:	08009c10 	.word	0x08009c10
 80096e4:	08009611 	.word	0x08009611

080096e8 <__sfp>:
 80096e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80096ea:	4607      	mov	r7, r0
 80096ec:	f7ff ffac 	bl	8009648 <__sfp_lock_acquire>
 80096f0:	4b1e      	ldr	r3, [pc, #120]	; (800976c <__sfp+0x84>)
 80096f2:	681e      	ldr	r6, [r3, #0]
 80096f4:	69b3      	ldr	r3, [r6, #24]
 80096f6:	b913      	cbnz	r3, 80096fe <__sfp+0x16>
 80096f8:	4630      	mov	r0, r6
 80096fa:	f7ff ffbd 	bl	8009678 <__sinit>
 80096fe:	3648      	adds	r6, #72	; 0x48
 8009700:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8009704:	3b01      	subs	r3, #1
 8009706:	d503      	bpl.n	8009710 <__sfp+0x28>
 8009708:	6833      	ldr	r3, [r6, #0]
 800970a:	b30b      	cbz	r3, 8009750 <__sfp+0x68>
 800970c:	6836      	ldr	r6, [r6, #0]
 800970e:	e7f7      	b.n	8009700 <__sfp+0x18>
 8009710:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8009714:	b9d5      	cbnz	r5, 800974c <__sfp+0x64>
 8009716:	4b16      	ldr	r3, [pc, #88]	; (8009770 <__sfp+0x88>)
 8009718:	60e3      	str	r3, [r4, #12]
 800971a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800971e:	6665      	str	r5, [r4, #100]	; 0x64
 8009720:	f000 f847 	bl	80097b2 <__retarget_lock_init_recursive>
 8009724:	f7ff ff96 	bl	8009654 <__sfp_lock_release>
 8009728:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800972c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8009730:	6025      	str	r5, [r4, #0]
 8009732:	61a5      	str	r5, [r4, #24]
 8009734:	2208      	movs	r2, #8
 8009736:	4629      	mov	r1, r5
 8009738:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800973c:	f7fe ff24 	bl	8008588 <memset>
 8009740:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8009744:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8009748:	4620      	mov	r0, r4
 800974a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800974c:	3468      	adds	r4, #104	; 0x68
 800974e:	e7d9      	b.n	8009704 <__sfp+0x1c>
 8009750:	2104      	movs	r1, #4
 8009752:	4638      	mov	r0, r7
 8009754:	f7ff ff62 	bl	800961c <__sfmoreglue>
 8009758:	4604      	mov	r4, r0
 800975a:	6030      	str	r0, [r6, #0]
 800975c:	2800      	cmp	r0, #0
 800975e:	d1d5      	bne.n	800970c <__sfp+0x24>
 8009760:	f7ff ff78 	bl	8009654 <__sfp_lock_release>
 8009764:	230c      	movs	r3, #12
 8009766:	603b      	str	r3, [r7, #0]
 8009768:	e7ee      	b.n	8009748 <__sfp+0x60>
 800976a:	bf00      	nop
 800976c:	08009c10 	.word	0x08009c10
 8009770:	ffff0001 	.word	0xffff0001

08009774 <_fwalk_reent>:
 8009774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009778:	4606      	mov	r6, r0
 800977a:	4688      	mov	r8, r1
 800977c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8009780:	2700      	movs	r7, #0
 8009782:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8009786:	f1b9 0901 	subs.w	r9, r9, #1
 800978a:	d505      	bpl.n	8009798 <_fwalk_reent+0x24>
 800978c:	6824      	ldr	r4, [r4, #0]
 800978e:	2c00      	cmp	r4, #0
 8009790:	d1f7      	bne.n	8009782 <_fwalk_reent+0xe>
 8009792:	4638      	mov	r0, r7
 8009794:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009798:	89ab      	ldrh	r3, [r5, #12]
 800979a:	2b01      	cmp	r3, #1
 800979c:	d907      	bls.n	80097ae <_fwalk_reent+0x3a>
 800979e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80097a2:	3301      	adds	r3, #1
 80097a4:	d003      	beq.n	80097ae <_fwalk_reent+0x3a>
 80097a6:	4629      	mov	r1, r5
 80097a8:	4630      	mov	r0, r6
 80097aa:	47c0      	blx	r8
 80097ac:	4307      	orrs	r7, r0
 80097ae:	3568      	adds	r5, #104	; 0x68
 80097b0:	e7e9      	b.n	8009786 <_fwalk_reent+0x12>

080097b2 <__retarget_lock_init_recursive>:
 80097b2:	4770      	bx	lr

080097b4 <__retarget_lock_acquire_recursive>:
 80097b4:	4770      	bx	lr

080097b6 <__retarget_lock_release_recursive>:
 80097b6:	4770      	bx	lr

080097b8 <__swhatbuf_r>:
 80097b8:	b570      	push	{r4, r5, r6, lr}
 80097ba:	460e      	mov	r6, r1
 80097bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80097c0:	2900      	cmp	r1, #0
 80097c2:	b096      	sub	sp, #88	; 0x58
 80097c4:	4614      	mov	r4, r2
 80097c6:	461d      	mov	r5, r3
 80097c8:	da08      	bge.n	80097dc <__swhatbuf_r+0x24>
 80097ca:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80097ce:	2200      	movs	r2, #0
 80097d0:	602a      	str	r2, [r5, #0]
 80097d2:	061a      	lsls	r2, r3, #24
 80097d4:	d410      	bmi.n	80097f8 <__swhatbuf_r+0x40>
 80097d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80097da:	e00e      	b.n	80097fa <__swhatbuf_r+0x42>
 80097dc:	466a      	mov	r2, sp
 80097de:	f000 f95f 	bl	8009aa0 <_fstat_r>
 80097e2:	2800      	cmp	r0, #0
 80097e4:	dbf1      	blt.n	80097ca <__swhatbuf_r+0x12>
 80097e6:	9a01      	ldr	r2, [sp, #4]
 80097e8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80097ec:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80097f0:	425a      	negs	r2, r3
 80097f2:	415a      	adcs	r2, r3
 80097f4:	602a      	str	r2, [r5, #0]
 80097f6:	e7ee      	b.n	80097d6 <__swhatbuf_r+0x1e>
 80097f8:	2340      	movs	r3, #64	; 0x40
 80097fa:	2000      	movs	r0, #0
 80097fc:	6023      	str	r3, [r4, #0]
 80097fe:	b016      	add	sp, #88	; 0x58
 8009800:	bd70      	pop	{r4, r5, r6, pc}
	...

08009804 <__smakebuf_r>:
 8009804:	898b      	ldrh	r3, [r1, #12]
 8009806:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009808:	079d      	lsls	r5, r3, #30
 800980a:	4606      	mov	r6, r0
 800980c:	460c      	mov	r4, r1
 800980e:	d507      	bpl.n	8009820 <__smakebuf_r+0x1c>
 8009810:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8009814:	6023      	str	r3, [r4, #0]
 8009816:	6123      	str	r3, [r4, #16]
 8009818:	2301      	movs	r3, #1
 800981a:	6163      	str	r3, [r4, #20]
 800981c:	b002      	add	sp, #8
 800981e:	bd70      	pop	{r4, r5, r6, pc}
 8009820:	ab01      	add	r3, sp, #4
 8009822:	466a      	mov	r2, sp
 8009824:	f7ff ffc8 	bl	80097b8 <__swhatbuf_r>
 8009828:	9900      	ldr	r1, [sp, #0]
 800982a:	4605      	mov	r5, r0
 800982c:	4630      	mov	r0, r6
 800982e:	f7ff f873 	bl	8008918 <_malloc_r>
 8009832:	b948      	cbnz	r0, 8009848 <__smakebuf_r+0x44>
 8009834:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8009838:	059a      	lsls	r2, r3, #22
 800983a:	d4ef      	bmi.n	800981c <__smakebuf_r+0x18>
 800983c:	f023 0303 	bic.w	r3, r3, #3
 8009840:	f043 0302 	orr.w	r3, r3, #2
 8009844:	81a3      	strh	r3, [r4, #12]
 8009846:	e7e3      	b.n	8009810 <__smakebuf_r+0xc>
 8009848:	4b0d      	ldr	r3, [pc, #52]	; (8009880 <__smakebuf_r+0x7c>)
 800984a:	62b3      	str	r3, [r6, #40]	; 0x28
 800984c:	89a3      	ldrh	r3, [r4, #12]
 800984e:	6020      	str	r0, [r4, #0]
 8009850:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009854:	81a3      	strh	r3, [r4, #12]
 8009856:	9b00      	ldr	r3, [sp, #0]
 8009858:	6163      	str	r3, [r4, #20]
 800985a:	9b01      	ldr	r3, [sp, #4]
 800985c:	6120      	str	r0, [r4, #16]
 800985e:	b15b      	cbz	r3, 8009878 <__smakebuf_r+0x74>
 8009860:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8009864:	4630      	mov	r0, r6
 8009866:	f000 f92d 	bl	8009ac4 <_isatty_r>
 800986a:	b128      	cbz	r0, 8009878 <__smakebuf_r+0x74>
 800986c:	89a3      	ldrh	r3, [r4, #12]
 800986e:	f023 0303 	bic.w	r3, r3, #3
 8009872:	f043 0301 	orr.w	r3, r3, #1
 8009876:	81a3      	strh	r3, [r4, #12]
 8009878:	89a0      	ldrh	r0, [r4, #12]
 800987a:	4305      	orrs	r5, r0
 800987c:	81a5      	strh	r5, [r4, #12]
 800987e:	e7cd      	b.n	800981c <__smakebuf_r+0x18>
 8009880:	08009611 	.word	0x08009611

08009884 <memcpy>:
 8009884:	440a      	add	r2, r1
 8009886:	4291      	cmp	r1, r2
 8009888:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800988c:	d100      	bne.n	8009890 <memcpy+0xc>
 800988e:	4770      	bx	lr
 8009890:	b510      	push	{r4, lr}
 8009892:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009896:	f803 4f01 	strb.w	r4, [r3, #1]!
 800989a:	4291      	cmp	r1, r2
 800989c:	d1f9      	bne.n	8009892 <memcpy+0xe>
 800989e:	bd10      	pop	{r4, pc}

080098a0 <memmove>:
 80098a0:	4288      	cmp	r0, r1
 80098a2:	b510      	push	{r4, lr}
 80098a4:	eb01 0402 	add.w	r4, r1, r2
 80098a8:	d902      	bls.n	80098b0 <memmove+0x10>
 80098aa:	4284      	cmp	r4, r0
 80098ac:	4623      	mov	r3, r4
 80098ae:	d807      	bhi.n	80098c0 <memmove+0x20>
 80098b0:	1e43      	subs	r3, r0, #1
 80098b2:	42a1      	cmp	r1, r4
 80098b4:	d008      	beq.n	80098c8 <memmove+0x28>
 80098b6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80098ba:	f803 2f01 	strb.w	r2, [r3, #1]!
 80098be:	e7f8      	b.n	80098b2 <memmove+0x12>
 80098c0:	4402      	add	r2, r0
 80098c2:	4601      	mov	r1, r0
 80098c4:	428a      	cmp	r2, r1
 80098c6:	d100      	bne.n	80098ca <memmove+0x2a>
 80098c8:	bd10      	pop	{r4, pc}
 80098ca:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80098ce:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80098d2:	e7f7      	b.n	80098c4 <memmove+0x24>

080098d4 <__malloc_lock>:
 80098d4:	4801      	ldr	r0, [pc, #4]	; (80098dc <__malloc_lock+0x8>)
 80098d6:	f7ff bf6d 	b.w	80097b4 <__retarget_lock_acquire_recursive>
 80098da:	bf00      	nop
 80098dc:	20000454 	.word	0x20000454

080098e0 <__malloc_unlock>:
 80098e0:	4801      	ldr	r0, [pc, #4]	; (80098e8 <__malloc_unlock+0x8>)
 80098e2:	f7ff bf68 	b.w	80097b6 <__retarget_lock_release_recursive>
 80098e6:	bf00      	nop
 80098e8:	20000454 	.word	0x20000454

080098ec <_realloc_r>:
 80098ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098f0:	4680      	mov	r8, r0
 80098f2:	4614      	mov	r4, r2
 80098f4:	460e      	mov	r6, r1
 80098f6:	b921      	cbnz	r1, 8009902 <_realloc_r+0x16>
 80098f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80098fc:	4611      	mov	r1, r2
 80098fe:	f7ff b80b 	b.w	8008918 <_malloc_r>
 8009902:	b92a      	cbnz	r2, 8009910 <_realloc_r+0x24>
 8009904:	f7fe ff9c 	bl	8008840 <_free_r>
 8009908:	4625      	mov	r5, r4
 800990a:	4628      	mov	r0, r5
 800990c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009910:	f000 f8fa 	bl	8009b08 <_malloc_usable_size_r>
 8009914:	4284      	cmp	r4, r0
 8009916:	4607      	mov	r7, r0
 8009918:	d802      	bhi.n	8009920 <_realloc_r+0x34>
 800991a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800991e:	d812      	bhi.n	8009946 <_realloc_r+0x5a>
 8009920:	4621      	mov	r1, r4
 8009922:	4640      	mov	r0, r8
 8009924:	f7fe fff8 	bl	8008918 <_malloc_r>
 8009928:	4605      	mov	r5, r0
 800992a:	2800      	cmp	r0, #0
 800992c:	d0ed      	beq.n	800990a <_realloc_r+0x1e>
 800992e:	42bc      	cmp	r4, r7
 8009930:	4622      	mov	r2, r4
 8009932:	4631      	mov	r1, r6
 8009934:	bf28      	it	cs
 8009936:	463a      	movcs	r2, r7
 8009938:	f7ff ffa4 	bl	8009884 <memcpy>
 800993c:	4631      	mov	r1, r6
 800993e:	4640      	mov	r0, r8
 8009940:	f7fe ff7e 	bl	8008840 <_free_r>
 8009944:	e7e1      	b.n	800990a <_realloc_r+0x1e>
 8009946:	4635      	mov	r5, r6
 8009948:	e7df      	b.n	800990a <_realloc_r+0x1e>

0800994a <_raise_r>:
 800994a:	291f      	cmp	r1, #31
 800994c:	b538      	push	{r3, r4, r5, lr}
 800994e:	4604      	mov	r4, r0
 8009950:	460d      	mov	r5, r1
 8009952:	d904      	bls.n	800995e <_raise_r+0x14>
 8009954:	2316      	movs	r3, #22
 8009956:	6003      	str	r3, [r0, #0]
 8009958:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800995c:	bd38      	pop	{r3, r4, r5, pc}
 800995e:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8009960:	b112      	cbz	r2, 8009968 <_raise_r+0x1e>
 8009962:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8009966:	b94b      	cbnz	r3, 800997c <_raise_r+0x32>
 8009968:	4620      	mov	r0, r4
 800996a:	f000 f831 	bl	80099d0 <_getpid_r>
 800996e:	462a      	mov	r2, r5
 8009970:	4601      	mov	r1, r0
 8009972:	4620      	mov	r0, r4
 8009974:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009978:	f000 b818 	b.w	80099ac <_kill_r>
 800997c:	2b01      	cmp	r3, #1
 800997e:	d00a      	beq.n	8009996 <_raise_r+0x4c>
 8009980:	1c59      	adds	r1, r3, #1
 8009982:	d103      	bne.n	800998c <_raise_r+0x42>
 8009984:	2316      	movs	r3, #22
 8009986:	6003      	str	r3, [r0, #0]
 8009988:	2001      	movs	r0, #1
 800998a:	e7e7      	b.n	800995c <_raise_r+0x12>
 800998c:	2400      	movs	r4, #0
 800998e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8009992:	4628      	mov	r0, r5
 8009994:	4798      	blx	r3
 8009996:	2000      	movs	r0, #0
 8009998:	e7e0      	b.n	800995c <_raise_r+0x12>
	...

0800999c <raise>:
 800999c:	4b02      	ldr	r3, [pc, #8]	; (80099a8 <raise+0xc>)
 800999e:	4601      	mov	r1, r0
 80099a0:	6818      	ldr	r0, [r3, #0]
 80099a2:	f7ff bfd2 	b.w	800994a <_raise_r>
 80099a6:	bf00      	nop
 80099a8:	200001d0 	.word	0x200001d0

080099ac <_kill_r>:
 80099ac:	b538      	push	{r3, r4, r5, lr}
 80099ae:	4d07      	ldr	r5, [pc, #28]	; (80099cc <_kill_r+0x20>)
 80099b0:	2300      	movs	r3, #0
 80099b2:	4604      	mov	r4, r0
 80099b4:	4608      	mov	r0, r1
 80099b6:	4611      	mov	r1, r2
 80099b8:	602b      	str	r3, [r5, #0]
 80099ba:	f7f7 fef3 	bl	80017a4 <_kill>
 80099be:	1c43      	adds	r3, r0, #1
 80099c0:	d102      	bne.n	80099c8 <_kill_r+0x1c>
 80099c2:	682b      	ldr	r3, [r5, #0]
 80099c4:	b103      	cbz	r3, 80099c8 <_kill_r+0x1c>
 80099c6:	6023      	str	r3, [r4, #0]
 80099c8:	bd38      	pop	{r3, r4, r5, pc}
 80099ca:	bf00      	nop
 80099cc:	20000458 	.word	0x20000458

080099d0 <_getpid_r>:
 80099d0:	f7f7 bee0 	b.w	8001794 <_getpid>

080099d4 <__sread>:
 80099d4:	b510      	push	{r4, lr}
 80099d6:	460c      	mov	r4, r1
 80099d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80099dc:	f000 f89c 	bl	8009b18 <_read_r>
 80099e0:	2800      	cmp	r0, #0
 80099e2:	bfab      	itete	ge
 80099e4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80099e6:	89a3      	ldrhlt	r3, [r4, #12]
 80099e8:	181b      	addge	r3, r3, r0
 80099ea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80099ee:	bfac      	ite	ge
 80099f0:	6563      	strge	r3, [r4, #84]	; 0x54
 80099f2:	81a3      	strhlt	r3, [r4, #12]
 80099f4:	bd10      	pop	{r4, pc}

080099f6 <__swrite>:
 80099f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099fa:	461f      	mov	r7, r3
 80099fc:	898b      	ldrh	r3, [r1, #12]
 80099fe:	05db      	lsls	r3, r3, #23
 8009a00:	4605      	mov	r5, r0
 8009a02:	460c      	mov	r4, r1
 8009a04:	4616      	mov	r6, r2
 8009a06:	d505      	bpl.n	8009a14 <__swrite+0x1e>
 8009a08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009a0c:	2302      	movs	r3, #2
 8009a0e:	2200      	movs	r2, #0
 8009a10:	f000 f868 	bl	8009ae4 <_lseek_r>
 8009a14:	89a3      	ldrh	r3, [r4, #12]
 8009a16:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8009a1a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8009a1e:	81a3      	strh	r3, [r4, #12]
 8009a20:	4632      	mov	r2, r6
 8009a22:	463b      	mov	r3, r7
 8009a24:	4628      	mov	r0, r5
 8009a26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009a2a:	f000 b817 	b.w	8009a5c <_write_r>

08009a2e <__sseek>:
 8009a2e:	b510      	push	{r4, lr}
 8009a30:	460c      	mov	r4, r1
 8009a32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009a36:	f000 f855 	bl	8009ae4 <_lseek_r>
 8009a3a:	1c43      	adds	r3, r0, #1
 8009a3c:	89a3      	ldrh	r3, [r4, #12]
 8009a3e:	bf15      	itete	ne
 8009a40:	6560      	strne	r0, [r4, #84]	; 0x54
 8009a42:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8009a46:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8009a4a:	81a3      	strheq	r3, [r4, #12]
 8009a4c:	bf18      	it	ne
 8009a4e:	81a3      	strhne	r3, [r4, #12]
 8009a50:	bd10      	pop	{r4, pc}

08009a52 <__sclose>:
 8009a52:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8009a56:	f000 b813 	b.w	8009a80 <_close_r>
	...

08009a5c <_write_r>:
 8009a5c:	b538      	push	{r3, r4, r5, lr}
 8009a5e:	4d07      	ldr	r5, [pc, #28]	; (8009a7c <_write_r+0x20>)
 8009a60:	4604      	mov	r4, r0
 8009a62:	4608      	mov	r0, r1
 8009a64:	4611      	mov	r1, r2
 8009a66:	2200      	movs	r2, #0
 8009a68:	602a      	str	r2, [r5, #0]
 8009a6a:	461a      	mov	r2, r3
 8009a6c:	f7f7 fed1 	bl	8001812 <_write>
 8009a70:	1c43      	adds	r3, r0, #1
 8009a72:	d102      	bne.n	8009a7a <_write_r+0x1e>
 8009a74:	682b      	ldr	r3, [r5, #0]
 8009a76:	b103      	cbz	r3, 8009a7a <_write_r+0x1e>
 8009a78:	6023      	str	r3, [r4, #0]
 8009a7a:	bd38      	pop	{r3, r4, r5, pc}
 8009a7c:	20000458 	.word	0x20000458

08009a80 <_close_r>:
 8009a80:	b538      	push	{r3, r4, r5, lr}
 8009a82:	4d06      	ldr	r5, [pc, #24]	; (8009a9c <_close_r+0x1c>)
 8009a84:	2300      	movs	r3, #0
 8009a86:	4604      	mov	r4, r0
 8009a88:	4608      	mov	r0, r1
 8009a8a:	602b      	str	r3, [r5, #0]
 8009a8c:	f7f7 fedd 	bl	800184a <_close>
 8009a90:	1c43      	adds	r3, r0, #1
 8009a92:	d102      	bne.n	8009a9a <_close_r+0x1a>
 8009a94:	682b      	ldr	r3, [r5, #0]
 8009a96:	b103      	cbz	r3, 8009a9a <_close_r+0x1a>
 8009a98:	6023      	str	r3, [r4, #0]
 8009a9a:	bd38      	pop	{r3, r4, r5, pc}
 8009a9c:	20000458 	.word	0x20000458

08009aa0 <_fstat_r>:
 8009aa0:	b538      	push	{r3, r4, r5, lr}
 8009aa2:	4d07      	ldr	r5, [pc, #28]	; (8009ac0 <_fstat_r+0x20>)
 8009aa4:	2300      	movs	r3, #0
 8009aa6:	4604      	mov	r4, r0
 8009aa8:	4608      	mov	r0, r1
 8009aaa:	4611      	mov	r1, r2
 8009aac:	602b      	str	r3, [r5, #0]
 8009aae:	f7f7 fed8 	bl	8001862 <_fstat>
 8009ab2:	1c43      	adds	r3, r0, #1
 8009ab4:	d102      	bne.n	8009abc <_fstat_r+0x1c>
 8009ab6:	682b      	ldr	r3, [r5, #0]
 8009ab8:	b103      	cbz	r3, 8009abc <_fstat_r+0x1c>
 8009aba:	6023      	str	r3, [r4, #0]
 8009abc:	bd38      	pop	{r3, r4, r5, pc}
 8009abe:	bf00      	nop
 8009ac0:	20000458 	.word	0x20000458

08009ac4 <_isatty_r>:
 8009ac4:	b538      	push	{r3, r4, r5, lr}
 8009ac6:	4d06      	ldr	r5, [pc, #24]	; (8009ae0 <_isatty_r+0x1c>)
 8009ac8:	2300      	movs	r3, #0
 8009aca:	4604      	mov	r4, r0
 8009acc:	4608      	mov	r0, r1
 8009ace:	602b      	str	r3, [r5, #0]
 8009ad0:	f7f7 fed7 	bl	8001882 <_isatty>
 8009ad4:	1c43      	adds	r3, r0, #1
 8009ad6:	d102      	bne.n	8009ade <_isatty_r+0x1a>
 8009ad8:	682b      	ldr	r3, [r5, #0]
 8009ada:	b103      	cbz	r3, 8009ade <_isatty_r+0x1a>
 8009adc:	6023      	str	r3, [r4, #0]
 8009ade:	bd38      	pop	{r3, r4, r5, pc}
 8009ae0:	20000458 	.word	0x20000458

08009ae4 <_lseek_r>:
 8009ae4:	b538      	push	{r3, r4, r5, lr}
 8009ae6:	4d07      	ldr	r5, [pc, #28]	; (8009b04 <_lseek_r+0x20>)
 8009ae8:	4604      	mov	r4, r0
 8009aea:	4608      	mov	r0, r1
 8009aec:	4611      	mov	r1, r2
 8009aee:	2200      	movs	r2, #0
 8009af0:	602a      	str	r2, [r5, #0]
 8009af2:	461a      	mov	r2, r3
 8009af4:	f7f7 fed0 	bl	8001898 <_lseek>
 8009af8:	1c43      	adds	r3, r0, #1
 8009afa:	d102      	bne.n	8009b02 <_lseek_r+0x1e>
 8009afc:	682b      	ldr	r3, [r5, #0]
 8009afe:	b103      	cbz	r3, 8009b02 <_lseek_r+0x1e>
 8009b00:	6023      	str	r3, [r4, #0]
 8009b02:	bd38      	pop	{r3, r4, r5, pc}
 8009b04:	20000458 	.word	0x20000458

08009b08 <_malloc_usable_size_r>:
 8009b08:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8009b0c:	1f18      	subs	r0, r3, #4
 8009b0e:	2b00      	cmp	r3, #0
 8009b10:	bfbc      	itt	lt
 8009b12:	580b      	ldrlt	r3, [r1, r0]
 8009b14:	18c0      	addlt	r0, r0, r3
 8009b16:	4770      	bx	lr

08009b18 <_read_r>:
 8009b18:	b538      	push	{r3, r4, r5, lr}
 8009b1a:	4d07      	ldr	r5, [pc, #28]	; (8009b38 <_read_r+0x20>)
 8009b1c:	4604      	mov	r4, r0
 8009b1e:	4608      	mov	r0, r1
 8009b20:	4611      	mov	r1, r2
 8009b22:	2200      	movs	r2, #0
 8009b24:	602a      	str	r2, [r5, #0]
 8009b26:	461a      	mov	r2, r3
 8009b28:	f7f7 fe56 	bl	80017d8 <_read>
 8009b2c:	1c43      	adds	r3, r0, #1
 8009b2e:	d102      	bne.n	8009b36 <_read_r+0x1e>
 8009b30:	682b      	ldr	r3, [r5, #0]
 8009b32:	b103      	cbz	r3, 8009b36 <_read_r+0x1e>
 8009b34:	6023      	str	r3, [r4, #0]
 8009b36:	bd38      	pop	{r3, r4, r5, pc}
 8009b38:	20000458 	.word	0x20000458

08009b3c <_init>:
 8009b3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009b3e:	bf00      	nop
 8009b40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009b42:	bc08      	pop	{r3}
 8009b44:	469e      	mov	lr, r3
 8009b46:	4770      	bx	lr

08009b48 <_fini>:
 8009b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009b4a:	bf00      	nop
 8009b4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009b4e:	bc08      	pop	{r3}
 8009b50:	469e      	mov	lr, r3
 8009b52:	4770      	bx	lr
